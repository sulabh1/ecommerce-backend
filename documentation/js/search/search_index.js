var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddEmailVerification1758794208948.html",[0,0.206,1,2.997]],["body/classes/AddEmailVerification1758794208948.html",[0,0.22,1,5.164,2,0.889,3,0.166,4,0.166,5,0.166,6,5.753,7,3.564,8,3.18,9,4.834,10,0.224,11,0.843,12,0.994,13,1.72,14,2.749,15,2.521,16,4.287,17,3.18,18,0.573,19,0.016,20,0.396,21,2.348,22,1.91,23,0.634,24,4.117,25,4.287,26,5.827,27,4.117,28,1.007,29,0.767,30,1.72,31,2.349,32,4.287,33,4.117,34,0.185,35,4.287,36,6.222,37,1.82,38,0.185,39,2.556,40,4.117,41,2.108,42,4.775,43,2.126,44,1.95,45,5.517,46,3.821,47,3.564,48,2.223,49,3.564,50,3.199,51,2.709,52,1.736,53,4.423,54,3.564,55,3.564,56,3.564,57,4.287,58,1.403,59,4.775,60,1.736,61,3.564,62,2.927,63,3.564,64,3.564,65,3.564,66,3.199,67,4.117,68,4.117,69,4.775,70,4.117,71,4.117,72,5.517,73,0.011,74,0.011]],["title/classes/AddOtpForeignKey1758745851584.html",[0,0.206,75,2.997]],["body/classes/AddOtpForeignKey1758745851584.html",[0,0.269,2,1.084,3,0.202,4,0.202,5,0.202,8,3.615,9,5.316,10,0.273,12,0.863,13,1.955,14,2.899,15,2.659,16,4.874,17,3.615,18,0.467,19,0.016,23,0.639,25,4.874,26,6.047,28,1.144,29,0.872,30,1.955,31,2.532,32,4.874,34,0.225,37,2.218,38,0.225,39,2.314,41,1.7,50,3.901,52,2.117,57,3.901,69,4.345,73,0.012,74,0.012,75,4.874,76,5.922,77,4.345,78,5.02,79,5.02,80,6.273,81,5.02,82,6.273,83,5.02,84,3.568,85,5.02,86,5.02,87,5.02,88,5.02]],["title/controllers/AppController.html",[89,2.223,90,2.742]],["body/controllers/AppController.html",[0,0.303,3,0.228,4,0.228,5,0.228,10,0.308,13,2.105,19,0.016,20,0.649,23,0.577,30,1.765,34,0.303,38,0.254,73,0.013,74,0.013,89,3.892,90,4.8,91,3.265,92,4.902,93,6.466,94,2.089,95,5.664,96,0.989,97,4.43,98,4.902,99,4.026,100,2.089,101,1.383,102,5.664]],["title/classes/AppError.html",[0,0.206,103,1.704]],["body/classes/AppError.html",[0,0.395,2,1.178,3,0.163,4,0.163,5,0.163,10,0.22,11,0.833,12,0.511,14,2.958,18,0.513,19,0.016,20,0.75,23,0.702,28,0.739,29,0.858,34,0.182,38,0.331,73,0.011,74,0.011,96,0.708,103,3.303,104,2.082,105,2.88,106,1.446,107,3.214,108,2.906,109,2.058,110,3.745,111,1.228,112,3.206,113,1.748,114,4.05,115,2.082,116,4.05,117,4.05,118,4.05,119,4.05,120,1.632,121,3.206,122,2.201,123,2.201,124,2.201,125,2.201,126,2.201,127,1.879,128,2.301,129,1.708,130,1.879,131,2.201,132,2.201,133,1.79,134,1.632,135,1.976,136,1.79,137,2.201,138,1.976,139,2.201,140,2.201,141,2.201,142,1.879,143,2.201,144,1.976,145,2.201,146,1.976,147,2.201,148,2.201,149,1.879,150,1.708,151,1.79,152,2.201,153,2.201]],["title/classes/AppHttpException.html",[0,0.206,154,2.368]],["body/classes/AppHttpException.html",[0,0.372,2,1.001,3,0.187,4,0.187,5,0.187,10,0.252,11,0.911,12,0.584,14,2.84,18,0.491,19,0.016,20,0.744,23,0.671,28,0.846,29,0.917,34,0.208,38,0.312,58,1.178,73,0.012,74,0.012,96,0.81,105,2.775,106,1.545,107,3.108,108,3.036,109,1.859,111,1.342,112,3.076,115,2.383,120,2.804,121,3.076,128,2.514,129,1.954,134,1.867,136,2.048,150,1.954,154,4.422,155,4.58,156,2.846,157,4.338,158,5.119,159,3.579,160,4.634,161,4.634,162,4.634,163,2.846,164,2.846,165,2.846,166,2.846,167,2.846,168,3.294]],["title/modules/AppModule.html",[169,1.554,170,2.742]],["body/modules/AppModule.html",[0,0.252,3,0.189,4,0.189,5,0.189,19,0.016,34,0.345,38,0.211,48,1.895,73,0.012,74,0.012,90,4.72,91,3.47,96,0.822,97,4.544,98,4.072,101,1.149,169,2.675,170,5.58,171,2.295,172,2.079,173,2.712,174,2.712,175,2.419,176,3.827,177,2.712,178,4.072,179,4.072,180,4.072,181,4.87,182,4.544,183,4.544,184,3.47,185,2.295,186,2.557,187,4.705,188,3.962,189,3.656,190,2.889,191,3.656,192,2.295,193,4.705,194,4.072,195,4.678,196,4.705,197,4.705,198,4.072,199,4.705,200,4.705,201,4.705,202,4.705,203,4.705,204,4.705,205,3.656,206,1.297,207,3.962]],["title/injectables/AppService.html",[97,2.368,208,0.904]],["body/injectables/AppService.html",[0,0.311,3,0.234,4,0.234,5,0.234,10,0.316,13,2.137,19,0.016,20,0.659,23,0.592,30,1.811,34,0.261,38,0.261,73,0.014,74,0.014,93,6.52,96,1.015,97,4.209,101,1.419,208,1.607,209,2.45,210,5.029,211,5.81,212,5.81,213,5.81]],["title/controllers/AuthController.html",[89,2.223,214,2.742]],["body/controllers/AuthController.html",[0,0.188,3,0.141,4,0.141,5,0.141,10,0.191,12,0.783,13,1.541,15,2.649,18,0.506,19,0.016,23,0.633,28,1.133,29,0.864,30,1.937,31,2.195,34,0.32,38,0.157,39,1.295,41,1.939,58,1.775,60,2.761,73,0.01,74,0.01,89,2.023,91,2.023,94,2.292,96,0.613,99,2.495,100,1.295,101,1.517,120,1.414,159,3.367,206,0.968,214,3.514,215,3.038,216,3.038,217,2.727,218,5.881,219,4.279,220,4.279,221,4.954,222,3.038,223,4.471,224,3.51,225,3.51,226,2.495,227,2.83,228,4.69,229,3.51,230,3.253,231,3.51,232,4.829,233,4.944,234,3.51,235,4.944,236,3.841,237,4.944,238,6.213,239,4.279,240,3.51,241,3.038,242,4.172,243,3.51,244,2.849,245,2.292,246,3.51,247,4.944,248,3.514,249,3.51,250,4.279,251,3.253,252,3.841,253,3.51,254,3.038,255,4.471,256,4.944,257,3.51,258,3.841,259,3.514,260,3.51,261,3.036,262,3.51,263,3.51,264,6.549,265,6.794,266,3.51,267,1.352,268,3.514,269,3.038,270,3.514,271,3.51,272,3.038,273,3.038,274,3.038,275,3.038,276,3.51,277,3.51,278,3.038,279,3.51,280,3.51,281,3.51,282,3.51,283,6.213,284,3.51,285,3.51,286,2.727,287,3.51,288,3.51,289,3.51,290,5.723,291,3.51,292,3.51,293,3.51,294,3.51,295,3.038,296,3.51,297,3.51,298,3.51]],["title/classes/AuthException.html",[0,0.206,167,2.368]],["body/classes/AuthException.html",[0,0.374,2,1.012,3,0.189,4,0.189,5,0.189,10,0.255,11,0.917,12,0.591,14,2.849,18,0.493,19,0.016,20,0.732,23,0.675,28,0.855,29,0.922,34,0.21,38,0.314,58,1.192,73,0.012,74,0.012,96,0.819,105,2.784,106,1.554,107,3.21,108,2.795,109,1.872,111,1.351,112,3.089,115,2.41,120,2.42,121,3.089,128,2.533,129,1.976,134,1.888,136,2.071,150,1.976,154,4.616,155,3.952,156,2.878,157,3.952,158,4.711,159,3.088,163,2.878,164,2.878,165,2.878,166,2.878,167,3.688,168,3.332,299,4.687,300,2.93,301,3.642,302,3.642]],["title/modules/AuthModule.html",[169,1.554,181,2.538]],["body/modules/AuthModule.html",[0,0.222,3,0.167,4,0.167,5,0.167,19,0.016,34,0.348,38,0.186,60,1.748,73,0.011,74,0.011,91,3.194,96,0.724,169,2.515,171,2.022,172,1.832,173,2.389,174,2.389,175,2.131,176,3.598,177,3.598,181,5.234,182,4.389,183,4.389,184,3.194,185,2.022,186,2.253,188,4.108,189,3.221,190,2.545,191,4.851,192,2.022,194,3.588,198,3.588,205,3.221,214,4.438,268,4.732,269,3.588,303,3.588,304,3.588,305,3.588,306,3.588,307,4.703,308,4.187,309,4.389,310,4.389,311,4.145,312,3.622,313,5.542,314,2.728,315,3.588,316,4.145,317,3.588,318,4.145,319,3.588,320,3.588,321,4.145,322,4.145,323,5.542,324,4.145,325,3.588,326,2.728,327,4.145,328,2.728,329,4.145,330,4.145,331,3.588]],["title/classes/AuthResponseDto.html",[0,0.206,270,2.742]],["body/classes/AuthResponseDto.html",[0,0.248,2,1.003,3,0.187,4,0.187,5,0.187,10,0.252,11,0.912,12,0.585,18,0.536,19,0.016,20,0.67,23,0.734,28,0.847,29,0.646,34,0.268,38,0.208,41,1.573,73,0.012,74,0.012,94,2.569,111,1.045,113,1.581,227,2.684,245,2.803,267,1.789,270,4.244,272,4.019,295,5.167,328,4.342,332,6.383,333,3.608,334,4.69,335,4.69,336,5.97,337,5.97,338,2.676,339,3.785,340,4.951,341,4.528,342,4.643,343,5.167,344,5.97,345,4.643,346,4.244,347,4.643,348,4.69,349,4.244,350,3.038,351,4.643,352,4.643,353,4.643,354,4.643,355,4.643,356,4.643,357,4.643,358,4.643,359,4.643]],["title/injectables/AuthService.html",[208,0.904,268,2.368]],["body/injectables/AuthService.html",[0,0.139,3,0.105,4,0.105,5,0.105,10,0.142,12,0.801,13,1.238,15,2.494,18,0.473,19,0.016,20,0.463,23,0.647,28,1.159,29,0.884,30,1.904,31,2.314,34,0.321,38,0.117,39,2.663,41,2.273,48,1.6,58,1.553,60,2.83,66,2.024,73,0.008,74,0.008,96,0.455,100,2.138,101,1.491,106,1.535,109,1.678,111,0.893,133,1.755,142,1.208,151,1.151,192,1.27,206,2.009,208,0.931,209,1.098,218,4.66,219,3.437,220,3.437,221,4.166,222,3.437,223,4.02,228,2.613,236,2.024,239,2.254,241,3.437,242,3.56,245,2.802,251,1.714,254,2.254,255,4.18,258,2.024,259,3.422,268,2.439,273,2.254,274,2.254,275,2.254,278,2.254,308,3.452,310,3.901,312,3.452,315,2.254,317,2.254,338,3.103,360,2.254,361,2.494,362,3.971,363,3.971,364,2.604,365,3.521,366,3.901,367,4.813,368,3.306,369,2.604,370,3.971,371,2.604,372,2.956,373,3.971,374,2.604,375,2.604,376,3.971,377,2.604,378,2.604,379,2.604,380,3.086,381,2.604,382,2.024,383,2.604,384,2.604,385,2.254,386,2.254,387,2.379,388,3.971,389,2.604,390,3.274,391,4.66,392,2.604,393,2.604,394,2.604,395,2.604,396,3.971,397,4.66,398,3.437,399,3.437,400,3.971,401,3.971,402,2.604,403,3.971,404,2.439,405,2.024,406,2.604,407,3.971,408,2.27,409,3.971,410,2.604,411,2.024,412,4.813,413,3.971,414,3.971,415,2.604,416,1.714,417,1.851,418,1.851,419,1.208,420,3.971,421,2.604,422,2.604,423,2.926,424,3.086,425,3.971,426,2.604,427,2.604,428,2.254,429,1.415,430,3.971,431,1.851,432,2.254,433,1.27,434,2.254]],["title/classes/AuthenticationError.html",[0,0.206,133,1.704]],["body/classes/AuthenticationError.html",[0,0.395,2,1.182,3,0.164,4,0.164,5,0.164,10,0.221,11,0.836,12,0.513,14,2.961,18,0.514,19,0.016,20,0.743,23,0.703,28,0.743,29,0.86,34,0.183,38,0.331,73,0.011,74,0.011,96,0.711,103,3.417,104,2.093,105,2.883,106,1.283,107,3.155,108,2.608,109,2.062,110,3.362,111,1.232,112,3.21,113,1.45,120,1.64,121,3.21,122,2.212,123,2.212,124,2.212,125,2.212,126,2.212,127,1.888,128,2.308,129,1.716,130,1.888,131,2.212,132,2.212,133,2.419,134,1.64,135,1.985,136,1.799,137,2.212,138,1.985,139,2.212,140,2.212,141,2.212,142,1.888,143,2.212,144,1.985,145,2.212,146,1.985,147,2.212,148,2.212,149,1.888,150,1.716,151,1.799,152,2.212,153,2.212,300,3.227,435,4.07,436,2.346,437,2.346,438,2.346,439,2.346]],["title/classes/AuthorizationError.html",[0,0.206,138,1.881]],["body/classes/AuthorizationError.html",[0,0.395,2,1.182,3,0.164,4,0.164,5,0.164,10,0.221,11,0.836,12,0.513,14,2.961,18,0.514,19,0.016,20,0.743,23,0.703,28,0.743,29,0.86,34,0.183,38,0.331,73,0.011,74,0.011,96,0.711,103,3.417,104,2.093,105,2.883,106,1.283,107,3.155,108,2.608,109,2.062,110,3.362,111,1.232,112,3.21,113,1.45,120,1.64,121,3.21,122,2.212,123,2.212,124,2.212,125,2.212,126,2.212,127,1.888,128,2.308,129,1.716,130,1.888,131,2.212,132,2.212,133,1.799,134,1.64,135,1.985,136,1.799,137,2.212,138,2.67,139,2.212,140,2.212,141,2.212,142,1.888,143,2.212,144,1.985,145,2.212,146,1.985,147,2.212,148,2.212,149,1.888,150,1.716,151,1.799,152,2.212,153,2.212,300,3.227,436,2.346,437,2.346,438,2.346,439,2.346,440,4.07]],["title/classes/BaseEntity.html",[0,0.206,441,2.538]],["body/classes/BaseEntity.html",[0,0.26,2,1.048,3,0.195,4,0.195,5,0.195,10,0.264,11,0.938,18,0.501,19,0.016,20,0.59,23,0.686,34,0.275,37,2.144,38,0.218,46,4.347,52,2.84,53,4.365,73,0.012,74,0.012,94,2.485,227,2.595,267,1.87,326,4.04,339,3.661,350,2.985,419,3.284,441,4.04,442,4.2,443,5.234,444,5.83,445,4.04,446,3.146,447,7.08,448,6.128,449,4.853,450,4.853,451,4.365,452,5.315,453,5.315,454,5.315,455,5.315,456,4.853,457,4.853,458,3.337,459,3.77,460,4.853,461,4.853,462,6.14,463,4.853,464,6.14,465,4.853,466,4.2,467,4.853,468,5.315]],["title/interfaces/CompoDocConfig.html",[469,1.704,470,2.538]],["body/interfaces/CompoDocConfig.html",[0,0.068,3,0.089,4,0.089,5,0.23,8,0.733,10,0.069,11,0.447,12,0.16,15,1.741,17,0.733,18,0.516,19,0.016,20,0.621,21,1.183,29,1.041,31,1.531,34,0.177,38,0.057,39,2.046,41,1.339,43,2.97,44,1.234,48,1.178,51,0.836,73,0.004,74,0.004,100,0.469,101,1.26,106,1.258,109,0.396,111,0.286,113,0.584,159,0.654,172,0.562,185,1.426,206,1.574,207,3.396,228,0.836,244,1.685,248,0.904,261,0.781,346,1.569,361,2.017,387,1.915,390,1.356,404,0.781,408,1.666,419,1.024,429,0.691,445,0.836,451,0.904,458,1.199,469,1.292,470,1.924,471,0.781,472,0.654,473,0.733,474,0.904,475,2.713,476,2.713,477,2.713,478,2.713,479,2.713,480,2.713,481,2.713,482,2.713,483,2.713,484,2.713,485,2.713,486,2.713,487,2.713,488,2.713,489,2.713,490,2.713,491,2.713,492,2.713,493,2.713,494,2.713,495,2.713,496,2.713,497,2.713,498,3.07,499,1.355,500,1.715,501,0.988,502,2.272,503,1.715,504,0.733,505,1.715,506,0.904,507,1.199,508,3.488,509,0.904,510,1.199,511,1.924,512,0.904,513,1.199,514,0.781,515,0.904,516,1.355,517,0.691,518,2.6,519,1.715,520,1.569,521,0.904,522,3.755,523,0.781,524,0.988,525,0.836,526,3.07,527,1.715,528,1.715,529,0.988,530,2.079,531,3.65,532,1.452,533,0.988,534,1.715,535,0.836,536,0.904,537,1.569,538,0.988,539,3.678,540,0.781,541,0.781,542,2.079,543,1.569,544,0.836,545,0.781,546,0.988,547,0.988,548,0.836,549,0.904,550,0.988,551,0.988,552,0.988,553,0.988,554,1.569,555,2.272,556,0.988,557,1.715,558,2.272,559,0.988,560,0.988,561,0.904,562,2.809,563,0.836,564,4.545,565,5.021,566,2.272,567,1.924,568,2.272,569,0.988,570,4.536,571,1.569,572,0.988,573,0.904,574,0.988,575,0.988,576,0.904,577,0.988,578,0.904,579,0.904,580,3.07,581,2.272,582,2.809,583,2.272,584,2.272,585,3.615,586,2.851,587,3.615,588,4.057,589,3.366,590,2.713,591,4.406,592,2.713,593,4.474,594,2.482,595,3.307,596,3.307,597,3.366,598,2.713,599,4.17,600,3.615,601,4.474,602,3.07,603,0.988,604,1.715,605,0.988,606,3.07,607,0.988,608,2.272,609,0.988,610,4.01,611,0.988,612,1.715,613,2.272,614,0.988,615,2.272,616,1.715,617,0.988,618,2.713,619,2.272,620,0.988,621,3.289,622,1.452,623,1.715,624,0.988,625,0.988,626,0.988,627,0.988,628,3.061,629,0.988,630,0.904,631,1.472,632,0.988,633,2.272,634,0.988,635,2.079,636,0.988,637,2.272,638,3.615,639,0.988,640,2.272,641,0.988,642,2.809,643,1.924,644,2.272,645,0.988,646,0.988,647,0.988,648,1.924,649,0.988,650,0.988,651,1.715,652,1.715,653,2.272,654,0.904,655,1.715,656,0.988,657,0.988,658,2.079,659,3.08,660,0.988,661,1.715,662,1.715,663,0.904,664,3.366,665,0.988,666,2.482,667,1.715,668,1.715,669,0.988,670,0.988,671,0.988,672,0.904,673,0.988,674,0.988,675,0.988,676,3.827,677,0.988,678,0.988,679,1.715,680,0.836,681,0.988,682,0.988,683,0.988,684,0.988,685,0.988,686,0.988,687,0.988,688,0.988,689,0.988,690,0.988,691,0.988,692,0.988,693,0.781,694,0.988,695,1.569,696,0.988,697,0.988,698,0.988,699,0.988,700,2.298,701,0.988,702,0.988,703,0.988,704,0.988,705,0.988,706,0.988,707,0.988,708,4.17,709,0.988,710,0.836,711,0.988,712,0.988,713,0.988,714,0.904,715,0.988,716,0.988,717,0.988,718,0.988,719,3.07,720,0.988,721,0.988,722,2.272,723,1.715,724,0.988,725,4.406,726,0.988,727,2.713,728,3.366,729,0.988,730,0.988,731,2.272,732,0.988,733,0.988,734,0.988,735,0.988,736,0.988,737,0.733,738,0.988,739,2.713,740,0.988,741,0.988,742,0.988,743,1.715,744,0.988,745,0.904,746,0.988,747,1.569,748,0.988,749,2.272,750,0.836,751,0.988,752,0.988,753,0.988,754,0.988,755,0.988,756,1.199,757,0.988,758,1.795,759,0.988,760,0.988,761,0.988,762,2.272,763,0.988,764,0.988,765,0.988,766,0.988,767,0.988,768,0.988,769,0.988,770,0.988,771,0.988,772,0.988,773,0.691,774,0.988,775,0.988,776,0.988,777,0.988,778,1.715,779,0.988,780,0.988,781,1.715,782,0.988,783,0.988,784,0.988,785,0.988,786,0.988,787,0.988,788,0.904,789,0.904,790,0.988,791,0.988,792,0.988,793,0.904,794,0.988,795,0.988,796,0.988,797,0.733,798,0.904,799,0.988,800,2.298,801,0.904,802,0.733,803,0.904,804,0.988,805,0.988,806,0.988,807,1.569,808,0.988,809,1.715,810,0.988,811,2.482,812,0.988,813,0.988,814,1.715,815,0.988,816,0.988,817,0.988,818,1.715,819,0.988,820,0.988,821,0.988,822,0.988,823,1.452,824,0.988,825,0.904,826,0.904,827,0.904,828,0.904,829,0.904,830,0.904,831,0.988,832,0.988,833,0.988,834,0.988,835,0.988,836,0.836,837,0.988]],["title/classes/ConflictError.html",[0,0.206,151,1.704]],["body/classes/ConflictError.html",[0,0.395,2,1.182,3,0.164,4,0.164,5,0.164,10,0.221,11,0.836,12,0.513,14,2.961,18,0.514,19,0.016,20,0.743,23,0.703,28,0.743,29,0.86,34,0.183,38,0.331,73,0.011,74,0.011,96,0.711,103,3.417,104,2.093,105,2.883,106,1.283,107,3.155,108,2.608,109,2.062,110,3.362,111,1.232,112,3.21,113,1.45,120,1.64,121,3.21,122,2.212,123,2.212,124,2.212,125,2.212,126,2.212,127,1.888,128,2.308,129,1.716,130,1.888,131,2.212,132,2.212,133,1.799,134,1.64,135,1.985,136,1.799,137,2.212,138,1.985,139,2.212,140,2.212,141,2.212,142,1.888,143,2.212,144,1.985,145,2.212,146,1.985,147,2.212,148,2.212,149,1.888,150,1.716,151,2.419,152,2.212,153,2.212,300,3.227,436,2.346,437,2.346,438,2.346,439,2.346,838,4.07]],["title/classes/CreateUserDto.html",[0,0.206,839,2.742]],["body/classes/CreateUserDto.html",[0,0.26,2,0.74,3,0.138,4,0.138,5,0.138,10,0.186,11,0.743,12,0.85,18,0.536,19,0.016,20,0.702,23,0.734,29,0.855,34,0.253,38,0.154,43,2.368,58,1.65,73,0.01,74,0.01,94,2.658,109,1.916,113,1.287,227,2.777,245,2.829,259,4.37,267,1.32,339,3.768,350,3.039,416,3.717,417,4.015,418,4.015,419,2.255,423,3.527,429,2.642,433,3.166,446,3.196,458,2.642,525,3.717,631,2.987,737,3.543,839,3.455,840,6.324,841,2.663,842,3.717,843,3.717,844,3.717,845,3.199,846,2.255,847,3.427,848,3.455,849,4.207,850,3.427,851,3.427,852,5.321,853,5.321,854,5.321,855,5.321,856,3.427,857,3.427,858,2.966,859,3.427,860,3.427,861,3.427,862,3.777,863,4.776,864,3.427,865,4.207,866,4.207,867,4.207,868,4.207,869,3.427,870,3.455,871,2.966,872,3.427,873,3.985,874,2.255,875,2.966,876,3.427,877,3.717,878,2.985,879,2.966,880,4.207,881,4.14,882,2.436,883,3.777,884,4.776,885,1.59,886,2.104,887,1.975,888,3.717,889,3.777,890,4.207,891,2.104,892,2.255,893,2.436,894,2.255]],["title/classes/CreateUserTable1758745851583.html",[0,0.206,895,2.997]],["body/classes/CreateUserTable1758745851583.html",[0,0.223,2,0.901,3,0.168,4,0.168,5,0.168,8,3.209,9,4.867,10,0.227,11,0.85,12,0.992,13,1.735,14,2.759,15,2.531,16,4.325,17,3.209,18,0.577,19,0.016,20,0.401,21,2.426,22,1.936,23,0.638,25,4.325,26,5.843,28,1.016,29,0.774,30,1.735,31,2.361,32,4.325,34,0.187,35,4.325,37,1.844,38,0.187,39,2.053,41,1.414,43,1.608,44,2.361,46,3.418,47,6.026,48,2.805,49,3.612,51,2.746,52,1.76,53,3.957,54,3.612,55,3.612,56,3.612,58,1.061,59,6.026,65,3.612,66,4.325,73,0.011,74,0.011,84,2.966,245,2.053,423,2.268,433,2.036,891,3.418,895,5.192,896,5.784,897,3.612,898,4.173,899,4.173,900,4.173,901,4.173,902,3.612,903,3.612,904,3.242,905,3.612,906,3.612,907,4.173,908,4.173]],["title/classes/DatabaseError.html",[0,0.206,127,1.789]],["body/classes/DatabaseError.html",[0,0.395,2,1.178,3,0.163,4,0.163,5,0.163,10,0.22,11,0.833,12,0.511,14,2.958,18,0.513,19,0.016,20,0.743,23,0.702,28,0.739,29,0.858,34,0.182,38,0.331,73,0.011,74,0.011,96,0.708,103,3.414,104,2.082,105,2.88,106,1.279,107,3.214,108,2.602,109,2.058,110,3.353,111,1.228,112,3.206,113,1.445,115,2.082,120,1.632,121,3.206,122,2.201,123,2.201,124,2.201,125,2.201,126,2.201,127,2.531,128,2.301,129,1.708,130,1.879,131,2.201,132,2.201,133,1.79,134,1.632,135,1.976,136,1.79,137,2.201,138,1.976,139,2.201,140,2.201,141,2.201,142,1.879,143,2.201,144,1.976,145,2.201,146,1.976,147,2.201,148,2.201,149,1.879,150,1.708,151,1.79,152,2.201,153,2.201,300,3.221,436,2.334,437,2.334,438,2.334,439,2.334,909,4.05]],["title/classes/DatabaseException.html",[0,0.206,165,2.368]],["body/classes/DatabaseException.html",[0,0.374,2,1.012,3,0.189,4,0.189,5,0.189,10,0.255,11,0.917,12,0.591,14,2.849,18,0.493,19,0.016,20,0.732,23,0.675,28,0.855,29,0.922,34,0.21,38,0.314,58,1.192,73,0.012,74,0.012,96,0.819,105,2.784,106,1.554,107,3.21,108,2.795,109,1.872,111,1.351,112,3.089,115,2.41,120,2.42,121,3.089,128,2.533,129,1.976,134,1.888,136,2.071,150,1.976,154,4.616,155,3.952,156,2.878,157,3.952,158,4.711,159,3.088,163,2.878,164,2.878,165,3.688,166,2.878,167,2.878,168,3.332,300,2.93,301,3.642,302,3.642,910,4.687]],["title/classes/EmailError.html",[0,0.206,149,1.789]],["body/classes/EmailError.html",[0,0.395,2,1.178,3,0.163,4,0.163,5,0.163,10,0.22,11,0.833,12,0.511,14,2.958,18,0.513,19,0.016,20,0.743,23,0.702,28,0.739,29,0.858,34,0.182,38,0.331,73,0.011,74,0.011,96,0.708,103,3.414,104,2.082,105,2.88,106,1.279,107,3.214,108,2.602,109,2.058,110,3.353,111,1.228,112,3.206,113,1.445,115,2.082,120,1.632,121,3.206,122,2.201,123,2.201,124,2.201,125,2.201,126,2.201,127,1.879,128,2.301,129,1.708,130,1.879,131,2.201,132,2.201,133,1.79,134,1.632,135,1.976,136,1.79,137,2.201,138,1.976,139,2.201,140,2.201,141,2.201,142,1.879,143,2.201,144,1.976,145,2.201,146,1.976,147,2.201,148,2.201,149,2.531,150,1.708,151,1.79,152,2.201,153,2.201,300,3.221,436,2.334,437,2.334,438,2.334,439,2.334,911,4.05]],["title/classes/EmailException.html",[0,0.206,163,2.368]],["body/classes/EmailException.html",[0,0.374,2,1.012,3,0.189,4,0.189,5,0.189,10,0.255,11,0.917,12,0.591,14,2.849,18,0.493,19,0.016,20,0.732,23,0.675,28,0.855,29,0.922,34,0.21,38,0.314,58,1.192,73,0.012,74,0.012,96,0.819,105,2.784,106,1.554,107,3.21,108,2.795,109,1.872,111,1.351,112,3.089,115,2.41,120,2.42,121,3.089,128,2.533,129,1.976,134,1.888,136,2.071,150,1.976,154,4.616,155,3.952,156,2.878,157,3.952,158,4.711,159,3.088,163,3.688,164,2.878,165,2.878,166,2.878,167,2.878,168,3.332,300,2.93,301,3.642,302,3.642,912,4.057]],["title/injectables/ErrorHandlerService.html",[208,0.904,368,2.368]],["body/injectables/ErrorHandlerService.html",[0,0.214,3,0.161,4,0.161,5,0.161,10,0.217,12,0.682,13,1.686,18,0.402,19,0.016,20,0.589,21,1.832,23,0.551,28,0.987,29,0.752,30,1.686,34,0.275,37,2.39,38,0.179,41,2.525,43,2.084,73,0.011,74,0.011,96,0.698,101,0.976,103,3.032,106,1.724,115,2.055,127,1.854,130,1.854,133,1.767,134,1.61,135,2.99,144,1.95,146,1.95,149,1.854,151,1.767,164,2.455,206,1.102,208,1.268,209,1.686,230,2.631,251,3.559,252,3.106,325,3.46,340,2.842,341,2.455,361,2.166,368,3.321,390,3.527,391,3.46,411,3.106,541,3.321,548,2.631,643,2.631,680,2.631,802,2.304,913,5.305,914,3.46,915,4.681,916,5.409,917,4.681,918,3.998,919,5.409,920,5.619,921,3.998,922,5.409,923,4.681,924,3.998,925,3.106,926,5.684,927,4.681,928,3.998,929,4.763,930,3.998,931,2.304,932,5.409,933,3.533,934,3.46,935,3.998,936,3.46,937,3.998,938,3.46,939,3.998,940,3.46,941,3.46,942,3.998,943,3.46,944,3.106,945,3.998,946,5.305,947,3.46,948,5.409,949,3.46,950,3.46,951,5.409,952,3.46,953,3.998,954,3.46,955,3.106,956,3.46,957,3.46]],["title/modules/ErrorsModule.html",[169,1.554,182,2.368]],["body/modules/ErrorsModule.html",[0,0.294,3,0.221,4,0.221,5,0.221,19,0.016,34,0.298,38,0.247,73,0.013,74,0.013,96,0.961,106,1.289,169,2.87,171,2.683,172,2.431,173,3.17,174,3.17,175,2.828,176,4.106,177,4.106,182,4.778,184,3.824,185,2.683,186,2.989,368,4.919,385,4.761,958,4.761,959,4.761,960,4.761,961,5.5]],["title/classes/GlobalExceptionFilter.html",[0,0.206,962,2.997]],["body/classes/GlobalExceptionFilter.html",[0,0.206,2,0.54,3,0.101,4,0.101,5,0.101,8,2.219,10,0.136,12,0.758,13,1.2,18,0.466,19,0.016,20,0.578,21,1.304,23,0.58,28,1.097,29,0.792,30,1.775,34,0.255,37,1.702,38,0.112,41,1.304,43,1.484,44,0.884,46,2.365,58,1.341,73,0.008,74,0.008,96,0.437,101,1.653,103,2.075,106,1.615,107,2.987,108,3.155,109,2.374,113,1.243,120,1.008,128,1.055,129,1.055,134,1.008,135,2.572,144,1.878,146,1.22,150,1.055,156,1.536,157,1.646,159,3.826,164,2.365,166,1.536,206,1.783,230,2.534,250,2.165,251,1.646,252,1.944,286,2.992,326,1.646,340,1.778,341,2.365,361,2.471,386,2.165,408,2.223,411,1.944,516,2.365,520,1.778,541,2.883,548,1.646,642,1.778,680,3.469,700,1.646,710,1.646,725,4.047,758,2.414,802,1.442,885,1.16,912,2.165,915,3.333,917,3.333,923,3.333,926,4.927,927,5.204,929,4.867,931,2.219,933,3.61,934,2.165,936,2.165,938,2.165,940,2.165,941,2.165,943,2.165,944,1.944,946,4.927,947,2.165,949,2.165,950,2.165,952,3.333,954,3.333,956,2.165,957,2.165,962,2.992,963,5.204,964,4.695,965,3.851,966,3.851,967,3.851,968,3.851,969,3.648,970,5.272,971,6.258,972,3.851,973,2.502,974,3.851,975,3.851,976,2.502,977,2.502,978,3.851,979,6.012,980,2.502,981,2.165,982,2.502,983,2.502,984,2.502,985,2.502,986,2.502,987,1.944,988,2.502,989,3.851,990,2.502,991,2.502,992,2.502,993,3.851,994,3.851,995,3.851,996,3.851,997,3.851,998,2.502,999,5.272,1000,2.502,1001,1.646,1002,2.502,1003,2.502,1004,2.502,1005,2.502,1006,2.502,1007,3.851,1008,2.502,1009,1.778,1010,2.502,1011,2.502,1012,3.851,1013,2.502,1014,2.502,1015,2.502,1016,2.502,1017,2.502,1018,3.851,1019,3.851,1020,2.165,1021,4.695,1022,2.502,1023,2.502,1024,2.502,1025,2.502,1026,5.272,1027,2.502,1028,2.502,1029,2.165,1030,2.502,1031,2.502,1032,2.502,1033,1.778,1034,2.502,1035,2.502,1036,2.502,1037,2.502,1038,2.502,1039,2.502,1040,2.165,1041,2.502,1042,2.502,1043,2.502,1044,2.502,1045,2.502,1046,2.502,1047,2.502]],["title/injectables/HbsRenderService.html",[208,0.904,513,2.096]],["body/injectables/HbsRenderService.html",[0,0.131,3,0.227,4,0.24,5,0.21,10,0.206,11,0.86,12,0.751,13,1.756,18,0.388,19,0.016,20,0.669,21,0.828,22,1.755,23,0.607,28,0.446,29,0.34,30,1.624,34,0.11,38,0.11,41,0.828,43,0.942,44,0.864,52,1.951,73,0.007,74,0.007,101,1.673,106,1.32,111,1.041,113,0.647,169,1.524,171,1.845,206,1.817,208,0.887,209,1.031,227,2.393,244,2.18,261,2.323,286,4.826,326,2.489,349,1.738,361,2.328,387,1.672,404,1.501,405,1.9,408,1.031,446,2.375,472,3.194,499,3.658,504,1.409,508,3.283,513,2.056,521,3.289,522,1.609,523,1.501,531,1.609,532,1.609,540,2.323,549,1.738,554,2.689,561,1.738,562,4.683,563,2.489,570,2.689,571,2.689,578,2.689,579,2.689,588,3.289,591,2.689,593,3.289,594,1.738,595,2.689,596,3.289,601,1.738,621,3.247,622,3.92,628,3.045,630,3.289,631,1.595,635,4.004,654,1.738,658,1.738,663,4.234,714,2.689,756,2.056,758,2.678,773,1.329,788,2.689,797,1.409,798,1.738,823,1.609,920,2.939,925,1.9,929,1.9,931,1.409,933,3.002,955,1.9,1033,4.004,1048,4.826,1049,1.9,1050,4.627,1051,5.209,1052,5.209,1053,5.209,1054,3.783,1055,3.783,1056,2.445,1057,2.445,1058,2.445,1059,3.783,1060,2.445,1061,2.445,1062,1.9,1063,1.9,1064,2.445,1065,2.445,1066,2.445,1067,2.445,1068,5.555,1069,2.445,1070,2.445,1071,2.445,1072,2.445,1073,6.212,1074,2.445,1075,3.783,1076,5.209,1077,5.957,1078,5.957,1079,2.445,1080,2.445,1081,4.627,1082,2.445,1083,2.445,1084,2.445,1085,2.445,1086,2.445,1087,3.783,1088,2.116,1089,2.445,1090,2.445,1091,2.445,1092,4.627,1093,3.783,1094,3.783,1095,2.445,1096,2.445,1097,2.445,1098,2.445,1099,2.445,1100,2.445,1101,3.783,1102,2.445,1103,2.445,1104,5.633,1105,5.209,1106,2.445,1107,2.445,1108,2.445,1109,2.445,1110,3.783,1111,2.445,1112,2.445,1113,2.445,1114,2.939,1115,2.116,1116,2.445,1117,3.783,1118,2.445,1119,2.445,1120,2.116,1121,3.783,1122,4.876,1123,2.445,1124,2.445,1125,2.445,1126,2.445,1127,2.445,1128,2.445,1129,3.783,1130,2.445,1131,2.116,1132,2.445,1133,4.627,1134,2.445,1135,2.116,1136,2.445,1137,2.445,1138,3.783,1139,2.445,1140,1.9,1141,2.116,1142,2.445,1143,3.783,1144,2.445,1145,2.445,1146,2.445,1147,2.445,1148,2.445,1149,4.627]],["title/injectables/JwtAuthService.html",[208,0.904,308,2.096]],["body/injectables/JwtAuthService.html",[0,0.19,3,0.143,4,0.143,5,0.143,10,0.193,12,0.829,13,1.553,15,2.567,18,0.489,19,0.016,20,0.733,21,1.203,22,3.051,23,0.67,28,1.2,29,0.915,30,1.946,31,2.41,34,0.258,38,0.258,39,2.303,58,0.903,73,0.01,74,0.01,96,0.62,100,1.838,101,1.745,106,1.598,111,1.121,113,1.525,192,1.732,206,1.814,208,1.168,209,1.497,308,2.708,312,3.806,314,2.336,328,4.109,334,4.093,335,4.847,338,2.046,341,2.18,361,2.324,372,3.834,387,2.545,390,2.671,408,2.428,431,2.524,433,1.732,469,2.202,539,2.046,631,2.101,931,2.046,933,3.599,1150,2.524,1151,4.984,1152,4.984,1153,4.984,1154,3.55,1155,4.852,1156,3.55,1157,4.474,1158,3.872,1159,3.55,1160,3.872,1161,3.872,1162,3.55,1163,3.872,1164,3.55,1165,3.872,1166,3.55,1167,3.872,1168,2.524,1169,2.758,1170,2.758,1171,2.758,1172,2.758,1173,2.758,1174,2.758,1175,2.524,1176,2.046,1177,2.524,1178,2.18,1179,2.524,1180,2.758,1181,2.758,1182,2.758,1183,2.758,1184,3.542,1185,2.758,1186,2.758,1187,2.758,1188,5.11,1189,2.758,1190,5.298,1191,2.758,1192,2.758,1193,2.758,1194,2.758]],["title/interfaces/JwtPayload.html",[372,2.368,469,1.704]],["body/interfaces/JwtPayload.html",[0,0.21,3,0.158,4,0.158,5,0.158,10,0.213,11,0.816,15,2.146,18,0.452,19,0.016,20,0.744,21,1.33,22,3.164,31,2.146,34,0.273,38,0.273,39,2.405,58,1.658,73,0.011,74,0.011,96,0.686,100,1.971,101,1.788,106,1.649,111,0.884,113,1.415,192,1.916,206,1.881,208,1.253,308,2.135,312,3.301,314,2.585,328,3.997,334,4.318,335,4.318,338,2.264,361,2.146,372,3.73,387,2.684,390,2.818,408,2.561,431,4.634,433,3.18,469,2.362,471,2.412,539,2.264,631,2.253,931,2.264,933,3.758,1150,2.792,1155,4.152,1157,4.152,1158,3.052,1160,3.052,1161,3.052,1163,3.052,1165,3.052,1167,4.152,1168,2.792,1169,3.052,1170,3.052,1171,3.052,1172,3.052,1173,3.052,1174,3.052,1175,2.792,1176,2.264,1177,2.792,1178,2.412,1179,2.792,1180,3.052,1181,3.052,1182,3.052,1183,3.052,1184,3.799,1185,3.052,1186,3.052,1187,3.052,1188,5.299,1189,3.052,1190,5.467,1191,3.052,1192,3.052,1193,3.052,1194,3.052]],["title/classes/LoginDto.html",[0,0.206,223,2.538]],["body/classes/LoginDto.html",[0,0.354,2,1.18,3,0.22,4,0.22,5,0.22,10,0.297,11,1.009,18,0.492,19,0.016,20,0.71,23,0.673,34,0.296,38,0.245,58,1.806,73,0.013,74,0.013,94,2.437,223,4.348,267,2.105,350,2.995,423,3.86,446,2.786,846,3.595,862,4.245,877,4.348,878,4.058,885,2.534,887,3.149,1195,4.729,1196,4.697,1197,5.464,1198,5.464,1199,5.464]],["title/injectables/MailService.html",[208,0.904,366,2.368]],["body/injectables/MailService.html",[0,0.257,3,0.193,4,0.193,5,0.193,10,0.261,12,0.769,13,1.902,15,2.37,18,0.454,19,0.016,20,0.743,23,0.622,28,1.113,29,0.849,30,1.498,31,2.156,34,0.301,38,0.216,39,1.772,58,1.794,60,2.975,73,0.012,74,0.012,96,0.84,100,2.251,106,1.43,111,1.373,192,2.344,208,1.43,209,2.026,236,3.734,258,3.734,312,4.108,361,2.156,366,3.747,387,2.124,390,2.229,408,2.026,424,5.481,508,2.344,845,3.162,920,3.734,1001,3.162,1200,4.159,1201,6.706,1202,4.805,1203,7.441,1204,4.805,1205,4.805,1206,4.805,1207,3.734,1208,4.805,1209,4.805,1210,4.805,1211,4.159,1212,4.805,1213,2.951]],["title/modules/MyMailerModule.html",[169,1.554,307,2.538]],["body/modules/MyMailerModule.html",[0,0.25,3,0.188,4,0.188,5,0.188,19,0.016,34,0.331,38,0.209,41,1.582,44,2.117,73,0.012,74,0.012,96,0.816,101,1.14,169,2.665,171,2.278,172,2.064,173,2.691,174,2.691,175,2.401,176,3.813,177,3.813,184,3.453,185,2.278,186,2.538,188,3.943,191,4.655,192,2.278,205,3.628,206,1.288,217,3.628,245,1.722,307,4.942,312,3.793,331,4.042,366,4.815,508,2.278,516,2.867,622,3.073,969,3.628,1001,3.943,1207,3.628,1214,4.042,1215,4.042,1216,4.042,1217,4.669,1218,4.669,1219,4.042,1220,5.992,1221,4.669,1222,4.669,1223,4.669,1224,5.992,1225,4.669,1226,4.669,1227,4.669,1228,4.669,1229,4.042,1230,4.669,1231,4.669,1232,4.669,1233,4.669,1234,4.669,1235,4.669,1236,4.669,1237,4.669,1238,4.669,1239,4.669]],["title/classes/NotFoundError.html",[0,0.206,142,1.789]],["body/classes/NotFoundError.html",[0,0.395,2,1.182,3,0.164,4,0.164,5,0.164,10,0.221,11,0.836,12,0.513,14,2.961,18,0.514,19,0.016,20,0.743,23,0.703,28,0.743,29,0.86,34,0.183,38,0.331,73,0.011,74,0.011,96,0.711,103,3.417,104,2.093,105,2.883,106,1.283,107,3.155,108,2.608,109,1.928,110,3.362,111,1.232,112,3.142,113,1.45,120,1.64,121,3.21,122,2.212,123,2.212,124,2.212,125,2.212,126,2.212,127,1.888,128,2.308,129,1.716,130,1.888,131,2.212,132,2.212,133,1.799,134,1.64,135,1.985,136,1.799,137,2.212,138,1.985,139,2.212,140,2.212,141,2.212,142,2.539,143,2.975,144,2.67,145,2.212,146,1.985,147,2.212,148,2.212,149,1.888,150,1.716,151,1.799,152,2.212,153,2.212,300,3.227,436,2.346,437,2.346,438,2.346,439,2.346,1240,4.07]],["title/entities/Otp.html",[60,1.626,1241,2.538]],["body/entities/Otp.html",[0,0.215,3,0.162,4,0.162,5,0.162,10,0.358,11,0.83,12,0.913,18,0.571,19,0.016,20,0.681,21,2.083,23,0.722,34,0.295,37,1.778,38,0.181,43,2.537,44,2.173,46,3.336,52,1.697,53,2.86,57,5.116,58,1.802,60,3.255,62,3.861,63,4.702,64,4.702,73,0.011,74,0.011,94,2.614,105,1.55,227,2.65,245,2.808,267,1.55,339,3.737,343,4.702,350,2.988,382,3.126,419,2.52,441,3.575,517,2.952,541,2.471,567,4.663,845,2.648,848,2.86,925,4.221,1241,2.648,1242,2.86,1243,3.483,1244,4.778,1245,4.778,1246,4.778,1247,4.024,1248,4.024,1249,4.024,1250,4.024,1251,4.024,1252,5.432,1253,4.024,1254,4.024,1255,4.702,1256,4.024,1257,4.024,1258,4.024,1259,4.024,1260,4.024,1261,4.024,1262,4.024,1263,4.024,1264,3.483,1265,5.432,1266,5.432,1267,4.024,1268,4.024,1269,3.483,1270,3.483,1271,3.483]],["title/injectables/OtpRepository.html",[208,0.904,309,2.368]],["body/injectables/OtpRepository.html",[0,0.23,3,0.173,4,0.173,5,0.173,10,0.234,12,0.852,13,1.769,15,2.738,18,0.473,19,0.016,20,0.694,23,0.716,28,1.233,29,0.94,30,2.107,31,2.641,34,0.303,37,1.899,38,0.193,39,1.585,44,2.005,52,1.812,58,1.616,60,3.045,73,0.011,74,0.011,96,0.751,100,1.585,101,1.552,111,1.277,190,2.638,206,1.185,208,1.33,209,1.812,309,4.151,319,3.719,361,1.518,443,3.338,459,3.902,517,3.454,1244,3.338,1245,5.253,1246,3.338,1272,3.719,1273,5.851,1274,4.41,1275,5.675,1276,3.719,1277,5.253,1278,4.296,1279,4.296,1280,5.675,1281,4.296,1282,5.675,1283,4.296,1284,3.054,1285,4.296,1286,4.296,1287,3.719,1288,4.296,1289,4.296,1290,4.296,1291,4.296,1292,4.296,1293,4.296,1294,4.296,1295,4.296,1296,4.296,1297,4.296,1298,4.296,1299,4.296,1300,4.296,1301,4.296,1302,3.719,1303,4.296]],["title/injectables/OtpService.html",[208,0.904,310,2.368]],["body/injectables/OtpService.html",[0,0.213,3,0.16,4,0.16,5,0.16,10,0.217,12,0.772,13,1.682,15,2.632,18,0.455,19,0.016,20,0.736,23,0.668,28,1.116,29,0.851,30,1.908,31,2.497,34,0.294,38,0.179,39,2.419,41,1.828,44,2.497,48,2.465,52,1.68,58,1.743,60,3.099,73,0.011,74,0.011,96,0.696,100,1.991,101,1.601,106,1.537,111,1.214,192,1.944,206,1.89,208,1.265,209,1.68,309,4.339,310,3.314,312,3.927,320,3.449,361,1.907,387,2.385,390,2.503,408,2.276,419,2.503,535,2.622,1168,2.833,1211,4.671,1213,2.447,1244,4.193,1245,4.193,1246,4.755,1273,5.677,1276,3.449,1284,2.833,1304,3.449,1305,6.119,1306,5.397,1307,3.985,1308,3.985,1309,3.985,1310,3.985,1311,5.397,1312,3.985,1313,3.985,1314,3.985,1315,3.449,1316,3.985,1317,3.985,1318,3.985,1319,3.985,1320,3.985,1321,3.985,1322,5.397,1323,3.985,1324,3.985,1325,3.985,1326,3.985,1327,3.985]],["title/classes/PaginatedResponseDto.html",[0,0.206,1328,2.742]],["body/classes/PaginatedResponseDto.html",[0,0.33,2,0.744,3,0.139,4,0.139,5,0.139,10,0.187,11,0.745,12,0.434,18,0.561,19,0.016,21,1.653,23,0.723,28,0.629,29,0.479,34,0.254,38,0.219,43,2.374,44,1.724,48,1.966,73,0.01,74,0.01,94,2.561,101,0.841,111,0.775,113,2.094,206,1.346,226,2.45,227,2.78,267,1.328,339,3.774,350,2.991,446,3.199,586,4.055,631,3.085,797,4.423,836,3.728,881,3.479,885,1.599,1009,2.45,1033,4.623,1176,2.813,1213,4.492,1328,3.469,1329,2.678,1330,4.904,1331,4.904,1332,5.846,1333,6.405,1334,4.904,1335,4.224,1336,5.63,1337,4.936,1338,4.88,1339,4.224,1340,3.446,1341,3.446,1342,4.224,1343,4.904,1344,3.446,1345,4.224,1346,3.446,1347,4.224,1348,3.446,1349,3.792,1350,3.446,1351,4.403,1352,2.678,1353,4.904,1354,2.983,1355,2.983,1356,4.224,1357,2.983,1358,4.904,1359,4.224,1360,2.983,1361,2.983,1362,4.224,1363,2.983,1364,2.983,1365,2.983,1366,2.983]],["title/classes/PaginationDto.html",[0,0.206,1337,2.742]],["body/classes/PaginationDto.html",[0,0.345,2,0.823,3,0.153,4,0.153,5,0.153,10,0.207,11,0.8,18,0.519,19,0.016,21,2.362,22,2.429,23,0.609,29,0.896,34,0.268,38,0.235,43,2.018,44,1.347,48,1.536,73,0.01,74,0.01,94,1.932,101,0.931,113,2.076,206,1.444,227,2.844,267,1.469,350,3.067,446,3.149,586,3.446,631,3.206,797,4.439,836,3.936,881,3.673,885,1.769,1009,2.71,1033,3.722,1176,2.198,1213,4.586,1328,2.71,1329,2.962,1330,3.3,1331,3.3,1332,6.035,1333,5.842,1334,3.3,1335,3.3,1336,4.533,1337,4.577,1339,3.3,1342,3.3,1343,5.177,1345,3.3,1347,3.3,1349,2.962,1351,4.647,1352,2.962,1353,5.177,1354,3.3,1355,4.533,1356,4.533,1357,5.177,1358,5.177,1359,4.533,1360,3.3,1361,3.3,1362,4.533,1363,3.3,1364,3.3,1365,3.3,1366,3.3,1367,5.237,1368,4.533,1369,3.813,1370,3.813,1371,3.813,1372,3.813,1373,3.813,1374,3.813]],["title/classes/ProcessHandlers.html",[0,0.206,1375,2.997]],["body/classes/ProcessHandlers.html",[0,0.247,2,0.997,3,0.186,4,0.186,5,0.186,10,0.251,11,0.909,12,0.582,13,1.854,15,1.631,18,0.344,19,0.016,20,0.444,21,1.564,22,2.142,23,0.606,28,0.842,29,0.642,30,1.439,31,2.325,34,0.267,37,2.04,38,0.207,39,1.703,41,2.015,73,0.012,74,0.012,96,0.807,100,2.427,106,1.629,206,1.273,361,2.325,387,2.04,408,1.947,695,5.234,758,2.374,955,3.587,971,3.996,1040,3.996,1375,4.622,1376,5.696,1377,3.996,1378,6.95,1379,5.149,1380,5.948,1381,4.617,1382,5.948,1383,5.589,1384,4.617,1385,4.617,1386,4.617,1387,4.617,1388,4.617,1389,6.581,1390,4.617,1391,4.617,1392,4.617,1393,4.617,1394,5.948,1395,4.617,1396,4.617,1397,5.948,1398,6.581,1399,4.617,1400,4.617,1401,4.617,1402,4.617,1403,4.617,1404,4.617,1405,4.617,1406,4.617,1407,4.617,1408,4.617,1409,4.617,1410,4.617,1411,4.617,1412,4.617]],["title/classes/ResendOtpDto.html",[0,0.206,232,2.742]],["body/classes/ResendOtpDto.html",[0,0.362,2,1.226,3,0.228,4,0.228,5,0.228,10,0.309,11,1.033,18,0.422,19,0.016,20,0.65,23,0.578,34,0.303,38,0.255,58,1.836,73,0.013,74,0.013,94,2.094,232,4.806,267,2.187,350,2.851,446,2.394,846,3.735,878,4.152,885,2.633,887,3.272,1196,4.035,1413,5.852,1414,4.914,1415,5.677]],["title/interfaces/Session.html",[469,1.704,518,2.538]],["body/interfaces/Session.html",[0,0.076,3,0.097,4,0.097,5,0.239,8,0.814,10,0.077,11,0.484,12,0.178,15,1.829,17,0.814,18,0.342,19,0.016,20,0.623,21,1.27,31,1.623,34,0.189,38,0.063,39,2.131,41,1.428,43,2.708,44,1.325,48,1.276,51,0.93,73,0.005,74,0.005,100,0.521,101,1.32,106,1.313,109,1.169,111,0.318,113,0.64,159,0.726,172,0.624,185,1.545,206,1.635,207,3.557,228,0.93,244,1.826,248,1.004,261,0.867,346,1.718,361,2.095,387,2.03,390,1.469,404,0.867,408,1.777,419,1.121,429,0.768,445,0.93,451,1.004,458,1.313,469,1.4,470,1.59,471,0.867,472,0.726,473,0.814,474,1.004,475,1.098,476,1.098,477,1.098,478,1.098,479,1.098,480,1.098,481,1.098,482,1.098,483,1.098,484,1.098,485,1.098,486,1.098,487,1.098,488,1.098,489,1.098,490,1.098,491,1.098,492,1.098,493,1.098,494,1.098,495,1.098,496,1.098,497,1.098,498,1.878,499,1.484,500,1.878,501,1.098,502,2.461,503,1.878,504,0.814,505,1.878,506,1.004,507,1.313,508,3.549,509,1.004,510,1.313,511,2.084,512,1.004,513,1.313,514,0.867,515,1.004,516,1.484,517,0.768,518,3.023,519,3.275,520,2.996,521,1.004,522,3.901,523,0.867,524,1.098,525,0.93,526,3.275,527,1.878,528,1.878,529,1.098,530,2.252,531,3.801,532,1.59,533,1.098,534,1.878,535,0.93,536,1.004,537,1.718,538,1.098,539,3.784,540,0.867,541,0.867,542,2.252,543,1.718,544,0.93,545,0.867,546,1.098,547,1.098,548,0.93,549,1.004,550,1.098,551,1.098,552,1.098,553,1.098,554,1.718,555,2.461,556,1.098,557,1.878,558,2.461,559,1.098,560,1.098,561,1.004,562,2.996,563,0.93,564,4.712,565,5.159,566,2.461,567,2.084,568,2.461,569,1.098,570,4.667,571,1.718,572,1.098,573,1.004,574,1.098,575,1.098,576,1.004,577,1.098,578,1.004,579,1.004,580,3.275,581,2.461,582,2.996,583,2.461,584,2.461,585,3.815,586,3.023,587,3.815,588,4.215,589,3.569,590,2.913,591,4.545,592,2.913,593,4.609,594,2.665,595,3.49,596,3.49,597,3.569,598,2.913,599,4.354,600,3.815,601,4.609,602,3.275,603,1.098,604,1.878,605,1.098,606,3.275,607,1.098,608,2.461,609,1.098,610,4.2,611,1.098,612,1.878,613,2.461,614,1.098,615,2.461,616,1.878,617,1.098,618,2.913,619,2.461,620,1.098,621,3.417,622,1.59,623,1.878,624,1.098,625,1.098,626,1.098,627,1.098,628,3.231,629,1.098,630,1.004,631,1.581,632,1.098,633,2.461,634,1.098,635,2.252,636,1.098,637,2.461,638,3.815,639,1.098,640,2.461,641,1.098,642,2.996,643,2.084,644,2.461,645,1.098,646,1.098,647,1.098,648,2.084,649,1.098,650,1.098,651,1.878,652,1.878,653,2.461,654,1.004,655,1.878,656,1.098,657,1.098,658,2.252,659,3.266,660,1.098,661,1.878,662,1.878,663,1.004,664,3.569,665,1.098,666,2.665,667,1.878,668,1.878,669,1.098,670,1.098,671,1.098,672,1.004,673,1.098,674,1.098,675,1.098,676,4.022,677,1.098,678,1.098,679,1.878,680,0.93,681,1.098,682,1.098,683,1.098,684,1.098,685,1.098,686,1.098,687,1.098,688,1.098,689,1.098,690,1.098,691,1.098,692,1.098,693,0.867,694,1.098,695,1.718,696,1.098,697,1.098,698,1.098,699,1.098,700,2.467,701,1.098,702,1.098,703,1.098,704,1.098,705,1.098,706,1.098,707,1.098,708,4.354,709,1.098,710,0.93,711,1.098,712,1.098,713,1.098,714,1.004,715,1.098,716,1.098,717,1.098,718,1.098,719,3.275,720,1.098,721,1.098,722,2.461,723,1.878,724,1.098,725,4.545,726,1.098,727,2.913,728,3.569,729,1.098,730,1.098,731,2.461,732,1.098,733,1.098,734,1.098,735,1.098,736,1.098,737,0.814,738,1.098,739,2.913,740,1.098,741,1.098,742,1.098,743,1.878,744,1.098,745,1.004,746,1.098,747,1.718,748,1.098,749,2.461,750,0.93,751,1.098,752,1.098,753,1.098,754,1.098,755,1.098,756,1.313,757,1.098,758,1.928,759,1.098,760,1.098,761,1.098,762,2.461,763,1.098,764,1.098,765,1.098,766,1.098,767,1.098,768,1.098,769,1.098,770,1.098,771,1.098,772,1.098,773,0.768,774,1.098,775,1.098,776,1.098,777,1.098,778,1.878,779,1.098,780,1.098,781,1.878,782,1.098,783,1.098,784,1.098,785,1.098,786,1.098,787,1.098,788,1.004,789,1.004,790,1.098,791,1.098,792,1.098,793,1.004,794,1.098,795,1.098,796,1.098,797,0.814,798,1.004,799,1.098,800,2.467,801,1.004,802,0.814,803,1.004,804,1.098,805,1.098,806,1.098,807,1.718,808,1.098,809,1.878,810,1.098,811,2.665,812,1.098,813,1.098,814,1.878,815,1.098,816,1.098,817,1.098,818,1.878,819,1.098,820,1.098,821,1.098,822,1.098,823,1.59,824,1.098,825,1.004,826,1.004,827,1.004,828,1.004,829,1.004,830,1.004,831,1.098,832,1.098,833,1.098,834,1.098,835,1.098,836,0.93,837,1.098]],["title/classes/SignupDto.html",[0,0.206,242,2.368]],["body/classes/SignupDto.html",[0,0.304,2,0.931,3,0.174,4,0.174,5,0.174,10,0.234,11,0.869,18,0.538,19,0.016,20,0.735,23,0.736,29,0.942,34,0.286,38,0.193,44,2.01,58,1.619,73,0.011,74,0.011,94,2.666,226,3.065,242,3.493,267,1.661,350,3.108,382,3.35,423,3.46,433,3.106,446,3.108,525,3.743,631,3.154,842,4.189,843,4.189,844,4.189,846,2.837,862,3.35,863,4.42,865,4.924,866,4.924,867,4.924,868,4.924,873,4.321,874,2.837,877,4.455,878,3.493,880,4.924,881,3.909,882,3.065,885,2,887,2.485,888,2.837,889,4.42,891,2.647,892,2.837,893,3.065,894,3.743,1029,5.859,1196,5.002,1416,3.732,1417,4.311,1418,4.311,1419,4.311,1420,4.311,1421,4.311,1422,4.311,1423,4.311,1424,4.311,1425,4.311,1426,4.311,1427,4.311,1428,3.35]],["title/interfaces/Template.html",[469,1.704,508,1.881]],["body/interfaces/Template.html",[0,0.075,3,0.097,4,0.097,5,0.238,8,0.812,10,0.077,11,0.483,12,0.472,15,1.827,17,0.812,18,0.402,19,0.016,20,0.623,21,1.268,31,1.621,34,0.189,38,0.063,39,2.129,41,1.426,43,2.672,44,1.323,48,1.274,51,0.927,73,0.005,74,0.005,100,0.52,101,1.318,106,1.312,109,0.439,111,0.317,113,0.639,159,0.725,172,0.623,185,1.543,206,1.634,207,3.553,228,0.927,244,1.823,248,1.002,261,0.866,346,1.715,361,2.093,387,2.028,390,1.467,404,0.866,408,1.775,419,1.119,429,0.766,445,0.927,451,1.002,458,1.311,469,1.397,470,1.587,471,0.866,472,0.725,473,0.812,474,1.002,475,1.095,476,1.095,477,1.095,478,1.095,479,1.095,480,1.095,481,1.095,482,1.095,483,1.095,484,1.095,485,1.095,486,1.095,487,1.095,488,1.095,489,1.095,490,1.095,491,1.095,492,1.095,493,1.095,494,1.095,495,1.095,496,1.095,497,1.095,498,1.874,499,1.481,500,1.874,501,1.095,502,2.457,503,1.874,504,0.812,505,1.874,506,1.002,507,1.311,508,3.586,509,1.002,510,1.311,511,2.081,512,1.002,513,1.311,514,0.866,515,1.002,516,2.584,517,1.718,518,2.769,519,1.874,520,1.715,521,1.002,522,3.898,523,0.866,524,1.095,525,0.927,526,3.27,527,1.874,528,1.874,529,1.095,530,2.248,531,3.798,532,1.587,533,1.095,534,1.874,535,0.927,536,1.002,537,1.715,538,1.095,539,3.782,540,0.866,541,0.866,542,2.248,543,1.715,544,0.927,545,0.866,546,1.095,547,1.095,548,0.927,549,1.002,550,1.095,551,1.095,552,1.095,553,1.095,554,1.715,555,2.457,556,1.095,557,1.874,558,2.457,559,1.095,560,1.095,561,1.002,562,2.992,563,0.927,564,4.709,565,5.156,566,2.457,567,2.081,568,2.457,569,1.095,570,4.664,571,1.715,572,1.095,573,1.002,574,1.095,575,1.095,576,1.002,577,1.095,578,1.002,579,1.002,580,3.27,581,2.457,582,2.992,583,2.457,584,2.457,585,3.811,586,3.019,587,3.811,588,4.211,589,3.565,590,2.909,591,4.542,592,2.909,593,4.606,594,2.661,595,3.486,596,3.486,597,3.565,598,2.909,599,4.35,600,3.811,601,4.606,602,3.27,603,1.095,604,1.874,605,1.095,606,3.27,607,1.095,608,2.457,609,1.095,610,4.196,611,1.095,612,1.874,613,2.457,614,1.095,615,2.457,616,1.874,617,1.095,618,2.909,619,2.457,620,1.095,621,3.415,622,1.587,623,1.874,624,1.095,625,1.095,626,1.095,627,1.095,628,3.227,629,1.095,630,1.002,631,1.579,632,1.095,633,2.457,634,1.095,635,2.248,636,1.095,637,2.457,638,3.811,639,1.095,640,2.457,641,1.095,642,2.992,643,2.081,644,2.457,645,1.095,646,1.095,647,1.095,648,2.081,649,1.095,650,1.095,651,1.874,652,1.874,653,2.457,654,1.002,655,1.874,656,1.095,657,1.095,658,2.248,659,3.262,660,1.095,661,1.874,662,1.874,663,1.002,664,3.565,665,1.095,666,2.661,667,1.874,668,1.874,669,1.095,670,1.095,671,1.095,672,1.002,673,1.095,674,1.095,675,1.095,676,4.018,677,1.095,678,1.095,679,1.874,680,0.927,681,1.095,682,1.095,683,1.095,684,1.095,685,1.095,686,1.095,687,1.095,688,1.095,689,1.095,690,1.095,691,1.095,692,1.095,693,0.866,694,1.095,695,1.715,696,1.095,697,1.095,698,1.095,699,1.095,700,2.464,701,1.095,702,1.095,703,1.095,704,1.095,705,1.095,706,1.095,707,1.095,708,4.35,709,1.095,710,0.927,711,1.095,712,1.095,713,1.095,714,1.002,715,1.095,716,1.095,717,1.095,718,1.095,719,3.27,720,1.095,721,1.095,722,2.457,723,1.874,724,1.095,725,4.542,726,1.095,727,2.909,728,3.565,729,1.095,730,1.095,731,2.457,732,1.095,733,1.095,734,1.095,735,1.095,736,1.095,737,0.812,738,1.095,739,2.909,740,1.095,741,1.095,742,1.095,743,1.874,744,1.095,745,1.002,746,1.095,747,1.715,748,1.095,749,2.457,750,0.927,751,1.095,752,1.095,753,1.095,754,1.095,755,1.095,756,1.311,757,1.095,758,1.925,759,1.095,760,1.095,761,1.095,762,2.457,763,1.095,764,1.095,765,1.095,766,1.095,767,1.095,768,1.095,769,1.095,770,1.095,771,1.095,772,1.095,773,0.766,774,1.095,775,1.095,776,1.095,777,1.095,778,1.874,779,1.095,780,1.095,781,1.874,782,1.095,783,1.095,784,1.095,785,1.095,786,1.095,787,1.095,788,1.002,789,1.002,790,1.095,791,1.095,792,1.095,793,1.002,794,1.095,795,1.095,796,1.095,797,0.812,798,1.002,799,1.095,800,2.464,801,1.002,802,0.812,803,1.002,804,1.095,805,1.095,806,1.095,807,1.715,808,1.095,809,1.874,810,1.095,811,2.661,812,1.095,813,1.095,814,1.874,815,1.095,816,1.095,817,1.095,818,1.874,819,1.095,820,1.095,821,1.095,822,1.095,823,1.587,824,1.095,825,1.002,826,1.002,827,1.002,828,1.002,829,1.002,830,1.002,831,1.095,832,1.095,833,1.095,834,1.095,835,1.095,836,0.927,837,1.095]],["title/injectables/TemplateEditorService.html",[208,0.904,507,2.096]],["body/injectables/TemplateEditorService.html",[0,0.15,3,0.113,4,0.113,5,0.113,10,0.153,11,0.642,12,0.705,13,1.31,17,1.619,18,0.468,19,0.016,20,0.704,21,1.424,22,2.779,23,0.683,28,1.021,29,0.778,30,1.96,34,0.126,38,0.126,44,1.781,48,2.626,52,1.184,73,0.008,74,0.008,101,1.535,206,1.39,208,0.985,209,1.184,251,1.848,341,2.582,361,2.536,472,3.524,473,3.95,504,1.619,507,2.285,514,1.724,523,2.582,536,1.996,582,1.996,659,1.996,666,4.258,672,1.996,700,3.942,745,2.988,747,1.996,750,1.848,756,3.255,758,3.446,931,1.619,933,3.453,987,2.182,1062,2.182,1063,2.182,1068,3.639,1114,3.267,1141,3.639,1176,2.423,1178,1.724,1429,2.182,1430,5.039,1431,5.594,1432,4.204,1433,5.594,1434,4.204,1435,4.204,1436,2.808,1437,4.204,1438,2.808,1439,5.991,1440,4.204,1441,5.039,1442,2.808,1443,2.808,1444,4.204,1445,2.808,1446,4.204,1447,2.808,1448,4.204,1449,2.431,1450,2.808,1451,2.808,1452,3.915,1453,2.808,1454,5.594,1455,2.808,1456,5.991,1457,2.808,1458,2.808,1459,2.808,1460,2.808,1461,4.204,1462,2.808,1463,2.808,1464,2.808,1465,2.808,1466,2.808,1467,2.808,1468,2.808,1469,2.808,1470,2.808,1471,2.808,1472,2.182,1473,2.808,1474,4.204,1475,2.808,1476,2.808,1477,2.808,1478,3.267,1479,2.808,1480,2.808,1481,2.808,1482,2.808,1483,2.808,1484,2.808,1485,2.808,1486,4.204,1487,2.808,1488,2.808,1489,2.808,1490,2.808,1491,2.808,1492,2.808,1493,2.808,1494,3.639,1495,2.808,1496,2.431,1497,2.431,1498,2.808,1499,2.808,1500,2.808,1501,2.808,1502,2.808,1503,2.808,1504,2.808,1505,4.204,1506,2.808,1507,5.039,1508,5.039,1509,2.808,1510,2.808,1511,2.808,1512,2.808,1513,2.808,1514,4.204,1515,5.039,1516,5.039,1517,5.594,1518,2.808,1519,2.808,1520,2.808,1521,2.808,1522,2.808,1523,6.041,1524,6.703,1525,2.808,1526,2.808]],["title/modules/TemplatePlaygroundModule.html",[169,1.554,1527,2.742]],["body/modules/TemplatePlaygroundModule.html",[0,0.25,3,0.188,4,0.188,5,0.188,19,0.016,34,0.345,38,0.209,73,0.012,74,0.012,169,1.881,171,2.278,172,2.064,173,2.691,174,3.813,175,3.402,176,3.813,177,2.691,184,3.453,185,2.278,186,2.538,188,3.073,472,2.401,473,2.691,504,2.691,506,3.319,507,4.014,508,2.923,509,3.319,510,4.014,511,3.073,512,3.319,513,4.014,514,2.867,515,3.319,693,4.815,1527,5.601,1528,4.042,1529,4.042,1530,4.042,1531,4.042,1532,4.669,1533,5.992,1534,5.992,1535,4.669,1536,4.042,1537,5.992,1538,4.669,1539,5.992,1540,4.669,1541,5.992,1542,4.669]],["title/interfaces/Tokens.html",[338,2.223,469,1.704]],["body/interfaces/Tokens.html",[0,0.21,3,0.158,4,0.158,5,0.158,10,0.213,11,0.816,15,2.146,18,0.452,19,0.016,20,0.734,21,1.33,22,3.164,31,2.146,34,0.273,38,0.273,39,2.405,58,0.999,73,0.011,74,0.011,96,0.686,100,1.971,101,1.788,106,1.649,111,0.884,113,1.726,192,1.916,206,1.881,208,1.253,308,2.135,312,3.301,314,2.585,328,4.63,334,5.001,335,5.001,338,3.08,361,2.146,372,3.282,387,2.684,390,2.818,408,2.561,431,2.792,433,1.916,469,2.362,471,2.412,539,2.264,631,2.253,931,2.264,933,3.758,1150,2.792,1155,4.152,1157,4.152,1158,3.052,1160,3.052,1161,3.052,1163,3.052,1165,3.052,1167,4.152,1168,2.792,1169,3.052,1170,3.052,1171,3.052,1172,3.052,1173,3.052,1174,3.052,1175,2.792,1176,2.264,1177,2.792,1178,2.412,1179,2.792,1180,3.052,1181,3.052,1182,3.052,1183,3.052,1184,3.799,1185,3.052,1186,3.052,1187,3.052,1188,5.299,1189,3.052,1190,5.467,1191,3.052,1192,3.052,1193,3.052,1194,3.052]],["title/classes/UpdateUserDto.html",[0,0.206,1543,2.538]],["body/classes/UpdateUserDto.html",[0,0.274,2,0.795,3,0.148,4,0.148,5,0.148,10,0.2,11,0.781,12,0.87,18,0.526,19,0.016,20,0.663,23,0.721,29,1.066,34,0.299,38,0.165,43,2.444,73,0.01,74,0.01,94,2.61,105,1.97,109,1.978,113,1.354,227,2.726,244,2.122,245,2.788,259,4.51,267,1.419,339,3.622,350,2.983,416,3.864,417,4.174,418,4.174,419,2.371,429,2.778,433,3.251,446,3.127,458,2.778,737,3.657,839,2.617,841,2.861,842,3.864,843,3.864,844,3.864,848,3.634,849,4.425,852,5.491,853,5.491,854,5.491,855,5.491,858,3.187,863,2.861,870,3.634,871,3.187,873,4.093,874,2.423,875,3.187,877,3.864,879,3.187,881,4.429,882,2.617,883,3.972,884,4.929,885,1.708,886,2.261,888,3.864,889,3.972,890,4.425,891,2.261,892,2.423,893,2.617,894,2.423,1543,3.364,1544,6.243,1545,5.112,1546,3.682,1547,3.682,1548,3.682,1549,3.682,1550,3.682,1551,3.682,1552,3.682,1553,3.682,1554,3.682,1555,3.682,1556,3.187,1557,3.187,1558,2.861]],["title/entities/User.html",[245,1.423,1241,2.538]],["body/entities/User.html",[0,0.241,3,0.124,4,0.124,5,0.124,10,0.289,11,0.688,12,0.967,18,0.544,19,0.016,20,0.695,21,2.203,23,0.727,29,0.626,34,0.279,37,1.362,38,0.202,42,2.667,43,2.255,44,2.068,48,2.875,50,4.134,58,1.653,60,2.742,73,0.009,74,0.009,94,2.632,101,0.752,105,1.187,113,1.192,227,2.706,245,2.828,267,1.187,339,3.383,350,2.903,416,3.501,417,3.782,418,3.782,419,2.089,423,3.649,429,2.447,433,3.276,441,2.963,446,3.163,458,2.447,517,2.447,539,1.776,567,4.696,737,2.595,801,2.19,842,3.501,843,3.501,844,3.501,845,2.963,870,3.201,873,4.124,874,2.028,878,2.765,881,3.594,882,2.19,883,3.498,884,4.134,885,1.429,887,1.776,888,2.963,891,3.993,892,2.963,893,2.19,894,2.028,902,3.897,903,3.897,904,3.498,905,2.667,906,2.667,1020,2.667,1140,3.498,1175,2.19,1176,1.776,1177,2.19,1178,1.892,1179,2.19,1241,2.028,1242,2.19,1264,2.667,1269,2.667,1270,2.667,1271,2.667,1351,3.498,1368,2.667,1428,3.498,1559,2.394,1560,3.081,1561,3.081,1562,3.081,1563,3.081,1564,4.503,1565,3.081,1566,3.081,1567,3.081,1568,3.081,1569,3.081,1570,3.081,1571,3.081,1572,3.081,1573,3.081,1574,3.081,1575,3.081,1576,3.081,1577,4.503,1578,3.081,1579,4.503,1580,4.503,1581,4.503,1582,3.081,1583,3.081,1584,3.081,1585,3.081,1586,3.081,1587,3.081,1588,3.081,1589,3.081,1590,3.081,1591,4.503,1592,3.081,1593,3.081,1594,4.503,1595,2.394,1596,2.667,1597,2.667,1598,2.667]],["title/injectables/UserRepository.html",[208,0.904,1599,2.368]],["body/injectables/UserRepository.html",[0,0.246,3,0.185,4,0.185,5,0.185,10,0.25,12,0.875,13,1.85,15,2.708,18,0.516,19,0.016,20,0.707,23,0.707,28,1.266,29,0.965,30,2.048,31,2.453,34,0.311,37,2.033,38,0.206,52,1.94,58,1.509,73,0.012,74,0.012,96,0.804,100,1.697,101,1.604,111,1.335,190,2.825,206,1.268,208,1.391,209,1.94,230,3.027,245,2.189,361,1.625,459,3.644,517,3.998,886,2.825,1277,5.393,1284,5.107,1287,3.981,1599,4.262,1600,3.981,1601,5.934,1602,5.136,1603,3.981,1604,4.6,1605,5.934,1606,4.6,1607,5.136,1608,4.6,1609,4.611,1610,4.6,1611,4.6,1612,4.6,1613,4.6,1614,4.6,1615,3.981]],["title/classes/UserResponseDto.html",[0,0.206,348,2.742]],["body/classes/UserResponseDto.html",[0,0.179,2,0.723,3,0.135,4,0.135,5,0.135,10,0.182,11,0.73,12,0.868,18,0.548,19,0.016,20,0.714,23,0.749,28,0.611,29,0.776,34,0.215,38,0.15,43,1.842,46,3.735,48,1.926,52,2.713,58,1.636,73,0.009,74,0.009,94,2.682,111,0.753,113,1.266,226,2.38,227,2.835,245,2.834,267,1.29,333,2.602,339,3.895,348,3.399,350,3.102,397,2.898,398,4.138,399,4.138,416,3.67,419,2.822,428,2.898,429,2.598,432,2.898,433,3.138,434,2.898,443,4.333,444,4.827,445,3.146,446,3.279,448,5.265,452,4.138,453,4.138,454,4.138,455,4.138,458,3.306,459,2.936,466,4.138,468,5.265,737,2.756,842,3.67,843,3.67,844,3.67,845,3.146,870,3.399,873,3.95,874,2.203,886,2.056,887,2.756,888,4.003,891,2.056,892,2.203,894,3.146,1140,3.715,1428,4.726,1595,3.715,1596,4.827,1597,2.898,1598,2.898,1616,6.432,1617,4.781,1618,4.781,1619,6.083,1620,3.348,1621,3.348,1622,3.348,1623,3.348,1624,3.348,1625,3.348,1626,3.348,1627,3.348,1628,3.348,1629,3.348,1630,3.348,1631,3.348,1632,3.348,1633,3.348,1634,3.348,1635,3.348,1636,3.348,1637,3.348,1638,3.348,1639,3.348]],["title/controllers/UsersController.html",[89,2.223,1640,2.742]],["body/controllers/UsersController.html",[0,0.248,3,0.187,4,0.187,5,0.187,10,0.252,12,0.832,13,1.861,18,0.491,19,0.016,20,0.738,23,0.709,28,1.204,29,0.918,30,2.171,34,0.296,38,0.208,52,3.11,73,0.012,74,0.012,84,3.3,89,2.676,91,2.676,94,2.569,96,0.811,99,3.3,100,1.713,101,1.7,216,4.019,261,3.666,365,3.803,459,3.666,1274,4.638,1302,4.019,1543,5,1558,3.608,1609,3.608,1640,4.244,1641,4.019,1642,6.029,1643,5.167,1644,4.643,1645,4.019,1646,5.97,1647,4.643,1648,4.019,1649,5.97,1650,4.643,1651,5.97,1652,4.643,1653,4.643,1654,4.643,1655,4.019,1656,4.019,1657,4.643,1658,4.643,1659,4.643,1660,4.643,1661,4.643,1662,4.643,1663,4.643,1664,4.643]],["title/modules/UsersModule.html",[169,1.554,183,2.368]],["body/modules/UsersModule.html",[0,0.27,3,0.203,4,0.203,5,0.203,19,0.016,34,0.338,38,0.226,73,0.012,74,0.012,91,3.625,96,0.881,169,2.761,171,2.459,172,2.228,173,2.905,174,2.905,175,2.592,176,3.951,177,3.951,183,4.815,184,3.625,185,2.459,186,2.739,188,3.317,189,3.916,190,3.095,245,1.859,365,4.567,886,3.095,1599,4.865,1640,4.872,1655,4.363,1665,4.363,1666,4.363,1667,4.363,1668,5.041,1669,5.041,1670,4.363,1671,5.041]],["title/injectables/UsersService.html",[208,0.904,365,2.223]],["body/injectables/UsersService.html",[0,0.203,3,0.153,4,0.153,5,0.153,10,0.206,12,0.878,13,1.627,15,2.108,18,0.518,19,0.016,20,0.709,23,0.727,28,1.27,29,0.968,30,2.265,31,2.271,34,0.312,38,0.17,39,1.4,52,2.841,58,0.965,73,0.01,74,0.01,84,2.698,96,0.663,99,2.698,100,1.4,101,1.7,106,1.632,111,0.854,113,1.844,206,1.772,208,1.224,209,1.6,230,2.497,242,4.38,244,3.009,245,2.201,365,3.009,380,4.056,387,2.637,390,2.768,408,2.516,423,2.837,459,3.205,789,4.241,886,2.33,1213,2.33,1274,4.056,1284,2.698,1543,4.781,1558,2.949,1599,4.276,1602,4.518,1603,3.285,1607,4.518,1609,4.056,1615,3.285,1642,5.563,1643,4.518,1645,4.518,1648,4.518,1656,3.285,1670,3.285,1672,3.285,1673,3.795,1674,5.22,1675,3.795,1676,3.795,1677,3.795,1678,3.795,1679,3.795,1680,3.795,1681,3.795,1682,5.22,1683,3.795,1684,3.285,1685,5.22,1686,3.795,1687,3.795,1688,3.795,1689,3.795]],["title/classes/ValidationError.html",[0,0.206,130,1.789]],["body/classes/ValidationError.html",[0,0.395,2,1.178,3,0.163,4,0.163,5,0.163,10,0.22,11,0.833,12,0.511,14,2.958,18,0.513,19,0.016,20,0.743,23,0.702,28,0.739,29,0.858,34,0.182,38,0.331,73,0.011,74,0.011,96,0.708,103,3.414,104,2.082,105,2.88,106,1.279,107,3.214,108,2.602,109,2.058,110,3.353,111,1.228,112,3.206,113,1.445,115,2.082,120,1.632,121,3.206,122,2.201,123,2.201,124,2.201,125,2.201,126,2.201,127,1.879,128,2.301,129,1.708,130,2.531,131,2.201,132,2.201,133,1.79,134,1.632,135,1.976,136,1.79,137,2.201,138,1.976,139,2.201,140,2.201,141,2.201,142,1.879,143,2.201,144,1.976,145,2.201,146,1.976,147,2.201,148,2.201,149,1.879,150,1.708,151,1.79,152,2.201,153,2.201,300,3.221,436,2.334,437,2.334,438,2.334,439,2.334,1690,4.05]],["title/classes/VerifyEmailDto.html",[0,0.206,255,2.538]],["body/classes/VerifyEmailDto.html",[0,0.341,2,1.113,3,0.208,4,0.208,5,0.208,10,0.28,11,0.974,18,0.475,19,0.016,20,0.696,23,0.65,34,0.286,38,0.231,58,1.761,60,3.194,61,4.463,62,5.384,73,0.013,74,0.013,94,2.352,109,1.988,227,2.457,255,4.197,267,1.987,350,2.92,446,2.689,846,3.393,877,4.197,878,3.916,885,2.392,887,2.972,1196,4.534,1255,5.52,1315,5.52,1691,5.994,1692,4.463,1693,5.156,1694,6.378,1695,5.156,1696,6.378,1697,5.156,1698,5.156]],["title/injectables/ZipExportService.html",[208,0.904,510,2.096]],["body/injectables/ZipExportService.html",[0,0.194,3,0.146,4,0.146,5,0.253,10,0.197,12,0.637,13,1.574,18,0.433,19,0.016,20,0.637,23,0.593,28,0.921,29,0.702,30,1.813,34,0.162,38,0.162,41,1.225,73,0.01,74,0.01,101,0.883,206,1.826,208,1.184,209,1.525,349,2.572,361,2.424,472,3.237,504,2.085,508,3.071,510,2.744,511,4.358,514,2.221,516,2.221,517,1.966,522,2.38,523,2.221,530,2.572,531,4.914,532,4.633,543,2.572,563,3.828,573,2.572,631,2.129,648,2.38,750,2.38,756,2.744,758,2.596,773,3.161,793,3.589,797,2.085,807,4.876,811,4.475,823,3.323,825,2.572,826,2.572,827,2.572,828,2.572,829,2.572,830,2.572,987,4.52,1062,2.811,1063,2.811,1114,2.811,1120,4.371,1131,3.131,1349,2.811,1472,3.923,1478,2.811,1494,5.035,1496,4.371,1497,5.035,1699,4.892,1700,2.811,1701,5.05,1702,5.05,1703,6.296,1704,5.05,1705,3.618,1706,5.05,1707,3.618,1708,7.182,1709,3.618,1710,3.923,1711,5.817,1712,3.618,1713,3.618,1714,3.618,1715,5.035,1716,3.618,1717,3.618,1718,3.618,1719,3.618,1720,3.618,1721,3.618,1722,3.618,1723,3.618,1724,3.618,1725,3.618,1726,3.618,1727,3.618,1728,3.618,1729,3.618,1730,5.05,1731,3.618,1732,5.05,1733,3.618,1734,3.618,1735,3.618,1736,6.296,1737,5.05,1738,3.618,1739,3.618,1740,3.618,1741,3.618,1742,3.618,1743,3.618,1744,3.618,1745,3.618,1746,3.618,1747,5.817,1748,3.618,1749,3.618,1750,3.618,1751,3.618,1752,3.618,1753,3.618,1754,3.618,1755,3.618,1756,3.131,1757,5.05,1758,3.618,1759,3.618,1760,3.618,1761,3.618,1762,3.618,1763,3.131,1764,3.131,1765,3.618,1766,3.618,1767,3.618,1768,3.618,1769,3.618,1770,3.618]],["title/coverage.html",[545,3.241]],["body/coverage.html",[0,0.422,1,2.397,5,0.124,6,2.67,7,2.67,18,0.23,19,0.016,35,2.397,41,1.045,60,1.301,73,0.009,74,0.009,75,2.397,76,2.67,77,2.67,89,3.069,90,2.193,92,2.67,97,1.894,103,1.363,104,3.541,127,1.431,130,1.431,133,1.363,138,1.505,142,1.431,149,1.431,151,1.363,154,1.894,155,3.853,156,3.825,163,1.894,165,1.894,167,1.894,175,1.586,195,2.397,208,1.715,210,2.67,214,2.193,215,2.67,223,2.03,232,2.193,242,1.894,245,1.138,255,2.03,268,1.894,270,2.193,308,1.677,309,1.894,310,1.894,332,2.67,333,3.502,338,1.778,348,2.193,360,2.67,365,1.778,366,1.894,368,1.894,372,1.894,441,2.03,442,2.67,469,2.753,470,2.03,472,3.67,473,3.749,474,4.163,499,1.894,507,1.677,508,1.505,510,1.677,513,1.677,518,2.03,545,1.894,621,4.686,693,1.894,756,1.677,773,1.677,839,2.193,840,2.67,841,3.502,895,2.397,896,2.67,897,2.67,913,2.67,914,2.67,962,2.397,963,2.67,1048,3.502,1049,3.502,1150,3.785,1195,2.67,1200,2.67,1241,2.966,1243,2.67,1272,2.67,1304,2.67,1328,2.193,1329,3.502,1337,2.193,1375,2.397,1376,2.67,1377,2.67,1383,2.397,1413,2.67,1414,2.67,1416,2.67,1429,3.502,1449,2.67,1452,2.397,1543,2.03,1544,2.67,1559,2.397,1599,1.894,1600,2.67,1616,2.67,1640,2.193,1641,2.67,1672,2.67,1691,2.67,1692,2.67,1699,3.502,1700,3.502,1710,2.397,1771,3.085,1772,3.085,1773,4.507,1774,7.024,1775,7.316,1776,4.507,1777,3.085,1778,3.085,1779,7.316,1780,5.325,1781,5.856,1782,5.325,1783,7.316,1784,6.718,1785,2.67,1786,4.609,1787,2.67,1788,2.67,1789,2.67,1790,3.901,1791,2.67,1792,2.67,1793,3.085,1794,3.085,1795,3.085]],["title/dependencies.html",[172,2.052,800,2.115]],["body/dependencies.html",[0,0.348,19,0.016,37,2.874,60,2.244,73,0.013,74,0.013,96,0.93,172,2.352,190,3.268,192,2.596,267,2.051,314,3.502,380,4.136,535,3.502,885,2.469,944,4.136,981,4.607,1001,3.502,1207,4.136,1352,5.053,1556,4.607,1557,4.607,1796,5.323,1797,5.323,1798,5.323,1799,7.023,1800,5.323,1801,5.323,1802,6.504,1803,5.323,1804,5.323,1805,5.323,1806,5.323,1807,5.323,1808,5.323,1809,5.323,1810,5.323,1811,5.323,1812,5.323,1813,5.323,1814,5.323,1815,5.323,1816,5.323,1817,5.323,1818,5.323,1819,5.323,1820,5.323,1821,5.323,1822,5.323]],["title/miscellaneous/enumerations.html",[1823,1.973,1824,4.018]],["body/miscellaneous/enumerations.html",[10,0.331,19,0.015,22,3.271,73,0.014,74,0.014,245,2.601,873,4.329,904,5.478,1559,4.737,1823,3.744,1824,5.277,1825,6.097]],["title/miscellaneous/functions.html",[1823,1.973,1826,4.018]],["body/miscellaneous/functions.html",[10,0.337,19,0.014,73,0.014,74,0.014,175,3.852,1789,5.37,1823,3.809,1826,5.37,1827,6.204]],["title/index.html",[10,0.21,1715,3.338]],["body/index.html",[4,0.158,19,0.015,73,0.011,74,0.011,186,3.822,227,1.511,326,2.58,349,2.788,404,3.278,405,5.464,446,2.747,537,3.795,542,2.788,545,2.408,773,2.901,802,2.26,803,2.788,848,4.314,1001,4.818,1088,3.394,1178,2.408,1184,2.788,1219,3.394,1277,3.047,1379,3.394,1523,3.394,1595,3.047,1763,5.639,1764,4.621,1828,3.922,1829,3.922,1830,6.069,1831,5.338,1832,3.922,1833,3.922,1834,5.338,1835,6.069,1836,3.922,1837,6.515,1838,7.323,1839,3.922,1840,7.195,1841,3.394,1842,3.922,1843,3.922,1844,3.922,1845,4.621,1846,3.922,1847,6.069,1848,5.338,1849,3.922,1850,3.922,1851,3.922,1852,3.922,1853,3.922,1854,6.515,1855,7.032,1856,5.338,1857,3.922,1858,3.922,1859,3.922,1860,3.922,1861,3.922,1862,5.338,1863,5.338,1864,3.922,1865,3.922,1866,5.338,1867,6.816,1868,6.515,1869,3.922,1870,5.338,1871,3.922,1872,3.922,1873,3.922,1874,3.922,1875,6.515,1876,3.922,1877,3.922,1878,3.922,1879,3.922,1880,5.338,1881,3.922,1882,3.922,1883,3.922,1884,3.922,1885,3.922,1886,5.338,1887,3.922,1888,3.922,1889,3.922,1890,3.922,1891,3.922,1892,5.639,1893,3.922,1894,3.922,1895,3.922,1896,3.922,1897,3.922,1898,3.922,1899,3.922,1900,3.922,1901,5.338,1902,3.922,1903,3.922,1904,3.922,1905,3.922,1906,3.922,1907,3.922,1908,3.922,1909,3.922,1910,5.338,1911,3.922,1912,3.922,1913,3.922,1914,3.922,1915,3.922,1916,5.338,1917,3.922,1918,3.922,1919,3.922,1920,5.338,1921,5.338,1922,3.922,1923,3.922,1924,3.922,1925,3.922,1926,3.922,1927,3.922,1928,3.922,1929,3.922,1930,3.922,1931,3.394,1932,3.922,1933,3.922,1934,3.922,1935,3.922,1936,3.922,1937,3.922,1938,3.394]],["title/modules.html",[171,2.575]],["body/modules.html",[19,0.014,73,0.014,74,0.014,170,4.169,171,2.861,181,3.859,182,3.602,183,3.602,307,3.859,1527,4.169,1536,6.756,1892,6.756,1939,7.805,1940,7.805]],["title/overview.html",[540,3.241]],["body/overview.html",[2,0.9,19,0.016,62,2.961,73,0.011,74,0.011,91,2.401,97,3.843,169,1.678,170,5.398,171,2.032,172,1.841,173,2.401,174,2.401,175,2.142,176,2.401,177,2.401,178,3.606,179,3.606,180,3.606,181,5.223,182,4.487,183,4.663,184,3.205,185,2.032,186,2.264,209,1.757,268,4.487,303,3.606,304,3.606,305,3.606,306,3.606,307,4.71,308,3.971,309,3.843,310,3.843,365,4.212,366,4.487,368,4.487,471,2.558,499,2.558,507,3.401,510,3.401,513,3.401,540,2.558,621,2.401,631,1.757,693,4.487,958,3.606,959,3.606,960,3.606,1214,3.606,1215,3.606,1216,3.606,1242,2.961,1472,3.237,1527,5.443,1528,3.606,1529,3.606,1530,3.606,1531,3.606,1599,4.487,1665,3.606,1666,3.606,1667,3.606,1684,3.606,1756,3.606,1941,4.166,1942,4.166]],["title/properties.html",[11,0.709,800,2.115]],["body/properties.html",[11,0.941,19,0.016,73,0.014,74,0.014,227,2.372,1931,5.329,1938,5.329,1943,6.157,1944,6.157,1945,6.157]],["title/routes.html",[544,3.473]],["body/routes.html",[19,0.014,73,0.014,74,0.014,544,4.155]],["title/miscellaneous/variables.html",[1823,1.973,1946,4.018]],["body/miscellaneous/variables.html",[3,0.146,10,0.197,12,0.457,18,0.524,19,0.016,21,2.326,22,3.185,41,2.246,44,2.343,48,2.839,73,0.01,74,0.01,101,0.886,166,3.107,195,4.527,206,1.607,207,3.33,217,2.819,227,1.398,340,4.481,341,2.228,423,3.166,424,3.932,472,2.996,473,2.091,576,2.579,621,2.091,628,2.387,643,2.387,648,2.387,710,2.387,756,2.75,758,2.602,773,2.75,802,2.916,969,3.932,1009,2.579,1048,2.819,1049,3.932,1115,4.38,1122,3.14,1135,5.043,1213,2.228,1229,4.38,1242,3.597,1383,3.932,1429,3.932,1452,3.932,1478,2.819,1699,2.819,1700,3.932,1710,3.932,1785,3.14,1786,3.14,1787,4.38,1788,4.38,1790,3.14,1791,4.38,1792,4.38,1823,2.228,1841,3.14,1845,4.38,1946,3.14,1947,3.628,1948,5.826,1949,3.628,1950,3.628,1951,3.628,1952,5.06,1953,3.628,1954,6.304,1955,3.628,1956,6.304,1957,3.628,1958,3.628,1959,3.628,1960,3.628,1961,3.628,1962,3.628,1963,3.628,1964,5.06,1965,5.826,1966,5.06,1967,5.06,1968,3.628,1969,5.06,1970,3.628,1971,5.06,1972,3.628,1973,5.06,1974,5.06,1975,3.628,1976,3.628,1977,3.628,1978,3.628,1979,3.628,1980,3.628,1981,3.628,1982,3.628,1983,3.628,1984,3.628,1985,3.628,1986,5.06,1987,3.628,1988,3.628,1989,3.628,1990,5.06,1991,3.628,1992,3.628,1993,5.826,1994,3.628,1995,3.628,1996,5.06,1997,3.628,1998,3.628,1999,3.628,2000,3.628,2001,3.628,2002,3.628,2003,3.628,2004,3.628,2005,3.628,2006,3.628,2007,3.628,2008,3.628,2009,3.628,2010,3.628,2011,5.06,2012,3.628,2013,3.628,2014,3.628,2015,3.628,2016,3.628,2017,3.628,2018,3.628,2019,3.628,2020,3.628,2021,3.628,2022,3.628,2023,3.628,2024,3.628]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"modules/ErrorsModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":621,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1944,"title":{},"body":{"properties.html":{}}}],["0.125rem",{"_index":670,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.14.2",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":655,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.2.2",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":679,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3.27",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["0.375rem",{"_index":677,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3s",{"_index":614,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.4.0",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["0.5px",{"_index":647,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.5rem",{"_index":610,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.7",{"_index":662,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.75rem",{"_index":664,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.875rem",{"_index":600,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0/1",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["004085",{"_index":684,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0056b3",{"_index":683,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["007bff",{"_index":658,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["01",{"_index":448,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UserResponseDto.html":{}}}],["01t00:00:00.000z",{"_index":468,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UserResponseDto.html":{}}}],["01t00:00:00.000z'})@createdatecolumn",{"_index":449,"title":{},"body":{"classes/BaseEntity.html":{}}}],["01t00:00:00.000z'})@updatedatecolumn",{"_index":460,"title":{},"body":{"classes/BaseEntity.html":{}}}],["1",{"_index":631,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateUserDto.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["1.5rem",{"_index":649,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["10",{"_index":1213,"title":{},"body":{"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1347,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["1000",{"_index":1188,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["10000",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100vh",{"_index":569,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["10px",{"_index":1127,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["10})@isoptional()@type(undefined)@ispositive()@min(1",{"_index":1369,"title":{},"body":{"classes/PaginationDto.html":{}}}],["11.0.0",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1684,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{}}}],["1233456",{"_index":1694,"title":{},"body":{"classes/VerifyEmailDto.html":{}}}],["1234567890",{"_index":894,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["1234567890'})@column({nullable",{"_index":1584,"title":{},"body":{"entities/User.html":{}}}],["1234567890'})@isoptional()@isphonenumber",{"_index":871,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["123e4567",{"_index":452,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UserResponseDto.html":{}}}],["12d3",{"_index":454,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UserResponseDto.html":{}}}],["12px",{"_index":671,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["14",{"_index":1464,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["15",{"_index":1194,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["15m",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{}}}],["15md",{"_index":1173,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["1c7430",{"_index":691,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1e7e34",{"_index":690,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1fr",{"_index":627,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1px",{"_index":595,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1rem",{"_index":589,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1})@isoptional()@type(undefined)@ispositive()@min(1",{"_index":1371,"title":{},"body":{"classes/PaginationDto.html":{}}}],["2",{"_index":1472,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["2.0.2",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["200px",{"_index":617,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["201",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["2023",{"_index":1619,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["2025",{"_index":447,"title":{},"body":{"classes/BaseEntity.html":{}}}],["20px",{"_index":1122,"title":{},"body":{"injectables/HbsRenderService.html":{},"miscellaneous/variables.html":{}}}],["22p02",{"_index":1031,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["23502",{"_index":938,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["23503",{"_index":936,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["23505",{"_index":934,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["24",{"_index":1193,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["250px",{"_index":634,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["28",{"_index":1941,"title":{},"body":{"overview.html":{}}}],["28a745",{"_index":608,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2b$12$hashedpassword",{"_index":1580,"title":{},"body":{"entities/User.html":{}}}],["2rem",{"_index":590,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3",{"_index":1756,"title":{},"body":{"injectables/ZipExportService.html":{},"overview.html":{}}}],["3.1.10",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":704,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["30000",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300ms",{"_index":705,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4.0.1",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1026,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["401",{"_index":997,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["409",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"classes/GlobalExceptionFilter.html":{}}}],["426614174000",{"_index":466,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UserResponseDto.html":{}}}],["426614174000'})@primarygeneratedcolumn('uuid",{"_index":456,"title":{},"body":{"classes/BaseEntity.html":{}}}],["495057",{"_index":641,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4e555b",{"_index":688,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4px",{"_index":654,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["5",{"_index":1942,"title":{},"body":{"overview.html":{}}}],["50",{"_index":667,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["500",{"_index":680,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["5432",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["545b62",{"_index":687,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["6",{"_index":62,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"entities/Otp.html":{},"classes/VerifyEmailDto.html":{},"overview.html":{}}}],["6.0.0",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1190,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["600",{"_index":640,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["6c757d",{"_index":602,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["7.0.6",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":1170,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["8",{"_index":525,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{}}}],["8.16.3",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["8})@isstrongpassword({minlength",{"_index":864,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["__dirname",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.click",{"_index":829,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.download",{"_index":827,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.href",{"_index":826,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.style.display",{"_index":1769,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["a456",{"_index":455,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UserResponseDto.html":{}}}],["abstract",{"_index":465,"title":{},"body":{"classes/BaseEntity.html":{}}}],["acceptsuggestiononenter",{"_index":1481,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["access",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResponseDto.html":{}}}],["access'})@apiresponse({status",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["accessors",{"_index":1367,"title":{},"body":{"classes/PaginationDto.html":{}}}],["accesstoken",{"_index":334,"title":{},"body":{"classes/AuthResponseDto.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["account",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["account'})@apiresponse({status",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":789,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/UsersService.html":{}}}],["actions",{"_index":609,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["active",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["adapter",{"_index":1238,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["add",{"_index":1711,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["addbearerauth",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addemailverification.ts",{"_index":7,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"coverage.html":{}}}],["addemailverification.ts:4",{"_index":24,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{}}}],["addemailverification.ts:6",{"_index":33,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{}}}],["addemailverification.ts:73",{"_index":27,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{}}}],["addemailverification1758794208948",{"_index":1,"title":{"classes/AddEmailVerification1758794208948.html":{}},"body":{"classes/AddEmailVerification1758794208948.html":{},"coverage.html":{}}}],["additional",{"_index":1733,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["addotpforeignkey.ts",{"_index":77,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{},"coverage.html":{}}}],["addotpforeignkey.ts:17",{"_index":78,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{}}}],["addotpforeignkey.ts:4",{"_index":79,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{}}}],["addotpforeignkey1758745851584",{"_index":75,"title":{"classes/AddOtpForeignKey1758745851584.html":{}},"body":{"classes/AddOtpForeignKey1758745851584.html":{},"coverage.html":{}}}],["address",{"_index":845,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/MailService.html":{},"entities/Otp.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["address'})@column({name",{"_index":1247,"title":{},"body":{"entities/Otp.html":{}}}],["addserver('http://localhost:3000",{"_index":2003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addserver('something",{"_index":2004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":904,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["again",{"_index":798,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["align",{"_index":585,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["allowing",{"_index":1881,"title":{},"body":{"index.html":{}}}],["alpha",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/TemplateEditorService.html":{}}}],["always",{"_index":1478,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":1925,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":1538,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["angular/common/http",{"_index":506,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["angular/core",{"_index":504,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["angular/forms",{"_index":1540,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["angular/platform",{"_index":1535,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["api",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/session/${this.sessionid}/docs",{"_index":709,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["apioperation",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":350,"title":{},"body":{"classes/AuthResponseDto.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"entities/Otp.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{},"classes/VerifyEmailDto.html":{}}}],["apiproperty({description",{"_index":339,"title":{},"body":{"classes/AuthResponseDto.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"entities/Otp.html":{},"classes/PaginatedResponseDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["apiproperty({enum",{"_index":874,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["apiproperty({example",{"_index":1196,"title":{},"body":{"classes/LoginDto.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["apipropertyoptional",{"_index":1351,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"entities/User.html":{}}}],["apipropertyoptional({description",{"_index":1368,"title":{},"body":{"classes/PaginationDto.html":{},"entities/User.html":{}}}],["apiresponse",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":1135,"title":{},"body":{"injectables/HbsRenderService.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app.useglobalpipes",{"_index":2019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":90,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appearance",{"_index":1731,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["apperror",{"_index":103,"title":{"classes/AppError.html":{}},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{},"coverage.html":{}}}],["apperror:5",{"_index":438,"title":{},"body":{"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["apperror:6",{"_index":439,"title":{},"body":{"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["apperror:7",{"_index":437,"title":{},"body":{"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["apperror:8",{"_index":436,"title":{},"body":{"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["apphttpexception",{"_index":154,"title":{"classes/AppHttpException.html":{}},"body":{"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{},"coverage.html":{}}}],["apphttpexception:7",{"_index":302,"title":{},"body":{"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{}}}],["apphttpexception:8",{"_index":301,"title":{},"body":{"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{}}}],["apple",{"_index":572,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["application",{"_index":1855,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1834,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":170,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":97,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":1098,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args.slice(0",{"_index":1100,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args[args.length",{"_index":1099,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["argumentshost",{"_index":970,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["arial",{"_index":1121,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["array",{"_index":1339,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["array.isarray(response.message",{"_index":1010,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["async",{"_index":15,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["attribute.name",{"_index":1515,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attribute.value",{"_index":1517,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["auth",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"modules/MyMailerModule.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.modules",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/entities/otp.entity",{"_index":1590,"title":{},"body":{"entities/User.html":{}}}],["auth_error",{"_index":168,"title":{},"body":{"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{}}}],["authcontroller",{"_index":214,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":134,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["authentication_error",{"_index":137,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["authenticationerror",{"_index":133,"title":{"classes/AuthenticationError.html":{}},"body":{"classes/AppError.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"injectables/ErrorHandlerService.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{},"coverage.html":{}}}],["authenticationerror('invalid",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authenticationerror('token",{"_index":953,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["authexception",{"_index":167,"title":{"classes/AuthException.html":{}},"body":{"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{},"coverage.html":{}}}],["authmodule",{"_index":181,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1931,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization_error",{"_index":141,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["authorizationerror",{"_index":138,"title":{"classes/AuthorizationError.html":{}},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{},"coverage.html":{}}}],["authorized",{"_index":139,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["authresponsedto",{"_index":270,"title":{"classes/AuthResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthResponseDto.html":{},"coverage.html":{}}}],["authresponsedto(result.tokens",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["authresponsedto})@apiresponse({status",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["authservice",{"_index":268,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":637,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["autoclosingbrackets",{"_index":1477,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingpairs",{"_index":1522,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingquotes",{"_index":1479,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["automatically",{"_index":775,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["automaticlayout",{"_index":1459,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["await",{"_index":39,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":1870,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1926,"title":{},"body":{"index.html":{}}}],["background",{"_index":591,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["backup",{"_index":1757,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["badge",{"_index":669,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["based",{"_index":1865,"title":{},"body":{"index.html":{}}}],["baseentity",{"_index":441,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"entities/Otp.html":{},"entities/User.html":{},"coverage.html":{}}}],["bash",{"_index":1741,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["basic",{"_index":1119,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["bcrypt",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":1686,"title":{},"body":{"injectables/UsersService.html":{}}}],["bearer",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":1760,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["between",{"_index":584,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["blinkmacsystemfont",{"_index":574,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["blob",{"_index":807,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["blockcomment",{"_index":1520,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["board",{"_index":1919,"title":{},"body":{"index.html":{}}}],["body",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/UsersController.html":{}}}],["bold",{"_index":607,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["boolean",{"_index":43,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"entities/Otp.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["bootstrap",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorsModule.html":{},"modules/MyMailerModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["border",{"_index":593,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bottom",{"_index":594,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["brackets",{"_index":1521,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["break",{"_index":1076,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["browse",{"_index":1940,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1536,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"modules.html":{}}}],["browsermodule",{"_index":1534,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["btn",{"_index":676,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["build",{"_index":2005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":1831,"title":{},"body":{"index.html":{}}}],["call",{"_index":801,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"entities/User.html":{}}}],["callback",{"_index":1448,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["cascade",{"_index":87,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{}}}],["case",{"_index":933,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{}}}],["catch",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"injectables/UsersService.html":{}}}],["catch(exception",{"_index":968,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["center",{"_index":587,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["change",{"_index":750,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["changes",{"_index":1762,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["channel",{"_index":1894,"title":{},"body":{"index.html":{}}}],["check",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HbsRenderService.html":{},"index.html":{}}}],["class",{"_index":0,"title":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthResponseDto.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/NotFoundError.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserResponseDto.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{}},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"modules/ErrorsModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthResponseDto.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/NotFoundError.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserResponseDto.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"overview.html":{}}}],["cleanupexpiredotps",{"_index":1273,"title":{},"body":{"injectables/OtpRepository.html":{},"injectables/OtpService.html":{}}}],["clear",{"_index":759,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["cleartimeout(this.savetimeout",{"_index":723,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["click",{"_index":1145,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["clicks",{"_index":1880,"title":{},"body":{"index.html":{}}}],["close",{"_index":1524,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["closed",{"_index":1402,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["cloud",{"_index":1864,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":303,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":304,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_errorsmodule",{"_index":958,"title":{},"body":{"modules/ErrorsModule.html":{},"overview.html":{}}}],["cluster_errorsmodule_exports",{"_index":959,"title":{},"body":{"modules/ErrorsModule.html":{},"overview.html":{}}}],["cluster_errorsmodule_providers",{"_index":960,"title":{},"body":{"modules/ErrorsModule.html":{},"overview.html":{}}}],["cluster_mymailermodule",{"_index":1214,"title":{},"body":{"modules/MyMailerModule.html":{},"overview.html":{}}}],["cluster_mymailermodule_exports",{"_index":1215,"title":{},"body":{"modules/MyMailerModule.html":{},"overview.html":{}}}],["cluster_mymailermodule_providers",{"_index":1216,"title":{},"body":{"modules/MyMailerModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule",{"_index":1528,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_bootstrap",{"_index":1529,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_declarations",{"_index":1530,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_providers",{"_index":1531,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1665,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1666,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1667,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":541,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"entities/Otp.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["code'})@column({name",{"_index":1256,"title":{},"body":{"entities/Otp.html":{}}}],["color",{"_index":601,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["colors",{"_index":1752,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["column",{"_index":567,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"entities/Otp.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"entities/User.html":{}}}],["column({default",{"_index":1571,"title":{},"body":{"entities/User.html":{}}}],["column({nullable",{"_index":1563,"title":{},"body":{"entities/User.html":{}}}],["columnnames",{"_index":69,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{}}}],["columns",{"_index":51,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserTable1758745851583.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["come",{"_index":1887,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1507,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["comments",{"_index":1474,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["common",{"_index":1069,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["common/entities/base.entity",{"_index":1264,"title":{},"body":{"entities/Otp.html":{},"entities/User.html":{}}}],["commonmodule",{"_index":1537,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["compare",{"_index":1072,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["complete",{"_index":1113,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["completed",{"_index":1404,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["compodoc",{"_index":532,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["compodocconfig",{"_index":470,"title":{"interfaces/CompoDocConfig.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["component",{"_index":499,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"overview.html":{}}}],["components",{"_index":1092,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["conditional",{"_index":1081,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["config",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MyMailerModule.html":{}}}],["configmodule.forroot",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"injectables/OtpService.html":{},"interfaces/Tokens.html":{}}}],["configservice.get('email_host",{"_index":1228,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["configservice.get('email_pass",{"_index":1234,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["configservice.get('email_port",{"_index":1230,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["configservice.get('email_user",{"_index":1232,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["configservice.get('jwt_expires_in",{"_index":329,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt_secret",{"_index":324,"title":{},"body":{"modules/AuthModule.html":{}}}],["configuration",{"_index":533,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["confirm('are",{"_index":785,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["conflict_error",{"_index":153,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["conflicterror",{"_index":151,"title":{"classes/ConflictError.html":{}},"body":{"classes/AppError.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"injectables/ErrorHandlerService.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{},"coverage.html":{}}}],["conflicterror('email",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["conflicterror('resource",{"_index":935,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["connection",{"_index":1040,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ProcessHandlers.html":{}}}],["connnectiontimeoutmills",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error",{"_index":1042,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["console.error('error",{"_index":719,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('no",{"_index":796,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('creating",{"_index":799,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('reset",{"_index":794,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('session",{"_index":730,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('template",{"_index":832,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["const",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"modules/MyMailerModule.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":1023,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["construct",{"_index":813,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructor",{"_index":111,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{}}}],["constructor(data",{"_index":1335,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["constructor(jwtservice",{"_index":1154,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["constructor(mailerservice",{"_index":1202,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(message",{"_index":112,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["constructor(otprepository",{"_index":1276,"title":{},"body":{"injectables/OtpRepository.html":{},"injectables/OtpService.html":{}}}],["constructor(partial",{"_index":1269,"title":{},"body":{"entities/Otp.html":{},"entities/User.html":{}}}],["constructor(private",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(resource",{"_index":143,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["constructor(tokens",{"_index":336,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["constructor(user",{"_index":1617,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["constructor(userrepository",{"_index":1603,"title":{},"body":{"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructors",{"_index":551,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contain",{"_index":854,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["container",{"_index":672,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["containing",{"_index":1747,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["contains",{"_index":1724,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["content",{"_index":582,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["contentdisposition",{"_index":814,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contentdisposition.match(/filename",{"_index":819,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contents",{"_index":1727,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["context",{"_index":920,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/HbsRenderService.html":{},"injectables/MailService.html":{}}}],["controller",{"_index":89,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":1657,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":1900,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":545,"title":{"coverage.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"index.html":{}}}],["create",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["create(signupdto",{"_index":1674,"title":{},"body":{"injectables/UsersService.html":{}}}],["created",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["created_at",{"_index":65,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["createdat",{"_index":443,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/OtpRepository.html":{},"classes/UserResponseDto.html":{}}}],["createdatabaseconfig",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createdatecolumn",{"_index":462,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createpayload",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["createpayload(user",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["createquerybuilder",{"_index":1301,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["createsession",{"_index":724,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["createuser",{"_index":1601,"title":{},"body":{"injectables/UserRepository.html":{}}}],["createuser(userdata",{"_index":1605,"title":{},"body":{"injectables/UserRepository.html":{}}}],["createuserdto",{"_index":839,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["createusertable.ts",{"_index":897,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{},"coverage.html":{}}}],["createusertable.ts:4",{"_index":898,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{}}}],["createusertable.ts:6",{"_index":900,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{}}}],["createusertable.ts:72",{"_index":899,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{}}}],["createusertable1758745851583",{"_index":895,"title":{"classes/CreateUserTable1758745851583.html":{}},"body":{"classes/CreateUserTable1758745851583.html":{},"coverage.html":{}}}],["creation",{"_index":445,"title":{},"body":{"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/UserResponseDto.html":{}}}],["credentials",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["css",{"_index":1494,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["ctx",{"_index":983,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":986,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":985,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["current",{"_index":1345,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["cursor",{"_index":651,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["custom",{"_index":987,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["custom.errors",{"_index":924,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["customcss",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customfavicon",{"_index":475,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["customization",{"_index":1748,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customization.html",{"_index":1766,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customize",{"_index":1750,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customized",{"_index":1725,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customizing",{"_index":1730,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customsitetitle",{"_index":2018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":1192,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["dark",{"_index":536,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["data",{"_index":1033,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["database",{"_index":166,"title":{},"body":{"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["database_error",{"_index":129,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["databaseerror",{"_index":127,"title":{"classes/DatabaseError.html":{}},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"injectables/ErrorHandlerService.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{},"coverage.html":{}}}],["databaseerror('database",{"_index":942,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["databaseerror('referenced",{"_index":937,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["databaseexception",{"_index":165,"title":{"classes/DatabaseException.html":{}},"body":{"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{},"coverage.html":{}}}],["datasource",{"_index":1383,"title":{},"body":{"classes/ProcessHandlers.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource(datasourceoptions",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.destroy",{"_index":1400,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["datasource.isinitialized",{"_index":1399,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["datasourceoptions",{"_index":1787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserDto.html":{},"entities/Otp.html":{},"injectables/OtpService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["date().toisostring",{"_index":1018,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["date:'short",{"_index":529,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ddd",{"_index":1124,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["debounce",{"_index":706,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["debounced",{"_index":748,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["declarations",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorsModule.html":{},"modules/MyMailerModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declare",{"_index":1062,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["decoration",{"_index":681,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["decorators",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthResponseDto.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"entities/Otp.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"classes/VerifyEmailDto.html":{}}}],["dee2e6",{"_index":597,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["deeper",{"_index":1896,"title":{},"body":{"index.html":{}}}],["default",{"_index":21,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"entities/Otp.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1235,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"injectables/TemplateEditorService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{}}}],["definitions",{"_index":1488,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["delete",{"_index":1302,"title":{},"body":{"injectables/OtpRepository.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":1649,"title":{},"body":{"controllers/UsersController.html":{}}}],["delimiter",{"_index":1516,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["delivery",{"_index":950,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["demonstration",{"_index":1137,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dependencies",{"_index":172,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/CompoDocConfig.html":{},"modules/ErrorsModule.html":{},"modules/MyMailerModule.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1854,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1869,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1862,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1879,"title":{},"body":{"index.html":{}}}],["depth",{"_index":1087,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["desc",{"_index":1298,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["description",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResponseDto.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"injectables/HbsRenderService.html":{},"entities/Otp.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{},"classes/VerifyEmailDto.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destroy",{"_index":1431,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["detail",{"_index":158,"title":{},"body":{"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{}}}],["details",{"_index":107,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["development",{"_index":1841,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["devtools",{"_index":1906,"title":{},"body":{"index.html":{}}}],["digit",{"_index":1255,"title":{},"body":{"entities/Otp.html":{},"classes/VerifyEmailDto.html":{}}}],["digits",{"_index":1315,"title":{},"body":{"injectables/OtpService.html":{},"classes/VerifyEmailDto.html":{}}}],["dir",{"_index":1237,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["direction",{"_index":566,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["directory",{"_index":1736,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["disable",{"_index":539,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"entities/User.html":{}}}],["disableconstructors",{"_index":476,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablecoverage",{"_index":477,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledependencies",{"_index":478,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledomtree",{"_index":479,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablefilepath",{"_index":480,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablegraph",{"_index":481,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableinternal",{"_index":482,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablelifecyclehooks",{"_index":483,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablemaingraph",{"_index":484,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableoverview",{"_index":485,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprivate",{"_index":486,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableproperties",{"_index":487,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprotected",{"_index":488,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableroutesgraph",{"_index":489,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesearch",{"_index":490,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesourcecode",{"_index":491,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablestyletab",{"_index":492,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabletemplatetab",{"_index":493,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["discord",{"_index":1893,"title":{},"body":{"index.html":{}}}],["display",{"_index":564,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["display:none",{"_index":2017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disposition",{"_index":816,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["dive",{"_index":1895,"title":{},"body":{"index.html":{}}}],["docexpansion",{"_index":2013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doctype",{"_index":1509,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["document",{"_index":1115,"title":{},"body":{"injectables/HbsRenderService.html":{},"miscellaneous/variables.html":{}}}],["document.body.appendchild(a",{"_index":828,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.removechild(a",{"_index":830,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.createelement('a",{"_index":825,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["documentation",{"_index":773,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["documentation/.../hbs",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../template",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/.../zip",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation/template",{"_index":472,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentationmainname",{"_index":1132,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["documentbuilder",{"_index":1991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doe",{"_index":1428,"title":{},"body":{"classes/SignupDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["doe'})@column({name",{"_index":1574,"title":{},"body":{"entities/User.html":{}}}],["doe'})@isstring()@minlength(2",{"_index":1420,"title":{},"body":{"classes/SignupDto.html":{}}}],["dom",{"_index":552,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["down",{"_index":16,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["down(queryrunner",{"_index":25,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["download",{"_index":530,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["downloadblob",{"_index":1701,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadblob(blob",{"_index":1704,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloaded",{"_index":833,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["downloading",{"_index":834,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["dto/auth",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/login.dto",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/resend",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/signup.dts",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":1656,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/verify",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["during",{"_index":1407,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["e2e",{"_index":1849,"title":{},"body":{"index.html":{}}}],["e89b",{"_index":453,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UserResponseDto.html":{}}}],["e9ecef",{"_index":612,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["each",{"_index":1082,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ease",{"_index":615,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["eauth",{"_index":947,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["ecommerce",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["econnection",{"_index":1039,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["editor",{"_index":666,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["editor.service",{"_index":509,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["editor.service.ts",{"_index":1429,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:10",{"_index":1451,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:12",{"_index":1442,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:167",{"_index":1436,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:59",{"_index":1445,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:67",{"_index":1447,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:71",{"_index":1438,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:87",{"_index":1443,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:9",{"_index":1450,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editorcontainer",{"_index":696,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["editorservice",{"_index":711,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["eenvelope",{"_index":1037,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["efficient",{"_index":1832,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1860,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["ejsadapter",{"_index":1220,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["elementref",{"_index":502,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["email",{"_index":58,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AppHttpException.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"interfaces/Tokens.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{}}}],["email')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["email'})@index",{"_index":1248,"title":{},"body":{"entities/Otp.html":{}}}],["email'})@index()@isemail",{"_index":1561,"title":{},"body":{"entities/User.html":{}}}],["email.dto",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["email.dto.ts",{"_index":1692,"title":{},"body":{"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["email.dto.ts:12",{"_index":1697,"title":{},"body":{"classes/VerifyEmailDto.html":{}}}],["email.dto.ts:7",{"_index":1693,"title":{},"body":{"classes/VerifyEmailDto.html":{}}}],["email_auth_error",{"_index":1036,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["email_connection_error",{"_index":1041,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["email_error",{"_index":150,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["email_validation_error",{"_index":1038,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["email_verified_al",{"_index":1564,"title":{},"body":{"entities/User.html":{}}}],["email_verified_at",{"_index":45,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{}}}],["emailerror",{"_index":149,"title":{"classes/EmailError.html":{}},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"injectables/ErrorHandlerService.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{},"coverage.html":{}}}],["emailerror('email",{"_index":948,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["emailexception",{"_index":163,"title":{"classes/EmailException.html":{}},"body":{"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{},"coverage.html":{}}}],["emailverifiedat",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["enabled",{"_index":1461,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["enableimplicitconversion",{"_index":2024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoint",{"_index":804,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ensure",{"_index":1858,"title":{},"body":{"index.html":{}}}],["enter",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enterprise",{"_index":1909,"title":{},"body":{"index.html":{}}}],["entities",{"_index":1242,"title":{},"body":{"entities/Otp.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/otp.entity",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{},"injectables/OtpRepository.html":{}}}],["entities/user.entity",{"_index":886,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":1241,"title":{"entities/Otp.html":{},"entities/User.html":{}},"body":{"entities/Otp.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity('otps",{"_index":1267,"title":{},"body":{"entities/Otp.html":{}}}],["entity('users",{"_index":1592,"title":{},"body":{"entities/User.html":{}}}],["entity{.ts,.js",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":891,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["enumerations",{"_index":1824,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["env.${process.env.node_env",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":106,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"modules/ErrorsModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{}}}],["error('failed",{"_index":731,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["error.capturestacktrace(this",{"_index":124,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["error.code",{"_index":946,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["error.command",{"_index":957,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["error.constraint",{"_index":1024,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["error.message",{"_index":955,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/HbsRenderService.html":{},"classes/ProcessHandlers.html":{}}}],["error.name",{"_index":951,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.service",{"_index":949,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["error.stack",{"_index":1387,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["errorcode",{"_index":108,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["errorhandler",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["errorhandlerservice",{"_index":368,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"modules/ErrorsModule.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":926,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["errors/custom.errors",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["errors/error",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["errors/errors.module",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["errorsmodule",{"_index":182,"title":{"modules/ErrorsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorsModule.html":{},"modules.html":{},"overview.html":{}}}],["eslint",{"_index":1175,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{},"entities/User.html":{}}}],["eslint/no",{"_index":1179,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{},"entities/User.html":{}}}],["etc",{"_index":1755,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["events",{"_index":1146,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["exactly",{"_index":1696,"title":{},"body":{"classes/VerifyEmailDto.html":{}}}],["example",{"_index":446,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"injectables/HbsRenderService.html":{},"classes/LoginDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{},"classes/VerifyEmailDto.html":{},"index.html":{}}}],["exception",{"_index":971,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/ProcessHandlers.html":{}}}],["exception.details",{"_index":991,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.errorcode",{"_index":990,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":156,"title":{},"body":{"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":912,"title":{},"body":{"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{}}}],["exception.filter.ts:140",{"_index":976,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.filter.ts:176",{"_index":977,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.filter.ts:180",{"_index":980,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.filter.ts:20",{"_index":910,"title":{},"body":{"classes/DatabaseException.html":{}}}],["exception.filter.ts:26",{"_index":299,"title":{},"body":{"classes/AuthException.html":{}}}],["exception.filter.ts:3",{"_index":160,"title":{},"body":{"classes/AppHttpException.html":{}}}],["exception.filter.ts:7",{"_index":162,"title":{},"body":{"classes/AppHttpException.html":{}}}],["exception.filter.ts:8",{"_index":161,"title":{},"body":{"classes/AppHttpException.html":{}}}],["exception.filter.ts:98",{"_index":973,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.message",{"_index":989,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.name",{"_index":1045,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.stack",{"_index":1047,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.statuscode",{"_index":988,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exceptionfilter",{"_index":964,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exceptions",{"_index":1002,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["excludepassword",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["excludepassword(user",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["existing",{"_index":760,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["existinguser",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["experience",{"_index":1898,"title":{},"body":{"index.html":{}}}],["expiration",{"_index":343,"title":{},"body":{"classes/AuthResponseDto.html":{},"entities/Otp.html":{}}}],["expired",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["expires_at",{"_index":63,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"entities/Otp.html":{}}}],["expiresat",{"_index":1244,"title":{},"body":{"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{}}}],["expiresat.setminutes(expiresat.getminutes",{"_index":1320,"title":{},"body":{"injectables/OtpService.html":{}}}],["expiresin",{"_index":328,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["expiresin.slice",{"_index":1185,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["expiryminutes",{"_index":1211,"title":{},"body":{"injectables/MailService.html":{},"injectables/OtpService.html":{}}}],["export",{"_index":38,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"modules/ErrorsModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{}}}],["export.service",{"_index":512,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["export.service.ts",{"_index":1700,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export.service.ts:10",{"_index":1707,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:29",{"_index":1709,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:75",{"_index":1705,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exports",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorsModule.html":{},"modules/MyMailerModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["exporttemplates",{"_index":1702,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttemplates(files",{"_index":1706,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exportzip",{"_index":795,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["express",{"_index":981,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":105,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/ValidationError.html":{}}}],["extra",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extract",{"_index":1735,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["f0f8ff",{"_index":1126,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["f8f9fa",{"_index":592,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["failed",{"_index":135,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["fallback",{"_index":325,"title":{},"body":{"modules/AuthModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["false",{"_index":44,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"modules/MyMailerModule.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["false})@column({default",{"_index":1253,"title":{},"body":{"entities/Otp.html":{}}}],["false})@isoptional()@isenum(userrole",{"_index":1426,"title":{},"body":{"classes/SignupDto.html":{}}}],["false})@isoptional()@isstring",{"_index":1424,"title":{},"body":{"classes/SignupDto.html":{}}}],["family",{"_index":571,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fast",{"_index":1873,"title":{},"body":{"index.html":{}}}],["features",{"_index":1883,"title":{},"body":{"index.html":{}}}],["few",{"_index":1875,"title":{},"body":{"index.html":{}}}],["ffc107",{"_index":605,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fff5f5",{"_index":1130,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["field",{"_index":940,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"modules/ErrorsModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["file.content",{"_index":1714,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filename",{"_index":811,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["filenamematch",{"_index":818,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["filenamematch[1",{"_index":820,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["files",{"_index":1708,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["files.foreach(file",{"_index":1712,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filetype",{"_index":1439,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["filter",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":1642,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyemail",{"_index":1602,"title":{},"body":{"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":1607,"title":{},"body":{"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":1274,"title":{},"body":{"injectables/OtpRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":1659,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(email",{"_index":1280,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["findone(id",{"_index":1645,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":737,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["first_name",{"_index":902,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{},"entities/User.html":{}}}],["firstname",{"_index":842,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["fit",{"_index":625,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fk_otp_user_id",{"_index":82,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{}}}],["flag",{"_index":1738,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["flex",{"_index":565,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["focus",{"_index":1882,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1913,"title":{},"body":{"index.html":{}}}],["font",{"_index":570,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fonts",{"_index":1753,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["fontsize",{"_index":1463,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["forbidnonwhitelisted",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foreign",{"_index":1025,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["foreign_key_violation",{"_index":1028,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["format",{"_index":1034,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["formsmodule",{"_index":1539,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["found",{"_index":146,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["frame",{"_index":675,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["framework",{"_index":1830,"title":{},"body":{"index.html":{}}}],["full",{"_index":1595,"title":{},"body":{"entities/User.html":{},"classes/UserResponseDto.html":{},"index.html":{}}}],["fullname",{"_index":1596,"title":{},"body":{"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["function",{"_index":1449,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{}}}],["functionality",{"_index":793,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["functions",{"_index":1826,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1877,"title":{},"body":{"index.html":{}}}],["gap",{"_index":598,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["generate",{"_index":1719,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generated",{"_index":1767,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generateotp",{"_index":1305,"title":{},"body":{"injectables/OtpService.html":{}}}],["generateotp(userid",{"_index":1309,"title":{},"body":{"injectables/OtpService.html":{}}}],["generatereadme",{"_index":1703,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generatetokens",{"_index":1151,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["generatetokens(payload",{"_index":1158,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["generating",{"_index":1728,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generation",{"_index":1726,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generationstrategy",{"_index":55,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["generator",{"_index":535,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/OtpService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"dependencies.html":{}}}],["get(':id",{"_index":1646,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlanguagefromfiletype",{"_index":1432,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlanguagefromfiletype(filetype",{"_index":1437,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getmockdata",{"_index":1051,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["getskip",{"_index":1373,"title":{},"body":{"classes/PaginationDto.html":{}}}],["getstatus",{"_index":1003,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["globalexceptionfilter",{"_index":962,"title":{"classes/GlobalExceptionFilter.html":{}},"body":{"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["graceful",{"_index":1397,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["gracefulshutdown",{"_index":1393,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["gracefulshutdown('sigint",{"_index":1410,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["gracefulshutdown('sigterm",{"_index":1412,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["graph",{"_index":542,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["grid",{"_index":623,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["grow",{"_index":1922,"title":{},"body":{"index.html":{}}}],["h",{"_index":1191,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["h3",{"_index":639,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["h4",{"_index":668,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["handle",{"_index":929,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{}}}],["handlebars",{"_index":756,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlebars.create",{"_index":1067,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars_unescaped",{"_index":1506,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["handlebarsinstance",{"_index":1050,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handledatabaseerror",{"_index":965,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["handledatabaseerror(error",{"_index":972,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["handlenodemailererror",{"_index":966,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["handlenodemailererror(error",{"_index":975,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["handler.service",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"modules/ErrorsModule.html":{}}}],["handler.service.ts",{"_index":914,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":921,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:71",{"_index":918,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handlers.ts",{"_index":1377,"title":{},"body":{"classes/ProcessHandlers.html":{},"coverage.html":{}}}],["handlers.ts:5",{"_index":1381,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["handlers.ts:7",{"_index":1384,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["hands",{"_index":1897,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1888,"title":{},"body":{"index.html":{}}}],["hashed",{"_index":1579,"title":{},"body":{"entities/User.html":{}}}],["hashedpassword",{"_index":1685,"title":{},"body":{"injectables/UsersService.html":{}}}],["hasnext",{"_index":1330,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["hasprevious",{"_index":1331,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["hbs",{"_index":514,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["hbsrenderservice",{"_index":513,"title":{"injectables/HbsRenderService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["hbsservice",{"_index":713,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["header",{"_index":580,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["headers",{"_index":812,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["height",{"_index":568,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hello",{"_index":212,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":1901,"title":{},"body":{"index.html":{}}}],["helper",{"_index":1073,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["helpers",{"_index":1070,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["here",{"_index":1929,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":619,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hide",{"_index":534,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidedarkmodetoggle",{"_index":494,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidegenerator",{"_index":495,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hook",{"_index":1142,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["hooks",{"_index":550,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["horizontal",{"_index":1469,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["host",{"_index":969,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"modules/MyMailerModule.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":984,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["href",{"_index":1149,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["html",{"_index":1114,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["htmlelement",{"_index":1441,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["http",{"_index":710,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["http_error",{"_index":1006,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["httpclient",{"_index":505,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["httpclientmodule",{"_index":1541,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["httpcode",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.created",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":157,"title":{},"body":{"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{}}}],["httpexception.getresponse",{"_index":1007,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["httpexception.getstatus",{"_index":1004,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["httpexception.message",{"_index":1005,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["https://compodoc.app/guides/template",{"_index":1765,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["https://nestjs.com",{"_index":1935,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":120,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":131,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":152,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.forbidden",{"_index":140,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.internal_server_error",{"_index":128,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.not_found",{"_index":147,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.ok",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpstatus.unauthorized",{"_index":136,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["icon",{"_index":660,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["id",{"_index":52,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/BaseEntity.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/HbsRenderService.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"injectables/TemplateEditorService.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@column({name",{"_index":1261,"title":{},"body":{"entities/Otp.html":{}}}],["identifier",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["idletimeoutmillis",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["idx_otp_email",{"_index":70,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{}}}],["idx_otp_user_id",{"_index":68,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{}}}],["implement",{"_index":792,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implementation",{"_index":783,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"modules/ErrorsModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{}}}],["imports",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MyMailerModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{}}}],["includes",{"_index":496,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["includesname",{"_index":497,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":604,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["indices",{"_index":67,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{}}}],["inestapplication",{"_index":1990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"modules/ErrorsModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":349,"title":{},"body":{"classes/AuthResponseDto.html":{},"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["infrastructure",{"_index":1885,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":300,"title":{},"body":{"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["initialize",{"_index":1453,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializeeditor",{"_index":745,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["initializeeditor(container",{"_index":1440,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializehandlebars",{"_index":1052,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["initializing",{"_index":720,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["inject",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{},"modules/MyMailerModule.html":{}}}],["injectable",{"_index":208,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"injectables/MailService.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"injectables/TemplateEditorService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"injectables/ZipExportService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["injectables",{"_index":209,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"injectables/MailService.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"injectables/TemplateEditorService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["injectrepository",{"_index":1287,"title":{},"body":{"injectables/OtpRepository.html":{},"injectables/UserRepository.html":{}}}],["injectrepository(otp",{"_index":1288,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["injectrepository(user",{"_index":1611,"title":{},"body":{"injectables/UserRepository.html":{}}}],["inputs",{"_index":1093,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["install",{"_index":1876,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1839,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1065,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["instanceof",{"_index":927,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["instructions",{"_index":1716,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["interact",{"_index":1903,"title":{},"body":{"index.html":{}}}],["interface",{"_index":469,"title":{"interfaces/CompoDocConfig.html":{},"interfaces/JwtPayload.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"coverage.html":{}}}],["interfaces",{"_index":471,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/JwtPayload.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"overview.html":{}}}],["internal",{"_index":548,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["internal_error",{"_index":956,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["invalid",{"_index":999,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["invalid_input",{"_index":1035,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["invalid_token",{"_index":1000,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["is_active",{"_index":905,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{},"entities/User.html":{}}}],["is_active'})@isboolean()@isoptional",{"_index":1569,"title":{},"body":{"entities/User.html":{}}}],["is_email_verified",{"_index":42,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"entities/User.html":{}}}],["is_email_verified'})@isboolean()@isoptional",{"_index":1572,"title":{},"body":{"entities/User.html":{}}}],["is_used",{"_index":64,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"entities/Otp.html":{}}}],["isactive",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["isboolean",{"_index":884,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["iscorrectpassword",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["isemail",{"_index":878,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"entities/User.html":{},"classes/VerifyEmailDto.html":{}}}],["isemailverified",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["isenum",{"_index":882,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["isenum(userrole",{"_index":893,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["isglobal",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["isinitial",{"_index":1110,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isinitialtab",{"_index":1108,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isnodemailererror",{"_index":915,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["isnodemailererror(error",{"_index":917,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["isnullable",{"_index":47,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["isoptional",{"_index":881,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["isotpvalid",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["isphonenumber",{"_index":883,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["ispositive",{"_index":1353,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["isprimary",{"_index":54,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["isproduction",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstring",{"_index":877,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/VerifyEmailDto.html":{}}}],["isstring()@minlength(2)@isoptional()@matches(/^[a",{"_index":1551,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isstring()@minlength(2)@matches(/^[a",{"_index":860,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstrongpassword",{"_index":880,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["istabenabled",{"_index":1102,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isunique",{"_index":901,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{}}}],["isused",{"_index":1245,"title":{},"body":{"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{}}}],["isvisible",{"_index":1139,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["italic",{"_index":665,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item",{"_index":836,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item.name",{"_index":837,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["items",{"_index":586,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["javascript",{"_index":1497,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["job",{"_index":1916,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1918,"title":{},"body":{"index.html":{}}}],["john",{"_index":888,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["john'})@column({name",{"_index":1566,"title":{},"body":{"entities/User.html":{}}}],["john'})@isboolean()@isoptional",{"_index":849,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["john'})@isstring()@minlength(2",{"_index":1418,"title":{},"body":{"classes/SignupDto.html":{}}}],["john'})@isstring()@minlength(2)@isoptional()@matches(/^[a",{"_index":1547,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["john'})@isstring()@minlength(2)@matches(/^[a",{"_index":851,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":1219,"title":{},"body":{"modules/MyMailerModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":1225,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["joincolumn",{"_index":1265,"title":{},"body":{"entities/Otp.html":{}}}],["js",{"_index":1496,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["jsonwebtoken",{"_index":982,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["jsonwebtokenerror",{"_index":954,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["jszip",{"_index":1710,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":581,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["jwt",{"_index":340,"title":{},"body":{"classes/AuthResponseDto.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["jwt.service",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_refresh_expires_in",{"_index":1169,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["jwtauthservice",{"_index":308,"title":{"injectables/JwtAuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{},"coverage.html":{},"overview.html":{}}}],["jwtmodule",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":372,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{},"coverage.html":{}}}],["jwtservice",{"_index":1157,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["kamil",{"_index":1932,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1758,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["key",{"_index":326,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"index.html":{}}}],["keyword",{"_index":1505,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["label",{"_index":630,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lang.id",{"_index":1500,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["language",{"_index":1456,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["last",{"_index":458,"title":{},"body":{"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["last_name",{"_index":903,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{},"entities/User.html":{}}}],["lastname",{"_index":843,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["lastsaved",{"_index":528,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["layout",{"_index":1754,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["learn",{"_index":1890,"title":{},"body":{"index.html":{}}}],["left",{"_index":663,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["legend",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorsModule.html":{},"modules/MyMailerModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":61,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/VerifyEmailDto.html":{}}}],["length(6",{"_index":1698,"title":{},"body":{"classes/VerifyEmailDto.html":{}}}],["letter",{"_index":645,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["letters",{"_index":855,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["li",{"_index":650,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li.active",{"_index":657,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li:hover",{"_index":656,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["license",{"_index":1938,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1921,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":549,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["limit",{"_index":1332,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["line",{"_index":1177,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{},"entities/User.html":{}}}],["linenumbers",{"_index":1466,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["link",{"_index":821,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["linkedin",{"_index":1915,"title":{},"body":{"index.html":{}}}],["list",{"_index":638,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["listener",{"_index":1484,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["literal",{"_index":974,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["live",{"_index":561,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loading",{"_index":558,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessionconfig",{"_index":741,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessiontemplates",{"_index":732,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["localhost",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":1015,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["logerror",{"_index":967,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["logerror(request",{"_index":978,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["logger",{"_index":1378,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["logger(processhandlers.name",{"_index":1380,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["logging",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":223,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["looking",{"_index":1863,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1911,"title":{},"body":{"index.html":{}}}],["lowercasealphabets",{"_index":1316,"title":{},"body":{"injectables/OtpService.html":{}}}],["m",{"_index":1189,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["mail",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["mail.service",{"_index":1222,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["mailer",{"_index":1226,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["mailer/mail.service",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["mailermodule",{"_index":1218,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["mailermodule.forrootasync",{"_index":1223,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["mailerservice",{"_index":1203,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":366,"title":{"injectables/MailService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":543,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["makes",{"_index":1871,"title":{},"body":{"index.html":{}}}],["making",{"_index":1761,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["managing",{"_index":1884,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":1266,"title":{},"body":{"entities/Otp.html":{}}}],["manytoone(undefined",{"_index":1258,"title":{},"body":{"entities/Otp.html":{}}}],["mapping",{"_index":1090,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["margin",{"_index":628,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["matches",{"_index":879,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["matches(/^[a",{"_index":890,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["matching",{"_index":74,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"modules/ErrorsModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(total",{"_index":1365,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["mau",{"_index":1867,"title":{},"body":{"index.html":{}}}],["max",{"_index":616,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["message",{"_index":109,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"classes/NotFoundError.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/UpdateUserDto.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{}}}],["metadata",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["metatag",{"_index":1511,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["metatag.content",{"_index":1510,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["method",{"_index":1043,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"injectables/MailService.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"injectables/TemplateEditorService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ZipExportService.html":{}}}],["migrationinterface",{"_index":9,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["migrations",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations/*{.ts,.js",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":344,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["min",{"_index":1354,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["min(1",{"_index":1356,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["minimal",{"_index":498,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minimap",{"_index":1460,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["minlength",{"_index":863,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(2",{"_index":889,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlowercase",{"_index":865,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["minmax(200px",{"_index":626,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minnumbers",{"_index":867,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["minsymbols",{"_index":868,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["minuppercase",{"_index":866,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["miscellaneous",{"_index":1823,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":941,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["mit",{"_index":1920,"title":{},"body":{"index.html":{}}}],["mock",{"_index":1128,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["mode",{"_index":537,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["model",{"_index":1491,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["modify",{"_index":1751,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["module",{"_index":169,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorsModule.html":{},"modules/MyMailerModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorsModule.html":{},"injectables/HbsRenderService.html":{},"modules/MyMailerModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":171,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorsModule.html":{},"injectables/HbsRenderService.html":{},"modules/MyMailerModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1207,"title":{},"body":{"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/ejs.adapter",{"_index":1221,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["monaco",{"_index":1452,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(container",{"_index":1455,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.editor.createmodel(content",{"_index":1492,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.getlanguages().find((lang",{"_index":1499,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.register",{"_index":1502,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setlanguageconfiguration('handlebars",{"_index":1519,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setmonarchtokensprovider('handlebars",{"_index":1503,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monospace",{"_index":603,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["more",{"_index":1763,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["mouseevent",{"_index":1148,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["mymailermodule",{"_index":307,"title":{"modules/MyMailerModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/MyMailerModule.html":{},"modules.html":{},"overview.html":{}}}],["myśliwiec",{"_index":1933,"title":{},"body":{"index.html":{}}}],["name",{"_index":12,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["naming",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["namingstrategy",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navtabs",{"_index":1104,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.find((t",{"_index":1106,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.length",{"_index":1111,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs[0].id",{"_index":1112,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["need",{"_index":1907,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1835,"title":{},"body":{"index.html":{}}}],["nestconfig",{"_index":1788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nestconfig.database",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestconfig.host",{"_index":1981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestconfig.logging",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestconfig.password",{"_index":1984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestconfig.port",{"_index":1982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestconfig.ssl",{"_index":1989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestconfig.username",{"_index":1983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":1937,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1001,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/class",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"modules/ErrorsModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"classes/NotFoundError.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"interfaces/Tokens.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"injectables/OtpService.html":{},"interfaces/Tokens.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1556,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":1878,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResponseDto.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"entities/Otp.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{},"classes/VerifyEmailDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/OtpRepository.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjwtservice",{"_index":1155,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["never",{"_index":922,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":41,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AuthController.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"modules/MyMailerModule.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1176,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{},"entities/User.html":{}}}],["ngmodule",{"_index":1533,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["ngondestroy",{"_index":721,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ngoninit",{"_index":714,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["node.js",{"_index":1829,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":944,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"dependencies.html":{}}}],["none",{"_index":648,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["not'})@isboolean()@isoptional",{"_index":858,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["not_found_error",{"_index":148,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["not_null_violation",{"_index":1030,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["notfounderror",{"_index":142,"title":{"classes/NotFoundError.html":{}},"body":{"classes/AppError.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{},"coverage.html":{}}}],["notfounderror('user",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["notice",{"_index":1125,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["now",{"_index":66,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"injectables/AuthService.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["npm",{"_index":1838,"title":{},"body":{"index.html":{}}}],["null",{"_index":700,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["nullable",{"_index":1594,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":113,"title":{},"body":{"classes/AppError.html":{},"classes/AuthResponseDto.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/NotFoundError.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{}}}],["number(starting",{"_index":1355,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["object",{"_index":1009,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":1271,"title":{},"body":{"entities/Otp.html":{},"entities/User.html":{}}}],["observe",{"_index":808,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["offer",{"_index":1917,"title":{},"body":{"index.html":{}}}],["official",{"_index":1868,"title":{},"body":{"index.html":{}}}],["onchangecallback",{"_index":1430,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["onclick",{"_index":1144,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["onclick(event",{"_index":1147,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ondelete",{"_index":86,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{}}}],["ondestroy",{"_index":503,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["onetomany",{"_index":1591,"title":{},"body":{"entities/User.html":{}}}],["onetomany(undefined",{"_index":1576,"title":{},"body":{"entities/User.html":{}}}],["oninit",{"_index":500,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["opacity",{"_index":661,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["open",{"_index":1523,"title":{},"body":{"injectables/TemplateEditorService.html":{},"index.html":{}}}],["operation",{"_index":943,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["operationssorter",{"_index":2012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operator",{"_index":1075,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/SignupDto.html":{},"injectables/TemplateEditorService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"injectables/ZipExportService.html":{}}}],["options",{"_index":622,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"modules/MyMailerModule.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["options.fn(this",{"_index":1077,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["options.inverse(this",{"_index":1078,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["order",{"_index":1297,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["original",{"_index":1759,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["orlength",{"_index":1096,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["otp",{"_index":60,"title":{"entities/Otp.html":{}},"body":{"classes/AddEmailVerification1758794208948.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"entities/User.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["otp')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["otp'})@apiresponse({status",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["otp'})@isstring()@length(6",{"_index":1695,"title":{},"body":{"classes/VerifyEmailDto.html":{}}}],["otp.dto",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["otp.dto.ts",{"_index":1414,"title":{},"body":{"classes/ResendOtpDto.html":{},"coverage.html":{}}}],["otp.dto.ts:7",{"_index":1415,"title":{},"body":{"classes/ResendOtpDto.html":{}}}],["otp.repository",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"injectables/OtpService.html":{}}}],["otp.service",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["otp.user",{"_index":1577,"title":{},"body":{"entities/User.html":{}}}],["otp_expiry_minute",{"_index":1319,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpdata",{"_index":1289,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["otpgenerator",{"_index":1313,"title":{},"body":{"injectables/OtpService.html":{}}}],["otpgenerator.generate(6",{"_index":1314,"title":{},"body":{"injectables/OtpService.html":{}}}],["otprecord",{"_index":1322,"title":{},"body":{"injectables/OtpService.html":{}}}],["otprecord.expiresat",{"_index":1324,"title":{},"body":{"injectables/OtpService.html":{}}}],["otprecord.id",{"_index":1326,"title":{},"body":{"injectables/OtpService.html":{}}}],["otprepository",{"_index":309,"title":{"injectables/OtpRepository.html":{}},"body":{"modules/AuthModule.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"coverage.html":{},"overview.html":{}}}],["otps",{"_index":50,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"entities/User.html":{}}}],["otpservice",{"_index":310,"title":{"injectables/OtpService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/OtpService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorsModule.html":{},"modules/MyMailerModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["outputs",{"_index":1094,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["overflow",{"_index":618,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["overview",{"_index":540,"title":{"overview.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"overview.html":{}}}],["overviewrulerlanes",{"_index":1471,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["p",{"_index":1742,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["package",{"_index":800,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["padding",{"_index":588,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["page",{"_index":797,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["page.hbs",{"_index":1745,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["pages",{"_index":1349,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/ZipExportService.html":{}}}],["paginatedresponsedto",{"_index":1328,"title":{"classes/PaginatedResponseDto.html":{}},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["paginationdto",{"_index":1337,"title":{"classes/PaginationDto.html":{}},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["paginationdto.limit",{"_index":1362,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["paginationdto.page",{"_index":1361,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["panel",{"_index":611,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["panel.collapsed",{"_index":620,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["param",{"_index":1654,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameterhints",{"_index":1476,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/ProcessHandlers.html":{},"injectables/TemplateEditorService.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"injectables/ZipExportService.html":{}}}],["parseexpiresin",{"_index":1152,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["parseexpiresin(expiresin",{"_index":1161,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["parseint(expiresin.slice(0",{"_index":1186,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["parseint(process.env.db_port",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(process.env.salt",{"_index":1683,"title":{},"body":{"injectables/UsersService.html":{}}}],["part",{"_index":1908,"title":{},"body":{"index.html":{}}}],["partial",{"_index":517,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"injectables/ZipExportService.html":{}}}],["partials",{"_index":1746,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["partialtype",{"_index":1555,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":1545,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":1233,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["password",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["password123",{"_index":862,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["password123!'})@isstrongpassword({minlength",{"_index":1422,"title":{},"body":{"classes/SignupDto.html":{}}}],["password123'})@isstring",{"_index":1198,"title":{},"body":{"classes/LoginDto.html":{}}}],["patch",{"_index":1653,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":1651,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":516,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/GlobalExceptionFilter.html":{},"modules/MyMailerModule.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["path/to/custom/templates",{"_index":1744,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["payload",{"_index":1160,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["per",{"_index":1343,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["persistauthorization",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["pgerror",{"_index":930,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["pgerror.code",{"_index":932,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["phone",{"_index":870,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["phone_number",{"_index":906,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{},"entities/User.html":{}}}],["phone_number'})@isphonenumber()@isoptional",{"_index":1585,"title":{},"body":{"entities/User.html":{}}}],["phonenumber",{"_index":844,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["platform",{"_index":1866,"title":{},"body":{"index.html":{}}}],["playground",{"_index":522,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["playground.component",{"_index":1542,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground.component.ts",{"_index":474,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["playground.module.ts",{"_index":1532,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground/hbs",{"_index":1048,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/template",{"_index":473,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/zip",{"_index":1699,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["pointer",{"_index":652,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["pop",{"_index":1508,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["port",{"_index":1229,"title":{},"body":{"modules/MyMailerModule.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":673,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["possible",{"_index":1861,"title":{},"body":{"index.html":{}}}],["post",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('resend",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup')@httpcode(httpstatus.created)@apioperation({summary",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('verify",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":562,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewframe",{"_index":698,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewurl",{"_index":707,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previous",{"_index":1342,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["primary",{"_index":451,"title":{},"body":{"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary:hover",{"_index":682,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primarygeneratedcolumn",{"_index":463,"title":{},"body":{"classes/BaseEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":467,"title":{},"body":{"classes/BaseEntity.html":{}}}],["private",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{},"injectables/UserRepository.html":{},"injectables/ZipExportService.html":{}}}],["process.env.db_database",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_logging",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_synchronize",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.exit(0",{"_index":1405,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["process.exit(1",{"_index":1408,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["process.on('sigint",{"_index":1409,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["process.on('sigterm",{"_index":1411,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["process.on('uncaughtexception",{"_index":1385,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["process.on('unhandledrejection",{"_index":1388,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["processhandlers",{"_index":1375,"title":{"classes/ProcessHandlers.html":{}},"body":{"classes/ProcessHandlers.html":{},"coverage.html":{}}}],["production",{"_index":1845,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":1828,"title":{},"body":{"index.html":{}}}],["project",{"_index":1837,"title":{},"body":{"index.html":{}}}],["promise",{"_index":31,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthResponseDto.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/HbsRenderService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"properties.html":{}}}],["protected",{"_index":547,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["providedin",{"_index":1063,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["providers",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorsModule.html":{},"modules/MyMailerModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":14,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["queryfailederror",{"_index":923,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["queryrunner",{"_index":26,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["queryrunner.addcolumns('users",{"_index":40,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{}}}],["queryrunner.createforeignkey",{"_index":81,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{}}}],["queryrunner.createtable",{"_index":49,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["queryrunner.dropcolumn('users",{"_index":72,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{}}}],["queryrunner.dropforeignkey('otps",{"_index":88,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{}}}],["queryrunner.droptable('otps",{"_index":71,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{}}}],["queryrunner.droptable('users",{"_index":908,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{}}}],["questions",{"_index":1891,"title":{},"body":{"index.html":{}}}],["quicksuggestions",{"_index":1473,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["radius",{"_index":653,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["re",{"_index":928,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["read",{"_index":1928,"title":{},"body":{"index.html":{}}}],["readme",{"_index":1715,"title":{"index.html":{}},"body":{"injectables/ZipExportService.html":{}}}],["readonly",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":1853,"title":{},"body":{"index.html":{}}}],["real",{"_index":1904,"title":{},"body":{"index.html":{}}}],["reason",{"_index":1389,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["red",{"_index":1129,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["referenced",{"_index":1027,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["referencedcolumnnames",{"_index":85,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{}}}],["referencedtablename",{"_index":83,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{}}}],["reflect",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":346,"title":{},"body":{"classes/AuthResponseDto.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["refreshpreview",{"_index":779,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["refreshtoken",{"_index":335,"title":{},"body":{"classes/AuthResponseDto.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["refreshtoken(refreshtoken",{"_index":1163,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["regenerated",{"_index":774,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["register",{"_index":1068,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["registered",{"_index":1501,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhandlebarslanguage",{"_index":1433,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhelpers",{"_index":1053,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["registration",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["rejection",{"_index":1392,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["rejectunauthorized",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relative",{"_index":674,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["relativeurl",{"_index":1085,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["remove",{"_index":1643,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":1663,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":1648,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":1688,"title":{},"body":{"injectables/UsersService.html":{}}}],["render.service",{"_index":515,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["render.service.ts",{"_index":1049,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render.service.ts:131",{"_index":1060,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:15",{"_index":1057,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:184",{"_index":1056,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:23",{"_index":1058,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:9",{"_index":1055,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendered",{"_index":1117,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate",{"_index":1054,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate(templatecontent",{"_index":1059,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["repeat(auto",{"_index":624,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["reply",{"_index":1236,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["repository",{"_index":1277,"title":{},"body":{"injectables/OtpRepository.html":{},"injectables/UserRepository.html":{},"index.html":{}}}],["representation",{"_index":1032,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["request",{"_index":979,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["request.method",{"_index":1044,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["request.url",{"_index":1019,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["required",{"_index":1029,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/SignupDto.html":{}}}],["requiring",{"_index":1874,"title":{},"body":{"index.html":{}}}],["resend",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["resendotp",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resendotp(@body",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{}}}],["resendotp(email",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["resendotp(resendotpdto",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["resendotpdto",{"_index":232,"title":{"classes/ResendOtpDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResendOtpDto.html":{},"coverage.html":{}}}],["reset",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/CompoDocConfig.html":{},"modules/ErrorsModule.html":{},"modules/MyMailerModule.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetting",{"_index":784,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resettodefault",{"_index":782,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resource",{"_index":144,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["resources",{"_index":1886,"title":{},"body":{"index.html":{}}}],["response",{"_index":725,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.body",{"_index":809,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.config",{"_index":744,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.dto",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResponseDto.html":{}}}],["response.dto.ts",{"_index":333,"title":{},"body":{"classes/AuthResponseDto.html":{},"classes/UserResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:11",{"_index":347,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["response.dto.ts:15",{"_index":1621,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:16",{"_index":345,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["response.dto.ts:18",{"_index":1622,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:19",{"_index":337,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["response.dto.ts:21",{"_index":1626,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:27",{"_index":1623,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:34",{"_index":1628,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:40",{"_index":1627,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:46",{"_index":1625,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:52",{"_index":1620,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:58",{"_index":1618,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.dto.ts:8",{"_index":342,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["response.dto.ts:9",{"_index":1624,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["response.headers.get('content",{"_index":815,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.message",{"_index":1012,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["response.message[0",{"_index":1011,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["response.sessionid",{"_index":729,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.status(status).json",{"_index":1017,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["response.success",{"_index":728,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.templates",{"_index":735,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsetype",{"_index":806,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["rest",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{}}}],["result.details",{"_index":996,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["result.errorcode",{"_index":995,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["result.message",{"_index":994,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["result.status",{"_index":993,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["result.user",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":73,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"modules/ErrorsModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":1084,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["return",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"modules/MyMailerModule.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":30,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"injectables/MailService.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"injectables/TemplateEditorService.html":{},"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ZipExportService.html":{}}}],["right",{"_index":635,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["roboto",{"_index":577,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["role",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/SignupDto.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["root",{"_index":523,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["roundedselection",{"_index":1467,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["routes",{"_index":544,"title":{"routes.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"routes.html":{}}}],["run",{"_index":1840,"title":{},"body":{"index.html":{}}}],["running",{"_index":1739,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["runs",{"_index":1859,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":1187,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["salt",{"_index":1682,"title":{},"body":{"injectables/UsersService.html":{}}}],["sample",{"_index":1133,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["samplecomponent",{"_index":1134,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["sans",{"_index":578,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["save",{"_index":749,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["save_delay",{"_index":703,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saved",{"_index":527,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saveotp",{"_index":1275,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["saveotp(userdata",{"_index":1282,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["savetemplate(content",{"_index":768,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetimeout",{"_index":702,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saving",{"_index":526,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scalable",{"_index":1833,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":763,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scheduleautosave(content",{"_index":757,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scheme",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":1732,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["scrollbar",{"_index":1468,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scrollbeyondlastline",{"_index":1462,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scss",{"_index":1495,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["search",{"_index":546,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary",{"_index":685,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary:hover",{"_index":686,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secret",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{}}}],["secure",{"_index":1231,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["segoe",{"_index":575,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["select",{"_index":736,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile",{"_index":699,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.path",{"_index":559,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.type",{"_index":560,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectfile(template",{"_index":753,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selector",{"_index":521,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sent",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["sentotpemail",{"_index":1201,"title":{},"body":{"injectables/MailService.html":{}}}],["sentotpemail(email",{"_index":1205,"title":{},"body":{"injectables/MailService.html":{}}}],["serif",{"_index":579,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["server",{"_index":802,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":164,"title":{},"body":{"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["session",{"_index":518,"title":{"interfaces/Session.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["sessionid",{"_index":519,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sessionid.substring(0",{"_index":524,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["set",{"_index":747,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["setdescription('complete",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seteditorcontent",{"_index":1434,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seteditorcontent(content",{"_index":1444,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback",{"_index":1435,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback(callback",{"_index":1446,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["settitle('ecommerce",{"_index":1992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1379,"title":{},"body":{"classes/ProcessHandlers.html":{},"index.html":{}}}],["setup(datasource",{"_index":1382,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["setupswagger",{"_index":1791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setupvalidation",{"_index":1792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showconfigpanel",{"_index":701,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["shutdown",{"_index":1398,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["side",{"_index":803,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["sidebar",{"_index":632,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["signal",{"_index":1394,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["signature",{"_index":1143,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["signoptions",{"_index":327,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":242,"title":{"classes/SignupDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignupDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["simple",{"_index":1088,"title":{},"body":{"injectables/HbsRenderService.html":{},"index.html":{}}}],["size",{"_index":599,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["skip",{"_index":1357,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["sm",{"_index":692,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["snakenamingstrategy",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solid",{"_index":596,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"modules/ErrorsModule.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["space",{"_index":583,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["spacing",{"_index":646,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["specialchars",{"_index":1318,"title":{},"body":{"injectables/OtpService.html":{}}}],["specific",{"_index":126,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["specify",{"_index":1740,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["sponsors",{"_index":1924,"title":{},"body":{"index.html":{}}}],["src/.../configuration.ts",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.ts",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typeorm.config.ts",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1825,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":210,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":211,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/sample/sample.component.ts",{"_index":1136,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["src/auth/auth.controller.ts",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:33",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:43",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:51",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.modules.ts",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:117",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:152",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:157",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:61",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:92",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/auth",{"_index":332,"title":{},"body":{"classes/AuthResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":1195,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":1199,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:7",{"_index":1197,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/resend",{"_index":1413,"title":{},"body":{"classes/ResendOtpDto.html":{},"coverage.html":{}}}],["src/auth/dto/signup.dts",{"_index":1681,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/dto/signup.dts.ts",{"_index":1416,"title":{},"body":{"classes/SignupDto.html":{},"coverage.html":{}}}],["src/auth/dto/signup.dts.ts:15",{"_index":1417,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dts.ts:20",{"_index":1419,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dts.ts:25",{"_index":1421,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dts.ts:35",{"_index":1423,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dts.ts:40",{"_index":1427,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dts.ts:45",{"_index":1425,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/verify",{"_index":1691,"title":{},"body":{"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["src/auth/entities/otp.entity.ts",{"_index":1243,"title":{},"body":{"entities/Otp.html":{},"coverage.html":{}}}],["src/auth/entities/otp.entity.ts:11",{"_index":1263,"title":{},"body":{"entities/Otp.html":{}}}],["src/auth/entities/otp.entity.ts:16",{"_index":1249,"title":{},"body":{"entities/Otp.html":{}}}],["src/auth/entities/otp.entity.ts:20",{"_index":1257,"title":{},"body":{"entities/Otp.html":{}}}],["src/auth/entities/otp.entity.ts:24",{"_index":1251,"title":{},"body":{"entities/Otp.html":{}}}],["src/auth/entities/otp.entity.ts:28",{"_index":1254,"title":{},"body":{"entities/Otp.html":{}}}],["src/auth/entities/otp.entity.ts:32",{"_index":1260,"title":{},"body":{"entities/Otp.html":{}}}],["src/auth/jwt.service.ts",{"_index":1150,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{},"coverage.html":{}}}],["src/auth/jwt.service.ts:18",{"_index":1156,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["src/auth/jwt.service.ts:24",{"_index":1159,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["src/auth/jwt.service.ts:46",{"_index":1166,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["src/auth/jwt.service.ts:55",{"_index":1164,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["src/auth/jwt.service.ts:64",{"_index":1162,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["src/auth/otp.repository.ts",{"_index":1272,"title":{},"body":{"injectables/OtpRepository.html":{},"coverage.html":{}}}],["src/auth/otp.repository.ts:12",{"_index":1283,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["src/auth/otp.repository.ts:23",{"_index":1281,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["src/auth/otp.repository.ts:30",{"_index":1286,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["src/auth/otp.repository.ts:34",{"_index":1279,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["src/auth/otp.repository.ts:7",{"_index":1278,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["src/auth/otp.service.ts",{"_index":1304,"title":{},"body":{"injectables/OtpService.html":{},"coverage.html":{}}}],["src/auth/otp.service.ts:14",{"_index":1310,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/auth/otp.service.ts:50",{"_index":1312,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/auth/otp.service.ts:70",{"_index":1308,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/auth/otp.service.ts:8",{"_index":1307,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/common/dto/pagination.dto.ts",{"_index":1329,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["src/common/dto/pagination.dto.ts:15",{"_index":1372,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/dto/pagination.dto.ts:26",{"_index":1370,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/dto/pagination.dto.ts:28",{"_index":1374,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/dto/pagination.dto.ts:40",{"_index":1340,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["src/common/dto/pagination.dto.ts:46",{"_index":1346,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["src/common/dto/pagination.dto.ts:52",{"_index":1344,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["src/common/dto/pagination.dto.ts:58",{"_index":1348,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["src/common/dto/pagination.dto.ts:64",{"_index":1350,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["src/common/dto/pagination.dto.ts:70",{"_index":1341,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["src/common/dto/pagination.dto.ts:76",{"_index":1338,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["src/common/entities/base.entity.ts",{"_index":442,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/common/entities/base.entity.ts:14",{"_index":457,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/common/entities/base.entity.ts:21",{"_index":450,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/common/entities/base.entity.ts:28",{"_index":461,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/config/configuration.ts",{"_index":1785,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/typeorm.config.ts",{"_index":1786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/process",{"_index":1376,"title":{},"body":{"classes/ProcessHandlers.html":{},"coverage.html":{}}}],["src/errors/custom.errors.ts",{"_index":104,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{},"coverage.html":{}}}],["src/errors/custom.errors.ts:17",{"_index":909,"title":{},"body":{"classes/DatabaseError.html":{}}}],["src/errors/custom.errors.ts:23",{"_index":1690,"title":{},"body":{"classes/ValidationError.html":{}}}],["src/errors/custom.errors.ts:29",{"_index":435,"title":{},"body":{"classes/AuthenticationError.html":{}}}],["src/errors/custom.errors.ts:3",{"_index":114,"title":{},"body":{"classes/AppError.html":{}}}],["src/errors/custom.errors.ts:35",{"_index":440,"title":{},"body":{"classes/AuthorizationError.html":{}}}],["src/errors/custom.errors.ts:41",{"_index":1240,"title":{},"body":{"classes/NotFoundError.html":{}}}],["src/errors/custom.errors.ts:47",{"_index":911,"title":{},"body":{"classes/EmailError.html":{}}}],["src/errors/custom.errors.ts:5",{"_index":118,"title":{},"body":{"classes/AppError.html":{}}}],["src/errors/custom.errors.ts:53",{"_index":838,"title":{},"body":{"classes/ConflictError.html":{}}}],["src/errors/custom.errors.ts:6",{"_index":119,"title":{},"body":{"classes/AppError.html":{}}}],["src/errors/custom.errors.ts:7",{"_index":117,"title":{},"body":{"classes/AppError.html":{}}}],["src/errors/custom.errors.ts:8",{"_index":116,"title":{},"body":{"classes/AppError.html":{}}}],["src/errors/error",{"_index":913,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/errors/errors.module.ts",{"_index":961,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["src/exceptions/http",{"_index":155,"title":{},"body":{"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{},"coverage.html":{}}}],["src/filters/global",{"_index":963,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["src/mailer/mail.service.ts",{"_index":1200,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mailer/mail.service.ts:11",{"_index":1206,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mailer/mail.service.ts:6",{"_index":1204,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mailer/mailer.modules",{"_index":318,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/mailer/mailer.modules.ts",{"_index":1217,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["src/main.ts",{"_index":1789,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations/1758745851583",{"_index":896,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{},"coverage.html":{}}}],["src/migrations/1758794208948",{"_index":6,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"coverage.html":{}}}],["src/migrations/1758820167397",{"_index":76,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{},"coverage.html":{}}}],["src/swagger.ts",{"_index":1790,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dto/create",{"_index":840,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1544,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/user",{"_index":1616,"title":{},"body":{"classes/UserResponseDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":1559,"title":{},"body":{"entities/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/entities/user.entity.ts:102",{"_index":1578,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:28",{"_index":1562,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:35",{"_index":1567,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:42",{"_index":1575,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:50",{"_index":1583,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:64",{"_index":1589,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:74",{"_index":1570,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:83",{"_index":1586,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:88",{"_index":1573,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:91",{"_index":1565,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":1641,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:10",{"_index":1644,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:15",{"_index":1647,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:20",{"_index":1652,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:25",{"_index":1650,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1668,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.repository.ts",{"_index":1600,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{}}}],["src/users/users.repository.ts:12",{"_index":1606,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/users/users.repository.ts:16",{"_index":1608,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/users/users.repository.ts:19",{"_index":1610,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/users/users.repository.ts:7",{"_index":1604,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/users/users.service.ts",{"_index":1672,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":1675,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":1676,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":1678,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":1680,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:39",{"_index":1679,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:42",{"_index":1677,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":1673,"title":{},"body":{"injectables/UsersService.html":{}}}],["ssl",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack",{"_index":1046,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["start",{"_index":1842,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1844,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1846,"title":{},"body":{"index.html":{}}}],["starter",{"_index":1836,"title":{},"body":{"index.html":{}}}],["starting",{"_index":1396,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["statements",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":695,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["status",{"_index":159,"title":{},"body":{"classes/AppHttpException.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"interfaces/CompoDocConfig.html":{},"classes/DatabaseException.html":{},"classes/EmailException.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["statuscode",{"_index":110,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["stay",{"_index":1910,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1856,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":1872,"title":{},"body":{"index.html":{}}}],["strategies",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["strict",{"_index":1239,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"controllers/AppController.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"injectables/AppService.html":{},"classes/AuthException.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{}}}],["strings",{"_index":1475,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["structure",{"_index":1120,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["style",{"_index":555,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["styles",{"_index":563,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["stylesheets",{"_index":1729,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["sub",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["subject",{"_index":1209,"title":{},"body":{"injectables/MailService.html":{}}}],["success",{"_index":520,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["success:hover",{"_index":689,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["successful",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["suggestontriggercharacters",{"_index":1480,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["summary",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["super",{"_index":1270,"title":{},"body":{"entities/Otp.html":{},"entities/User.html":{}}}],["super(`${resource",{"_index":145,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["super(message",{"_index":121,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["support",{"_index":1892,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":786,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["surroundingpairs",{"_index":1525,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["svg",{"_index":1939,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":2006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup('api",{"_index":2007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggeroptions",{"_index":2008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":931,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{}}}],["synchronize",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syntax",{"_index":1131,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{}}}],["system",{"_index":573,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["t",{"_index":1336,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["t.id",{"_index":1107,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["t\\r\\n",{"_index":1513,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tab",{"_index":554,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tabcompletion",{"_index":1482,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tabid",{"_index":1105,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["table",{"_index":35,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/CreateUserTable1758745851583.html":{},"coverage.html":{}}}],["tablecolumn",{"_index":36,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{}}}],["tableforeignkey",{"_index":80,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1512,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tagssorter",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["take",{"_index":1857,"title":{},"body":{"index.html":{}}}],["template",{"_index":508,"title":{"interfaces/Template.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"injectables/MailService.html":{},"modules/MyMailerModule.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["template.name",{"_index":556,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["template.type",{"_index":557,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["templatecontent",{"_index":1061,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["templatedir",{"_index":1224,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["templateeditorservice",{"_index":507,"title":{"injectables/TemplateEditorService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundcomponent",{"_index":693,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundmodule",{"_index":1527,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"modules/TemplatePlaygroundModule.html":{},"modules.html":{},"overview.html":{}}}],["templates",{"_index":531,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["templates.zip",{"_index":1723,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["templates/email",{"_index":1210,"title":{},"body":{"injectables/MailService.html":{}}}],["test",{"_index":1848,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":1851,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1850,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1847,"title":{},"body":{"index.html":{}}}],["text",{"_index":642,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/GlobalExceptionFilter.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["thanks",{"_index":1923,"title":{},"body":{"index.html":{}}}],["theme",{"_index":1457,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["then((content",{"_index":1721,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.accesstoken",{"_index":352,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["this.appservice.gethello",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.resendotp(resendotpdto.email",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifyemail(verifyemaildto",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config",{"_index":743,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.configservice.get",{"_index":1168,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/OtpService.html":{},"interfaces/Tokens.html":{}}}],["this.configservice.get('jwt_expires_in",{"_index":1172,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["this.configservice.get('otp_expiry_minutes",{"_index":1212,"title":{},"body":{"injectables/MailService.html":{}}}],["this.constructor",{"_index":125,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["this.constructor.name",{"_index":123,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["this.createdat",{"_index":1636,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["this.createpayload(user",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createsession",{"_index":715,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.data",{"_index":1360,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["this.downloadblob(content",{"_index":1722,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.editor",{"_index":1454,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.dispose",{"_index":1526,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":1485,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.setmodel(model",{"_index":1493,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editorservice.initializeeditor(this.editorcontainer.nativeelement",{"_index":746,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.seteditorcontent(response.content",{"_index":755,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.setonchangecallback((content",{"_index":751,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.email",{"_index":1630,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["this.excludepassword(user",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.expiresin",{"_index":356,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["this.firstname",{"_index":1597,"title":{},"body":{"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["this.fullname",{"_index":1631,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["this.generatereadme",{"_index":1717,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.generatetokens(payload",{"_index":1183,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["this.getlanguagefromfiletype(filetype",{"_index":1490,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.handlebarsinstance",{"_index":1066,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.compile(templatecontent",{"_index":1116,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('compare",{"_index":1074,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('each",{"_index":1083,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('isinitialtab",{"_index":1109,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('istabenabled",{"_index":1103,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('orlength",{"_index":1097,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('relativeurl",{"_index":1086,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('unless",{"_index":1080,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handledatabaseerror(error",{"_index":992,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["this.handlenodemailererror(exception",{"_index":1014,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["this.hasnext",{"_index":1366,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/config`).topromise",{"_index":742,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/template/${template.path}`).topromise",{"_index":754,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/templates`).topromise",{"_index":733,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post('/api/session/create",{"_index":726,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/config",{"_index":771,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/download",{"_index":805,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/template/${this.selectedfile.path",{"_index":769,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.id",{"_index":1629,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["this.initializeeditor",{"_index":718,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializehandlebars",{"_index":1064,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.isactive",{"_index":1633,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["this.isnodemailererror(error",{"_index":945,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.isnodemailererror(exception",{"_index":1013,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["this.jwtauthservice.generatetokens",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":1167,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":1174,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["this.lastname",{"_index":1598,"title":{},"body":{"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["this.lastsaved",{"_index":766,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.limit",{"_index":1359,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["this.loadsessionconfig",{"_index":717,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessiontemplates",{"_index":716,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.logerror(request",{"_index":1016,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["this.logger.error",{"_index":1390,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["this.logger.error('error",{"_index":1406,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["this.logger.error(`uncaught",{"_index":1386,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["this.logger.log('database",{"_index":1401,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["this.logger.log('graceful",{"_index":1403,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["this.logger.log(`received",{"_index":1395,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["this.mailerservice.sendmail",{"_index":1208,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sentotpemail",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.name",{"_index":122,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["this.onchangecallback",{"_index":1486,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.onchangecallback(this.editor.getvalue",{"_index":1487,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.otprepository",{"_index":1300,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["this.otprepository.cleanupexpiredotps",{"_index":1327,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.otprepository.create",{"_index":1290,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["this.otprepository.findone",{"_index":1296,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["this.otprepository.findone(email",{"_index":1323,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.otprepository.save(otpdata",{"_index":1295,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["this.otprepository.saveotp(userdata",{"_index":1321,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.otprepository.update",{"_index":1325,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.otprepository.update(id",{"_index":1299,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["this.otpservice.generateotp(user.id",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.otpservice.generateotp(user?.id",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.otpservice.verifyotp(email",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.page",{"_index":1358,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["this.parseexpiresin",{"_index":1171,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["this.phonenumber",{"_index":1634,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["this.previewframe.nativeelement.src",{"_index":781,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.previewframe?.nativeelement",{"_index":780,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.refreshtoken",{"_index":354,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["this.registerhandlebarslanguage",{"_index":1489,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.registerhelpers",{"_index":1071,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.role",{"_index":1632,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["this.save_delay",{"_index":767,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetemplate(content",{"_index":765,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetimeout",{"_index":722,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.saving",{"_index":762,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.scheduleautosave(content",{"_index":752,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectedfile",{"_index":739,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectfile(this.templates[0",{"_index":740,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid",{"_index":708,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid}.zip",{"_index":817,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showconfigpanel",{"_index":778,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.templates",{"_index":734,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.templates.length",{"_index":738,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.total",{"_index":1363,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["this.totalpages",{"_index":1364,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["this.updatedat",{"_index":1638,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["this.user",{"_index":358,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["this.userrepository.create(userdata",{"_index":1612,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userrepository.createuser(userdata",{"_index":1687,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findbyemail(email",{"_index":1689,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":1614,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userrepository.save(user",{"_index":1613,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userrepository.update(id",{"_index":1615,"title":{},"body":{"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["this.usersservice.create(signupdto",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findall",{"_index":1658,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyemail(email",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyemail(signupdto.email",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(+id",{"_index":1660,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":1664,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":1662,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(user.id",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifytoken(refreshtoken",{"_index":1182,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["throw",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/ErrorHandlerService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":848,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/Otp.html":{},"classes/UpdateUserDto.html":{},"index.html":{}}}],["time'})@column({name",{"_index":1250,"title":{},"body":{"entities/Otp.html":{}}}],["timeout",{"_index":761,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["timestamp",{"_index":46,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/BaseEntity.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/GlobalExceptionFilter.html":{},"entities/Otp.html":{},"classes/UserResponseDto.html":{}}}],["tips",{"_index":1749,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["title",{"_index":1138,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["todo",{"_index":791,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggle",{"_index":538,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggleconfigpanel",{"_index":777,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["token",{"_index":341,"title":{},"body":{"classes/AuthResponseDto.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/JwtAuthService.html":{},"injectables/TemplateEditorService.html":{},"miscellaneous/variables.html":{}}}],["token_expired",{"_index":998,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["tokenexpirederror",{"_index":952,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["tokenizer",{"_index":1504,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tokens",{"_index":338,"title":{"interfaces/Tokens.html":{}},"body":{"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{},"coverage.html":{}}}],["tokens.accesstoken",{"_index":353,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["tokens.expiresin",{"_index":357,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["tokens.refreshtoken",{"_index":355,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["top",{"_index":629,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["topbar",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["topromise",{"_index":727,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["total",{"_index":1333,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["totalpages",{"_index":1334,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{}}}],["touch",{"_index":1930,"title":{},"body":{"index.html":{}}}],["trackbyname(index",{"_index":835,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["transform",{"_index":643,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":1352,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"dependencies.html":{}}}],["transformerror",{"_index":916,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["transformerror(error",{"_index":919,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["transformoptions",{"_index":2023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition",{"_index":613,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["translation",{"_index":1089,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations",{"_index":1091,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations[key",{"_index":1095,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["transparent",{"_index":678,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["transport",{"_index":1227,"title":{},"body":{"modules/MyMailerModule.html":{}}}],["tree",{"_index":553,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["trigger",{"_index":822,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["true",{"_index":48,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{},"miscellaneous/variables.html":{}}}],["true})@column({default",{"_index":1568,"title":{},"body":{"entities/User.html":{}}}],["true})@column({name",{"_index":1582,"title":{},"body":{"entities/User.html":{}}}],["try",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/MailService.html":{},"injectables/OtpService.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"interfaces/Tokens.html":{},"injectables/UsersService.html":{}}}],["ts",{"_index":1498,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tsconfig.json",{"_index":1743,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["twitter",{"_index":1936,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/AppError.html":{},"classes/AppHttpException.html":{},"controllers/AuthController.html":{},"classes/AuthException.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/BaseEntity.html":{},"interfaces/CompoDocConfig.html":{},"classes/ConflictError.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"classes/ResendOtpDto.html":{},"interfaces/Session.html":{},"classes/SignupDto.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationError.html":{},"classes/VerifyEmailDto.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1008,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["typeorm",{"_index":37,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/BaseEntity.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"entities/Otp.html":{},"injectables/OtpRepository.html":{},"classes/ProcessHandlers.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([otp",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1671,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":1557,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":1178,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{},"entities/User.html":{},"index.html":{}}}],["ui",{"_index":576,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"classes/PaginatedResponseDto.html":{},"classes/SignupDto.html":{},"classes/UserResponseDto.html":{}}}],["undefined})@column({name",{"_index":1587,"title":{},"body":{"entities/User.html":{}}}],["undefined})@isenum(userrole",{"_index":1588,"title":{},"body":{"entities/User.html":{}}}],["undefined})@isoptional()@isenum(userrole",{"_index":875,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["undone",{"_index":790,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["unhandled",{"_index":1391,"title":{},"body":{"classes/ProcessHandlers.html":{}}}],["unique",{"_index":1020,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"entities/User.html":{}}}],["unique_violation",{"_index":1022,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["unit",{"_index":1184,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{},"index.html":{}}}],["unknown",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorHandlerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["unless",{"_index":1079,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["unlicensed",{"_index":1945,"title":{},"body":{"properties.html":{}}}],["unsafe",{"_index":1593,"title":{},"body":{"entities/User.html":{}}}],["unused",{"_index":1180,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["up",{"_index":17,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateUserTable1758745851583.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["up(queryrunner",{"_index":32,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["update",{"_index":459,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/OtpRepository.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":1661,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":1609,"title":{},"body":{"injectables/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(undefined",{"_index":1285,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["updateconfig",{"_index":770,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updated",{"_index":772,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updated_at",{"_index":907,"title":{},"body":{"classes/CreateUserTable1758745851583.html":{}}}],["updatedat",{"_index":444,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UserResponseDto.html":{}}}],["updatedatecolumn",{"_index":464,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updates",{"_index":1912,"title":{},"body":{"index.html":{}}}],["updateuser",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserdto",{"_index":1543,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updating",{"_index":776,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["uppercase",{"_index":644,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["uppercasealphabets",{"_index":1317,"title":{},"body":{"injectables/OtpService.html":{}}}],["url",{"_index":823,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["url.createobjecturl(zipblob",{"_index":824,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.revokeobjecturl(url",{"_index":831,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["usage",{"_index":1734,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["use",{"_index":1737,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["used",{"_index":925,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/HbsRenderService.html":{},"entities/Otp.html":{}}}],["usefactory",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MyMailerModule.html":{}}}],["user",{"_index":245,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1758745851583.html":{},"modules/MyMailerModule.html":{},"entities/Otp.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.createdat",{"_index":1637,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["user.dto",{"_index":1558,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":841,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:21",{"_index":847,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":1548,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:32",{"_index":856,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":1552,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:39",{"_index":861,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:43",{"_index":1554,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:51",{"_index":1553,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:53",{"_index":869,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:58",{"_index":1550,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:62",{"_index":876,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:66",{"_index":1546,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:70",{"_index":872,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:74",{"_index":1549,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:77",{"_index":859,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:85",{"_index":850,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:93",{"_index":857,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserResponseDto.html":{}}}],["user.firstname",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserResponseDto.html":{}}}],["user.id",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserResponseDto.html":{}}}],["user.isactive",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserResponseDto.html":{}}}],["user.isemailverified",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.lastname",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserResponseDto.html":{}}}],["user.otps",{"_index":1268,"title":{},"body":{"entities/Otp.html":{}}}],["user.otps)@joincolumn({name",{"_index":1259,"title":{},"body":{"entities/Otp.html":{}}}],["user.password",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.phonenumber",{"_index":1635,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["user.role",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserResponseDto.html":{}}}],["user.updatedat",{"_index":1639,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["user?.email",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["user@example.com",{"_index":887,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{},"classes/VerifyEmailDto.html":{}}}],["user@example.com'})@column({unique",{"_index":1560,"title":{},"body":{"entities/User.html":{}}}],["user@example.com'})@isemail",{"_index":846,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"classes/VerifyEmailDto.html":{}}}],["user_id",{"_index":57,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/AddOtpForeignKey1758745851584.html":{},"entities/Otp.html":{}}}],["userdata",{"_index":1284,"title":{},"body":{"injectables/OtpRepository.html":{},"injectables/OtpService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["userdata.email",{"_index":1292,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["userdata.expiresat",{"_index":1294,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["userdata.otp",{"_index":1293,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["userdata.userid",{"_index":1291,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["userid",{"_index":1246,"title":{},"body":{"entities/Otp.html":{},"injectables/OtpRepository.html":{},"injectables/OtpService.html":{}}}],["username",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":1599,"title":{"injectables/UserRepository.html":{}},"body":{"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userresponsedto",{"_index":348,"title":{"classes/UserResponseDto.html":{}},"body":{"classes/AuthResponseDto.html":{},"classes/UserResponseDto.html":{},"coverage.html":{}}}],["userresponsedto(user",{"_index":359,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["userrole",{"_index":873,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.user",{"_index":892,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["users",{"_index":84,"title":{},"body":{"classes/AddOtpForeignKey1758745851584.html":{},"classes/CreateUserTable1758745851583.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":1669,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.repository",{"_index":1670,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1655,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/dto/user",{"_index":351,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["users/entities/user.entity",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"entities/Otp.html":{},"classes/SignupDto.html":{}}}],["users/users.module",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["userscontroller",{"_index":1640,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":183,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":365,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwithoutpassword",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["using",{"_index":1905,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":53,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/BaseEntity.html":{},"classes/CreateUserTable1758745851583.html":{},"entities/Otp.html":{}}}],["uuid'})@index",{"_index":1262,"title":{},"body":{"entities/Otp.html":{}}}],["uuid_generate_v4",{"_index":56,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["validation_error",{"_index":132,"title":{},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{}}}],["validationerror",{"_index":130,"title":{"classes/ValidationError.html":{}},"body":{"classes/AppError.html":{},"classes/AuthenticationError.html":{},"classes/AuthorizationError.html":{},"classes/ConflictError.html":{},"classes/DatabaseError.html":{},"classes/EmailError.html":{},"injectables/ErrorHandlerService.html":{},"classes/NotFoundError.html":{},"classes/ValidationError.html":{},"coverage.html":{}}}],["validationerror('required",{"_index":939,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["validationpipe",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":885,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ResendOtpDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/VerifyEmailDto.html":{},"dependencies.html":{}}}],["value",{"_index":22,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/CreateUserTable1758745851583.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"classes/PaginationDto.html":{},"classes/ProcessHandlers.html":{},"injectables/TemplateEditorService.html":{},"interfaces/Tokens.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1101,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["values",{"_index":788,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["varchar",{"_index":59,"title":{},"body":{"classes/AddEmailVerification1758794208948.html":{},"classes/CreateUserTable1758745851583.html":{}}}],["variable",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1946,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1181,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["verification",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["verified",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["verify",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["verifyemail",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["verifyemail(verifyemaildto",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["verifyemaildto",{"_index":255,"title":{"classes/VerifyEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["verifyotp",{"_index":1306,"title":{},"body":{"injectables/OtpService.html":{}}}],["verifyotp(email",{"_index":1311,"title":{},"body":{"injectables/OtpService.html":{}}}],["verifytoken",{"_index":1153,"title":{},"body":{"injectables/JwtAuthService.html":{}}}],["verifytoken(token",{"_index":1165,"title":{},"body":{"injectables/JwtAuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["version",{"_index":1943,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":1470,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["video",{"_index":1899,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":501,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('editorcontainer",{"_index":694,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('previewframe",{"_index":697,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["violation",{"_index":1021,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["visible",{"_index":1141,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["visit",{"_index":1764,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["visualize",{"_index":1902,"title":{},"body":{"index.html":{}}}],["void",{"_index":758,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/HbsRenderService.html":{},"classes/ProcessHandlers.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/variables.html":{}}}],["vs",{"_index":1458,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["w",{"_index":1518,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["w+)(\\s*=\\s",{"_index":1514,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["want",{"_index":787,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["watch",{"_index":1843,"title":{},"body":{"index.html":{}}}],["website",{"_index":1934,"title":{},"body":{"index.html":{}}}],["weight",{"_index":606,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["wheher",{"_index":1252,"title":{},"body":{"entities/Otp.html":{}}}],["where('expiresat",{"_index":1303,"title":{},"body":{"injectables/OtpRepository.html":{}}}],["whether",{"_index":1140,"title":{},"body":{"injectables/HbsRenderService.html":{},"entities/User.html":{},"classes/UserResponseDto.html":{}}}],["white",{"_index":659,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["whitelist",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["width",{"_index":633,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.settimeout(async",{"_index":764,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.url.createobjecturl(blob",{"_index":1768,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1770,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["wordbasedsuggestions",{"_index":1483,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wordwrap",{"_index":1465,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["working",{"_index":1889,"title":{},"body":{"index.html":{}}}],["world",{"_index":213,"title":{},"body":{"injectables/AppService.html":{}}}],["wrap",{"_index":1118,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wrapper",{"_index":1123,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["writeonly",{"_index":1581,"title":{},"body":{"entities/User.html":{}}}],["x",{"_index":1914,"title":{},"body":{"index.html":{}}}],["y",{"_index":636,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["yes",{"_index":115,"title":{},"body":{"classes/AppError.html":{},"classes/AppHttpException.html":{},"classes/AuthException.html":{},"classes/DatabaseError.html":{},"classes/DatabaseException.html":{},"classes/EmailError.html":{},"classes/EmailException.html":{},"injectables/ErrorHandlerService.html":{},"classes/ValidationError.html":{}}}],["you'd",{"_index":1927,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1852,"title":{},"body":{"index.html":{}}}],["z",{"_index":853,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["za",{"_index":852,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["zip",{"_index":511,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["zip.file('readme.md",{"_index":1718,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.file(file.path",{"_index":1713,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.generateasync",{"_index":1720,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zipblob",{"_index":810,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zipexportservice",{"_index":510,"title":{"injectables/ZipExportService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"overview.html":{}}}],["zipservice",{"_index":712,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zoom",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorsModule.html":{},"modules/MyMailerModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddEmailVerification1758794208948.html":{"url":"classes/AddEmailVerification1758794208948.html","title":"class - AddEmailVerification1758794208948","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddEmailVerification1758794208948\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1758794208948-AddEmailVerification.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddEmailVerification1758794208948'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1758794208948-AddEmailVerification.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1758794208948-AddEmailVerification.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1758794208948-AddEmailVerification.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, Table, TableColumn } from 'typeorm';\n\nexport class AddEmailVerification1758794208948 implements MigrationInterface {\n  name = 'AddEmailVerification1758794208948';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.addColumns('users', [\n      new TableColumn({\n        name: 'is_email_verified',\n        type: 'boolean',\n        default: false,\n      }),\n      new TableColumn({\n        name: 'email_verified_at',\n        type: 'timestamp',\n        isNullable: true,\n      }),\n    ]);\n\n    await queryRunner.createTable(\n      new Table({\n        name: 'otps',\n        columns: [\n          {\n            name: 'id',\n            type: 'uuid',\n            isPrimary: true,\n            generationStrategy: 'uuid',\n            default: 'uuid_generate_v4()',\n          },\n          {\n            name: 'user_id',\n            type: 'uuid',\n          },\n          {\n            name: 'email',\n            type: 'varchar',\n          },\n          {\n            name: 'otp',\n            type: 'varchar',\n            length: '6',\n          },\n          {\n            name: 'expires_at',\n            type: 'timestamp',\n          },\n          {\n            name: 'is_used',\n            type: 'boolean',\n            default: false,\n          },\n          {\n            name: 'created_at',\n            type: 'timestamp',\n            default: 'now()',\n          },\n        ],\n        indices: [\n          {\n            name: 'IDX_OTP_USER_ID',\n            columnNames: ['user_id'],\n          },\n          {\n            name: 'IDX_OTP_EMAIL',\n            columnNames: ['email'],\n          },\n        ],\n      }),\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropTable('otps');\n    await queryRunner.dropColumn('users', 'is_email_verified');\n    await queryRunner.dropColumn('users', 'email_verified_at');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddOtpForeignKey1758745851584.html":{"url":"classes/AddOtpForeignKey1758745851584.html","title":"class - AddOtpForeignKey1758745851584","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddOtpForeignKey1758745851584\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1758820167397-AddOtpForeignKey.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1758820167397-AddOtpForeignKey.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1758820167397-AddOtpForeignKey.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, TableForeignKey } from 'typeorm';\n\nexport class AddOtpForeignKey1758745851584 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createForeignKey(\n      'otps',\n      new TableForeignKey({\n        name: 'FK_OTP_USER_ID',\n        columnNames: ['user_id'],\n        referencedTableName: 'users',\n        referencedColumnNames: ['id'],\n        onDelete: 'CASCADE',\n      }),\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropForeignKey('otps', 'FK_OTP_USER_ID');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppError.html":{"url":"classes/AppError.html","title":"class - AppError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errors/custom.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                details\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, statusCode: number, errorCode: string, details?: any)\n                    \n                \n                        \n                            \n                                Defined in src/errors/custom.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/errors/custom.errors.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/errors/custom.errors.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/errors/custom.errors.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/errors/custom.errors.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class AppError extends Error {\n  constructor(\n    public message: string,\n    public statusCode: number,\n    public errorCode: string,\n    public details?: any,\n  ) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n// Specific error classes\nexport class DatabaseError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'DATABASE_ERROR', details);\n  }\n}\n\nexport class ValidationError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.BAD_REQUEST, 'VALIDATION_ERROR', details);\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message: string = 'Authentication failed') {\n    super(message, HttpStatus.UNAUTHORIZED, 'AUTHENTICATION_ERROR');\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message: string = 'Not authorized') {\n    super(message, HttpStatus.FORBIDDEN, 'AUTHORIZATION_ERROR');\n  }\n}\n\nexport class NotFoundError extends AppError {\n  constructor(resource: string = 'Resource') {\n    super(`${resource} not found`, HttpStatus.NOT_FOUND, 'NOT_FOUND_ERROR');\n  }\n}\n\nexport class EmailError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'EMAIL_ERROR', details);\n  }\n}\n\nexport class ConflictError extends AppError {\n  constructor(message: string) {\n    super(message, HttpStatus.CONFLICT, 'CONFLICT_ERROR');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppHttpException.html":{"url":"classes/AppHttpException.html","title":"class - AppHttpException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppHttpException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/http-exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                detail\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, status: HttpStatus, errorCode: string, detail?: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/http-exception.filter.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detail\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        detail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/exceptions/http-exception.filter.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/exceptions/http-exception.filter.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class AppHttpException extends HttpException {\n  constructor(\n    message: string,\n    status: HttpStatus,\n    public errorCode: string,\n    public detail?: any,\n  ) {\n    super(message, status);\n  }\n}\n\nexport class EmailException extends AppHttpException {\n  constructor(message: string = 'Email service error', details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'EMAIL_ERROR', details);\n  }\n}\n\nexport class DatabaseException extends AppHttpException {\n  constructor(message: string = 'Database error', details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'DATABASE_ERROR', details);\n  }\n}\n\nexport class AuthException extends AppHttpException {\n  constructor(message: string = 'Authentication error', details?: any) {\n    super(message, HttpStatus.UNAUTHORIZED, 'AUTH_ERROR', details);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nErrorsModule\n\nErrorsModule\n\nAppModule -->\n\nErrorsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ErrorsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { createDatabaseConfig } from './config/configuration';\nimport { AuthModule } from './auth/auth.modules';\nimport { ErrorsModule } from './errors/errors.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: [`.env.${process.env.NODE_ENV}`, '.env'],\n    }),\n    TypeOrmModule.forRootAsync({\n      useFactory: () => {\n        const config = createDatabaseConfig();\n        return config;\n      },\n    }),\n    ErrorsModule,\n    UsersModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                resendOtp\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                signup\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Login to get access'})@ApiResponse({status: undefined, description: 'Login successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        resendOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    resendOtp(resendOtpDto: ResendOtpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('resend-otp')@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Resend verification OTP'})@ApiResponse({status: 200, description: 'OTP sent successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resendOtpDto\n                                            \n                                                            ResendOtpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(signupDto: SignupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: 'Create a new user account'})@ApiResponse({status: 201, description: 'User created successfully', type: AuthResponseDto})@ApiResponse({status: 409, description: 'Email already exists'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signupDto\n                                            \n                                                            SignupDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmail(verifyEmailDto: VerifyEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('verify-email')@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Verify email with OTP'})@ApiResponse({status: 200, description: 'Email verified successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                verifyEmailDto\n                                            \n                                                            VerifyEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\nimport { AuthResponseDto } from './dto/auth-response.dto';\nimport { SignupDto } from './dto/signup.dts';\nimport { VerifyEmailDto } from './dto/verify-email.dto';\nimport { ResendOtpDto } from './dto/resend-otp.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('signup')\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({ summary: 'Create a new user account' })\n  @ApiResponse({\n    status: 201,\n    description: 'User created successfully',\n    type: AuthResponseDto,\n  })\n  @ApiResponse({ status: 409, description: 'Email already exists' })\n  async signup(@Body() signupDto: SignupDto): Promise {\n    const result = await this.authService.signup(signupDto);\n    return new AuthResponseDto(result.tokens, result.user);\n  }\n\n  @Post('verify-email')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({ summary: 'Verify email with OTP' })\n  @ApiResponse({ status: 200, description: 'Email verified successfully' })\n  async verifyEmail(\n    @Body() verifyEmailDto: VerifyEmailDto,\n  ): Promise {\n    return this.authService.verifyEmail(verifyEmailDto);\n  }\n\n  @Post('resend-otp')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({ summary: 'Resend verification OTP' })\n  @ApiResponse({ status: 200, description: 'OTP sent successfully' })\n  async resendOtp(@Body() resendOtpDto: ResendOtpDto) {\n    return this.authService.resendOtp(resendOtpDto.email);\n  }\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({ summary: 'Login to get access' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Login successfully' })\n  async login(@Body() loginDto: LoginDto) {\n    return this.authService.login(loginDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthException.html":{"url":"classes/AuthException.html","title":"class - AuthException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/http-exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppHttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                detail\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/http-exception.filter.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        detail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AppHttpException\n\n                            \n                        \n                    \n                        \n                                Defined in         AppHttpException:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppHttpException\n\n                            \n                        \n                    \n                        \n                                Defined in         AppHttpException:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class AppHttpException extends HttpException {\n  constructor(\n    message: string,\n    status: HttpStatus,\n    public errorCode: string,\n    public detail?: any,\n  ) {\n    super(message, status);\n  }\n}\n\nexport class EmailException extends AppHttpException {\n  constructor(message: string = 'Email service error', details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'EMAIL_ERROR', details);\n  }\n}\n\nexport class DatabaseException extends AppHttpException {\n  constructor(message: string = 'Database error', details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'DATABASE_ERROR', details);\n  }\n}\n\nexport class AuthException extends AppHttpException {\n  constructor(message: string = 'Authentication error', details?: any) {\n    super(message, HttpStatus.UNAUTHORIZED, 'AUTH_ERROR', details);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nErrorsModule\n\nErrorsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nErrorsModule->AuthModule\n\n\n\n\n\nMyMailerModule\n\nMyMailerModule\n\nAuthModule -->\n\nMyMailerModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtAuthService \n\nJwtAuthService \n\nJwtAuthService  -->\n\nAuthModule->JwtAuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtAuthService\n\nJwtAuthService\n\nAuthModule -->\n\nJwtAuthService->AuthModule\n\n\n\n\n\nOtpRepository\n\nOtpRepository\n\nAuthModule -->\n\nOtpRepository->AuthModule\n\n\n\n\n\nOtpService\n\nOtpService\n\nAuthModule -->\n\nOtpService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.modules.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtAuthService\n                        \n                        \n                            OtpRepository\n                        \n                        \n                            OtpService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ErrorsModule\n                        \n                        \n                            MyMailerModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtAuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UsersModule } from '../users/users.module';\nimport { AuthService } from './auth.service';\nimport { JwtAuthService } from './jwt.service';\nimport { AuthController } from './auth.controller';\nimport { OtpService } from './otp.service';\nimport { MyMailerModule } from 'src/mailer/mailer.modules';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Otp } from './entities/otp.entity';\nimport { OtpRepository } from './otp.repository';\nimport { ErrorsModule } from '../errors/errors.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Otp]),\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET') || 'fallback-secret-key',\n        signOptions: { expiresIn: configService.get('JWT_EXPIRES_IN', '15m') },\n      }),\n      inject: [ConfigService],\n    }),\n    UsersModule,\n    MyMailerModule,\n    ErrorsModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtAuthService, OtpService, OtpRepository],\n  exports: [JwtAuthService, AuthService, JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResponseDto.html":{"url":"classes/AuthResponseDto.html","title":"class - AuthResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                expiresIn\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokens: any, user: any)\n                    \n                \n                        \n                            \n                                Defined in src/auth/dto/auth-response.dto.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokens\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT Access token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        expiresIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Token expiration in milliseconds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-response.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT refresh token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User information'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-response.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserResponseDto } from '../../users/dto/user-response.dto';\n\nexport class AuthResponseDto {\n  @ApiProperty({\n    description: 'JWT Access token',\n  })\n  accessToken: string;\n\n  @ApiProperty({ description: 'JWT refresh token' })\n  refreshToken: string;\n\n  @ApiProperty({\n    description: 'Token expiration in milliseconds',\n  })\n  expiresIn: number;\n\n  @ApiProperty({ description: 'User information' })\n  user: UserResponseDto;\n\n  constructor(tokens: any, user: any) {\n    this.accessToken = tokens.accessToken;\n    this.refreshToken = tokens.refreshToken;\n    this.expiresIn = tokens.expiresIn;\n    this.user = new UserResponseDto(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createPayload\n                            \n                            \n                                    Private\n                                excludePassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                resendOtp\n                            \n                            \n                                    Async\n                                signup\n                            \n                            \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtAuthService: JwtAuthService, configService: ConfigService, otpService: OtpService, mailService: MailService, errorHandler: ErrorHandlerService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtAuthService\n                                                  \n                                                        \n                                                                        JwtAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otpService\n                                                  \n                                                        \n                                                                        OtpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createPayload\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPayload(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         JwtPayload\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        excludePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    excludePassword(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resendOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    resendOtp(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(signupDto: SignupDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signupDto\n                                            \n                                                            SignupDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmail(VerifyEmailDto: VerifyEmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                VerifyEmailDto\n                                            \n                                                            VerifyEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { UsersService } from '../users/users.service';\nimport { JwtAuthService, JwtPayload } from './jwt.service';\nimport { SignupDto } from './dto/signup.dts';\nimport { User } from '../users/entities/user.entity';\nimport { ConfigService } from '@nestjs/config';\nimport { OtpService } from './otp.service';\nimport { MailService } from '../mailer/mail.service';\nimport { VerifyEmailDto } from './dto/verify-email.dto';\nimport { ErrorHandlerService } from '../errors/error-handler.service';\nimport {\n  AuthenticationError,\n  ConflictError,\n  NotFoundError,\n} from '../errors/custom.errors';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtAuthService: JwtAuthService,\n    private readonly configService: ConfigService,\n    private readonly otpService: OtpService,\n    private readonly mailService: MailService,\n    private errorHandler: ErrorHandlerService,\n  ) {}\n  async signup(signupDto: SignupDto): Promise {\n    try {\n      const existingUser = await this.usersService.findByEmail(signupDto.email);\n      if (existingUser) {\n        throw new AuthenticationError('Invalid credentials');\n      }\n      const user = await this.usersService.create(signupDto);\n\n      if (user) {\n        const otp = await this.otpService.generateOtp(user?.id!, user?.email!);\n\n        await this.mailService.sentOtpEmail(\n          user.email,\n          otp || '',\n          `${user.firstName} ${user.lastName}`,\n        );\n        const tokens = await this.jwtAuthService.generateTokens(\n          this.createPayload(user),\n        );\n\n        return {\n          message:\n            'Registration successful. Please check your mail for verification Otp',\n          tokens,\n          user: this.excludePassword(user),\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async verifyEmail(\n    VerifyEmailDto: VerifyEmailDto,\n  ): Promise {\n    const { email, otp } = VerifyEmailDto;\n    try {\n      const isOtpValid = await this.otpService.verifyOtp(email, otp);\n\n      if (!isOtpValid) {\n        throw new AuthenticationError('Invalid or expired OTP');\n      }\n\n      const user = await this.usersService.findByEmail(email);\n\n      if (!user) {\n        throw new NotFoundError('User');\n      }\n\n      const updateUser = await this.usersService.update(user.id, {\n        isActive: true,\n        isEmailVerified: true,\n        emailVerifiedAt: new Date(),\n      });\n      return {\n        message: 'Email verified successfully. You can now login.',\n        user: updateUser,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async resendOtp(email: string): Promise {\n    try {\n      const user = await this.usersService.findByEmail(email);\n\n      if (!user) {\n        throw new NotFoundError('User');\n      }\n\n      if (user.isEmailVerified) {\n        throw new ConflictError('Email is already verified');\n      }\n\n      const otp = await this.otpService.generateOtp(user.id, user.email);\n      await this.mailService.sentOtpEmail(\n        user.email,\n        otp || '',\n        `${user.firstName} ${user.lastName}`,\n      );\n\n      return { message: 'OTP sent successfully' };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async login(loginDto: LoginDto): Promise {\n    const { email, password } = loginDto;\n    try {\n      const user = await this.usersService.findByEmail(email);\n\n      if (!user) {\n        throw new AuthenticationError('Invalid username or password');\n      }\n\n      const isCorrectPassword = await bcrypt.compare(password, user.password);\n\n      if (!isCorrectPassword) {\n        throw new AuthenticationError('Invalid username or password');\n      }\n\n      if (!user.isActive && !user.isEmailVerified) {\n        throw new AuthenticationError(\n          'User is not active and verified. Please verify your email',\n        );\n      }\n\n      const tokens = await this.jwtAuthService.generateTokens(\n        this.createPayload(user),\n      );\n\n      return {\n        message: 'Login successful.',\n        tokens,\n        user: this.excludePassword(user),\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private excludePassword(user: User): any {\n    const { password, ...userWithoutPassword } = user;\n    return userWithoutPassword;\n  }\n\n  private createPayload(user: User): JwtPayload {\n    return {\n      sub: user.id,\n      email: user.email,\n      role: user.role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthenticationError.html":{"url":"classes/AuthenticationError.html","title":"class - AuthenticationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthenticationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errors/custom.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                details\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/errors/custom.errors.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class AppError extends Error {\n  constructor(\n    public message: string,\n    public statusCode: number,\n    public errorCode: string,\n    public details?: any,\n  ) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n// Specific error classes\nexport class DatabaseError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'DATABASE_ERROR', details);\n  }\n}\n\nexport class ValidationError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.BAD_REQUEST, 'VALIDATION_ERROR', details);\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message: string = 'Authentication failed') {\n    super(message, HttpStatus.UNAUTHORIZED, 'AUTHENTICATION_ERROR');\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message: string = 'Not authorized') {\n    super(message, HttpStatus.FORBIDDEN, 'AUTHORIZATION_ERROR');\n  }\n}\n\nexport class NotFoundError extends AppError {\n  constructor(resource: string = 'Resource') {\n    super(`${resource} not found`, HttpStatus.NOT_FOUND, 'NOT_FOUND_ERROR');\n  }\n}\n\nexport class EmailError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'EMAIL_ERROR', details);\n  }\n}\n\nexport class ConflictError extends AppError {\n  constructor(message: string) {\n    super(message, HttpStatus.CONFLICT, 'CONFLICT_ERROR');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorizationError.html":{"url":"classes/AuthorizationError.html","title":"class - AuthorizationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorizationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errors/custom.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                details\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/errors/custom.errors.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class AppError extends Error {\n  constructor(\n    public message: string,\n    public statusCode: number,\n    public errorCode: string,\n    public details?: any,\n  ) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n// Specific error classes\nexport class DatabaseError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'DATABASE_ERROR', details);\n  }\n}\n\nexport class ValidationError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.BAD_REQUEST, 'VALIDATION_ERROR', details);\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message: string = 'Authentication failed') {\n    super(message, HttpStatus.UNAUTHORIZED, 'AUTHENTICATION_ERROR');\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message: string = 'Not authorized') {\n    super(message, HttpStatus.FORBIDDEN, 'AUTHORIZATION_ERROR');\n  }\n}\n\nexport class NotFoundError extends AppError {\n  constructor(resource: string = 'Resource') {\n    super(`${resource} not found`, HttpStatus.NOT_FOUND, 'NOT_FOUND_ERROR');\n  }\n}\n\nexport class EmailError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'EMAIL_ERROR', details);\n  }\n}\n\nexport class ConflictError extends AppError {\n  constructor(message: string) {\n    super(message, HttpStatus.CONFLICT, 'CONFLICT_ERROR');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Creation timestamp', example: '2025-01-01T00:00:00.000Z'})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Primary key (UUID)', example: '123e4567-e89b-12d3-a456-426614174000'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last update timestamp', example: '2025-01-01T00:00:00.000Z'})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  CreateDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport abstract class BaseEntity {\n  @ApiProperty({\n    description: 'Primary key (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ApiProperty({\n    description: 'Creation timestamp',\n    example: '2025-01-01T00:00:00.000Z',\n  })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Last update timestamp',\n    example: '2025-01-01T00:00:00.000Z',\n  })\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompoDocConfig.html":{"url":"interfaces/CompoDocConfig.html","title":"interface - CompoDocConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompoDocConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customFavicon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableConstructors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCoverage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDependencies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDomTree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFilePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableInternal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLifeCycleHooks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableMainGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableOverview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disablePrivate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProperties\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProtected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableRoutesGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSearch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSourceCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableStyleTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableTemplateTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideDarkModeToggle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideGenerator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includesName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minimal\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFavicon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customFavicon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableConstructors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableConstructors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCoverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCoverage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDependencies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDependencies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDomTree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDomTree:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFilePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFilePath:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableInternal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableInternal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLifeCycleHooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLifeCycleHooks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableMainGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableMainGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableOverview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableOverview:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disablePrivate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disablePrivate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProtected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProtected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRoutesGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableRoutesGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSearch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSourceCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSourceCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableStyleTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableStyleTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableTemplateTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableTemplateTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideDarkModeToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideDarkModeToggle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideGenerator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideGenerator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includesName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includesName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minimal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConflictError.html":{"url":"classes/ConflictError.html","title":"class - ConflictError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConflictError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errors/custom.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                details\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/errors/custom.errors.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class AppError extends Error {\n  constructor(\n    public message: string,\n    public statusCode: number,\n    public errorCode: string,\n    public details?: any,\n  ) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n// Specific error classes\nexport class DatabaseError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'DATABASE_ERROR', details);\n  }\n}\n\nexport class ValidationError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.BAD_REQUEST, 'VALIDATION_ERROR', details);\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message: string = 'Authentication failed') {\n    super(message, HttpStatus.UNAUTHORIZED, 'AUTHENTICATION_ERROR');\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message: string = 'Not authorized') {\n    super(message, HttpStatus.FORBIDDEN, 'AUTHORIZATION_ERROR');\n  }\n}\n\nexport class NotFoundError extends AppError {\n  constructor(resource: string = 'Resource') {\n    super(`${resource} not found`, HttpStatus.NOT_FOUND, 'NOT_FOUND_ERROR');\n  }\n}\n\nexport class EmailError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'EMAIL_ERROR', details);\n  }\n}\n\nexport class ConflictError extends AppError {\n  constructor(message: string) {\n    super(message, HttpStatus.CONFLICT, 'CONFLICT_ERROR');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                emailVerifiedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                    \n                                isEmailVerified\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User email address', example: 'user@example.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        emailVerifiedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User verified at which time', example: 'John'})@IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User first name', example: 'John'})@IsString()@MinLength(2)@Matches(/^[a-zA-Z]+$/, {message: 'First name must contain letters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User is active or not', example: 'John'})@IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        isEmailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User verified or not'})@IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@Matches(/^[a-zA-Z]+$/, {message: 'Last name must contain letters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User password', example: 'Password123', minLength: 8})@IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User phone number', example: '+1234567890'})@IsOptional()@IsPhoneNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: UserRole, description: 'User role', example: undefined})@IsOptional()@IsEnum(UserRole)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsEmail,\n  Matches,\n  MinLength,\n  IsStrongPassword,\n  IsOptional,\n  IsEnum,\n  IsPhoneNumber,\n  IsBoolean,\n} from 'class-validator';\nimport { UserRole } from '../entities/user.entity';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'User email address',\n    example: 'user@example.com',\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    description: 'User first name',\n    example: 'John',\n  })\n  @IsString()\n  @MinLength(2)\n  @Matches(/^[a-zA-Z]+$/, {\n    message: 'First name must contain letters',\n  })\n  firstName: string;\n\n  @IsString()\n  @MinLength(2)\n  @Matches(/^[a-zA-Z]+$/, {\n    message: 'Last name must contain letters',\n  })\n  lastName: string;\n\n  @ApiProperty({\n    description: 'User password',\n    example: 'Password123',\n    minLength: 8,\n  })\n  @IsStrongPassword({\n    minLength: 8,\n    minLowercase: 1,\n    minUppercase: 1,\n    minNumbers: 1,\n    minSymbols: 1,\n  })\n  password: string;\n\n  @ApiProperty({\n    enum: UserRole,\n    description: 'User role',\n    example: UserRole.USER,\n  })\n  @IsOptional()\n  @IsEnum(UserRole)\n  role?: UserRole;\n\n  @ApiProperty({\n    description: 'User phone number',\n    example: '+1234567890',\n  })\n  @IsOptional()\n  @IsPhoneNumber()\n  phoneNumber?: string;\n\n  @ApiProperty({\n    description: 'User verified or not',\n  })\n  @IsBoolean()\n  @IsOptional()\n  isEmailVerified: boolean;\n\n  @ApiProperty({\n    description: 'User verified at which time',\n    example: 'John',\n  })\n  @IsBoolean()\n  @IsOptional()\n  emailVerifiedAt: Date;\n\n  @ApiProperty({\n    description: 'User is active or not',\n    example: 'John',\n  })\n  @IsBoolean()\n  @IsOptional()\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserTable1758745851583.html":{"url":"classes/CreateUserTable1758745851583.html","title":"class - CreateUserTable1758745851583","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserTable1758745851583\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1758745851583-CreateUserTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateUserTable1758745851583'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1758745851583-CreateUserTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1758745851583-CreateUserTable.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1758745851583-CreateUserTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, Table } from 'typeorm';\n\nexport class CreateUserTable1758745851583 implements MigrationInterface {\n  name = 'CreateUserTable1758745851583';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createTable(\n      new Table({\n        name: 'users',\n        columns: [\n          {\n            name: 'id',\n            type: 'uuid',\n            isPrimary: true,\n            generationStrategy: 'uuid',\n            default: 'uuid_generate_v4()',\n          },\n          {\n            name: 'email',\n            type: 'varchar',\n            isUnique: true,\n            isNullable: false,\n          },\n          {\n            name: 'first_name',\n            type: 'varchar',\n            isNullable: false,\n          },\n          {\n            name: 'last_name',\n            type: 'varchar',\n            isNullable: false,\n          },\n          {\n            name: 'password',\n            type: 'varchar',\n            isNullable: false,\n          },\n          {\n            name: 'role',\n            type: 'enum',\n            enum: ['admin', 'user'],\n            default: \"'user'\",\n          },\n          {\n            name: 'is_active',\n            type: 'boolean',\n            default: true,\n          },\n          {\n            name: 'phone_number',\n            type: 'varchar',\n            isNullable: true,\n          },\n          {\n            name: 'created_at',\n            type: 'timestamp',\n            default: 'now()',\n          },\n\n          {\n            name: 'updated_at',\n            type: 'timestamp',\n            default: 'now()',\n          },\n        ],\n      }),\n      true,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropTable('users');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseError.html":{"url":"classes/DatabaseError.html","title":"class - DatabaseError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errors/custom.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                details\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: any)\n                    \n                \n                        \n                            \n                                Defined in src/errors/custom.errors.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class AppError extends Error {\n  constructor(\n    public message: string,\n    public statusCode: number,\n    public errorCode: string,\n    public details?: any,\n  ) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n// Specific error classes\nexport class DatabaseError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'DATABASE_ERROR', details);\n  }\n}\n\nexport class ValidationError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.BAD_REQUEST, 'VALIDATION_ERROR', details);\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message: string = 'Authentication failed') {\n    super(message, HttpStatus.UNAUTHORIZED, 'AUTHENTICATION_ERROR');\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message: string = 'Not authorized') {\n    super(message, HttpStatus.FORBIDDEN, 'AUTHORIZATION_ERROR');\n  }\n}\n\nexport class NotFoundError extends AppError {\n  constructor(resource: string = 'Resource') {\n    super(`${resource} not found`, HttpStatus.NOT_FOUND, 'NOT_FOUND_ERROR');\n  }\n}\n\nexport class EmailError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'EMAIL_ERROR', details);\n  }\n}\n\nexport class ConflictError extends AppError {\n  constructor(message: string) {\n    super(message, HttpStatus.CONFLICT, 'CONFLICT_ERROR');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseException.html":{"url":"classes/DatabaseException.html","title":"class - DatabaseException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/http-exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppHttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                detail\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/http-exception.filter.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        detail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AppHttpException\n\n                            \n                        \n                    \n                        \n                                Defined in         AppHttpException:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppHttpException\n\n                            \n                        \n                    \n                        \n                                Defined in         AppHttpException:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class AppHttpException extends HttpException {\n  constructor(\n    message: string,\n    status: HttpStatus,\n    public errorCode: string,\n    public detail?: any,\n  ) {\n    super(message, status);\n  }\n}\n\nexport class EmailException extends AppHttpException {\n  constructor(message: string = 'Email service error', details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'EMAIL_ERROR', details);\n  }\n}\n\nexport class DatabaseException extends AppHttpException {\n  constructor(message: string = 'Database error', details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'DATABASE_ERROR', details);\n  }\n}\n\nexport class AuthException extends AppHttpException {\n  constructor(message: string = 'Authentication error', details?: any) {\n    super(message, HttpStatus.UNAUTHORIZED, 'AUTH_ERROR', details);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailError.html":{"url":"classes/EmailError.html","title":"class - EmailError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errors/custom.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                details\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: any)\n                    \n                \n                        \n                            \n                                Defined in src/errors/custom.errors.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class AppError extends Error {\n  constructor(\n    public message: string,\n    public statusCode: number,\n    public errorCode: string,\n    public details?: any,\n  ) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n// Specific error classes\nexport class DatabaseError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'DATABASE_ERROR', details);\n  }\n}\n\nexport class ValidationError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.BAD_REQUEST, 'VALIDATION_ERROR', details);\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message: string = 'Authentication failed') {\n    super(message, HttpStatus.UNAUTHORIZED, 'AUTHENTICATION_ERROR');\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message: string = 'Not authorized') {\n    super(message, HttpStatus.FORBIDDEN, 'AUTHORIZATION_ERROR');\n  }\n}\n\nexport class NotFoundError extends AppError {\n  constructor(resource: string = 'Resource') {\n    super(`${resource} not found`, HttpStatus.NOT_FOUND, 'NOT_FOUND_ERROR');\n  }\n}\n\nexport class EmailError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'EMAIL_ERROR', details);\n  }\n}\n\nexport class ConflictError extends AppError {\n  constructor(message: string) {\n    super(message, HttpStatus.CONFLICT, 'CONFLICT_ERROR');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailException.html":{"url":"classes/EmailException.html","title":"class - EmailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/http-exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppHttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                detail\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: any)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/http-exception.filter.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        detail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AppHttpException\n\n                            \n                        \n                    \n                        \n                                Defined in         AppHttpException:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppHttpException\n\n                            \n                        \n                    \n                        \n                                Defined in         AppHttpException:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class AppHttpException extends HttpException {\n  constructor(\n    message: string,\n    status: HttpStatus,\n    public errorCode: string,\n    public detail?: any,\n  ) {\n    super(message, status);\n  }\n}\n\nexport class EmailException extends AppHttpException {\n  constructor(message: string = 'Email service error', details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'EMAIL_ERROR', details);\n  }\n}\n\nexport class DatabaseException extends AppHttpException {\n  constructor(message: string = 'Database error', details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'DATABASE_ERROR', details);\n  }\n}\n\nexport class AuthException extends AppHttpException {\n  constructor(message: string = 'Authentication error', details?: any) {\n    super(message, HttpStatus.UNAUTHORIZED, 'AUTH_ERROR', details);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errors/error-handler.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isNodemailerError\n                            \n                            \n                                transformError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isNodemailerError\n                        \n                    \n                \n            \n            \n                \n                        \n                    isNodemailerError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/errors/error-handler.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformError\n                        \n                    \n                \n            \n            \n                \ntransformError(error: any, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/errors/error-handler.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     never\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { QueryFailedError } from 'typeorm';\nimport {\n  AppError,\n  DatabaseError,\n  EmailError,\n  AuthenticationError,\n  ConflictError,\n  ValidationError,\n} from './custom.errors';\n\n@Injectable()\nexport class ErrorHandlerService {\n  // Only used to transform unknown errors to AppError\n  transformError(error: any, context?: string): never {\n    if (error instanceof AppError) {\n      throw error; // Already an AppError, just re-throw\n    }\n\n    // Handle TypeORM errors\n    if (error instanceof QueryFailedError) {\n      const pgError = error as any;\n\n      switch (pgError.code) {\n        case '23505':\n          throw new ConflictError('Resource already exists');\n        case '23503':\n          throw new DatabaseError('Referenced resource not found');\n        case '23502':\n          throw new ValidationError('Required field is missing');\n        default:\n          throw new DatabaseError('Database operation failed', {\n            code: pgError.code,\n            context,\n          });\n      }\n    }\n\n    // Handle nodemailer errors\n    if (this.isNodemailerError(error)) {\n      if (error.code === 'EAUTH') {\n        throw new EmailError('Email authentication failed', {\n          service: error.service,\n          context,\n        });\n      }\n      throw new EmailError('Email delivery failed', {\n        code: error.code,\n        context,\n      });\n    }\n\n    // Handle JWT errors\n    if (error.name === 'TokenExpiredError') {\n      throw new AuthenticationError('Token has expired');\n    }\n\n    if (error.name === 'JsonWebTokenError') {\n      throw new AuthenticationError('Invalid token');\n    }\n\n    // Default fallback\n    throw new AppError(\n      error.message || 'Internal server error',\n      500,\n      'INTERNAL_ERROR',\n      { context },\n    );\n  }\n\n  private isNodemailerError(error: any): boolean {\n    return error && error.code && error.command;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorsModule.html":{"url":"modules/ErrorsModule.html","title":"module - ErrorsModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    ErrorsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorsModule\n\n\n\ncluster_ErrorsModule_exports\n\n\n\ncluster_ErrorsModule_providers\n\n\n\n\nErrorHandlerService \n\nErrorHandlerService \n\n\n\nErrorsModule\n\nErrorsModule\n\nErrorHandlerService  -->\n\nErrorsModule->ErrorHandlerService \n\n\n\n\n\nErrorHandlerService\n\nErrorHandlerService\n\nErrorsModule -->\n\nErrorHandlerService->ErrorsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/errors/errors.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ErrorHandlerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorHandlerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Module({\n  providers: [ErrorHandlerService],\n  exports: [ErrorHandlerService],\n})\nexport class ErrorsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalExceptionFilter.html":{"url":"classes/GlobalExceptionFilter.html","title":"class - GlobalExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/global-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                    Private\n                                handleDatabaseError\n                            \n                            \n                                    Private\n                                handleNodemailerError\n                            \n                            \n                                    Private\n                                isNodemailerError\n                            \n                            \n                                    Private\n                                logError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/global-exception.filter.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleDatabaseError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleDatabaseError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/global-exception.filter.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleNodemailerError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleNodemailerError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/global-exception.filter.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isNodemailerError\n                        \n                    \n                \n            \n            \n                \n                        \n                    isNodemailerError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/global-exception.filter.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logError\n                        \n                    \n                \n            \n            \n                \n                        \n                    logError(request: Request, exception)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/global-exception.filter.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { QueryFailedError } from 'typeorm';\nimport { JsonWebTokenError, TokenExpiredError } from 'jsonwebtoken';\nimport { AppError } from '../errors/custom.errors';\n\n@Catch()\nexport class GlobalExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    let status: number;\n    let message: string;\n    let errorCode: string;\n    let details: any;\n\n    // Handle our custom AppError\n    if (exception instanceof AppError) {\n      status = exception.statusCode;\n      message = exception.message;\n      errorCode = exception.errorCode;\n      details = exception.details;\n    }\n    // Handle TypeORM errors\n    else if (exception instanceof QueryFailedError) {\n      const error = exception as any;\n      const result = this.handleDatabaseError(error);\n      status = result.status;\n      message = result.message;\n      errorCode = result.errorCode;\n      details = result.details;\n    }\n    // Handle JWT errors\n    else if (exception instanceof TokenExpiredError) {\n      status = 401;\n      message = 'Token has expired';\n      errorCode = 'TOKEN_EXPIRED';\n    } else if (exception instanceof JsonWebTokenError) {\n      status = 401;\n      message = 'Invalid token';\n      errorCode = 'INVALID_TOKEN';\n    }\n    // Handle NestJS HTTP exceptions\n    else if (exception instanceof Error && 'getStatus' in exception) {\n      const httpException = exception as any;\n      status = httpException.getStatus();\n      message = httpException.message;\n      errorCode = 'HTTP_ERROR';\n\n      // Handle class-validator errors\n      if (httpException.getResponse) {\n        const response = httpException.getResponse();\n        if (typeof response === 'object' && 'message' in response) {\n          message = Array.isArray(response.message)\n            ? response.message[0]\n            : response.message;\n          details = response.message;\n        }\n      }\n    }\n    // Handle nodemailer errors\n    else if (this.isNodemailerError(exception)) {\n      const result = this.handleNodemailerError(exception);\n      status = result.status;\n      message = result.message;\n      errorCode = result.errorCode;\n      details = result.details;\n    }\n    // Handle all other errors\n    else {\n      status = HttpStatus.INTERNAL_SERVER_ERROR;\n      message = 'Internal server error';\n      errorCode = 'INTERNAL_ERROR';\n    }\n\n    // Log the error\n    this.logError(request, exception);\n\n    response.status(status).json({\n      success: false,\n      error: {\n        code: errorCode,\n        message: message,\n        details: details,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n      },\n    });\n  }\n\n  private handleDatabaseError(error: any): {\n    status: number;\n    message: string;\n    errorCode: string;\n    details?: any;\n  } {\n    switch (error.code) {\n      case '23505': // Unique violation\n        return {\n          status: 409,\n          message: 'Resource already exists',\n          errorCode: 'UNIQUE_VIOLATION',\n          details: { constraint: error.constraint },\n        };\n      case '23503': // Foreign key violation\n        return {\n          status: 400,\n          message: 'Referenced resource not found',\n          errorCode: 'FOREIGN_KEY_VIOLATION',\n        };\n      case '23502': // Not null violation\n        return {\n          status: 400,\n          message: 'Required field is missing',\n          errorCode: 'NOT_NULL_VIOLATION',\n        };\n      case '22P02': // Invalid text representation\n        return {\n          status: 400,\n          message: 'Invalid data format',\n          errorCode: 'INVALID_INPUT',\n        };\n      default:\n        return {\n          status: 500,\n          message: 'Database operation failed',\n          errorCode: 'DATABASE_ERROR',\n          details: { code: error.code },\n        };\n    }\n  }\n\n  private handleNodemailerError(error: any): {\n    status: number;\n    message: string;\n    errorCode: string;\n    details?: any;\n  } {\n    switch (error.code) {\n      case 'EAUTH':\n        return {\n          status: 500,\n          message: 'Email authentication failed',\n          errorCode: 'EMAIL_AUTH_ERROR',\n          details: { service: error.service },\n        };\n      case 'EENVELOPE':\n        return {\n          status: 400,\n          message: 'Invalid email parameters',\n          errorCode: 'EMAIL_VALIDATION_ERROR',\n        };\n      case 'ECONNECTION':\n        return {\n          status: 500,\n          message: 'Email service connection failed',\n          errorCode: 'EMAIL_CONNECTION_ERROR',\n        };\n      default:\n        return {\n          status: 500,\n          message: 'Email delivery failed',\n          errorCode: 'EMAIL_ERROR',\n          details: { code: error.code },\n        };\n    }\n  }\n\n  private isNodemailerError(error: any): boolean {\n    return error && error.code && error.command;\n  }\n\n  private logError(request: Request, exception: unknown): void {\n    console.error({\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      method: request.method,\n      error:\n        exception instanceof Error\n          ? {\n              name: exception.name,\n              message: exception.message,\n              stack: exception.stack,\n            }\n          : exception,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HbsRenderService.html":{"url":"injectables/HbsRenderService.html","title":"injectable - HbsRenderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HbsRenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/hbs-render.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handlebarsInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMockData\n                            \n                            \n                                    Private\n                                initializeHandlebars\n                            \n                            \n                                    Private\n                                registerHelpers\n                            \n                            \n                                renderTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMockData\n                        \n                    \n                \n            \n            \n                \ngetMockData()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeHandlebars\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeHandlebars()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHelpers\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHelpers()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTemplate\n                        \n                    \n                \n            \n            \n                \nrenderTemplate(templateContent: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/hbs-render.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handlebarsInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/hbs-render.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const Handlebars: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HbsRenderService {\n  private handlebarsInstance: any;\n\n  constructor() {\n    this.initializeHandlebars();\n  }\n\n  private initializeHandlebars() {\n    // Create a new Handlebars instance for the playground\n    this.handlebarsInstance = Handlebars.create();\n\n    // Register common helpers used in Compodoc templates\n    this.registerHelpers();\n  }\n\n  private registerHelpers() {\n    // Register the 'compare' helper\n    this.handlebarsInstance.registerHelper('compare', (left: any, operator: string, right: any, options: any) => {\n      let result;\n      switch (operator) {\n        case '===':\n          result = left === right;\n          break;\n        case '!==':\n          result = left !== right;\n          break;\n        case '':\n          result = left > right;\n          break;\n        case '=':\n          result = left >= right;\n          break;\n        default:\n          result = false;\n      }\n      return result ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'unless' helper\n    this.handlebarsInstance.registerHelper('unless', (conditional: any, options: any) => {\n      return !conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'each' helper with index\n    this.handlebarsInstance.registerHelper('each', (context: any, options: any) => {\n      let ret = '';\n      for (let i = 0; i  {\n      return conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'relativeURL' helper\n    this.handlebarsInstance.registerHelper('relativeURL', (depth: number, page?: string) => {\n      let url = '';\n      for (let i = 0; i  {\n      // Simple translation mapping for preview\n      const translations: { [key: string]: string } = {\n        'info': 'Information',\n        'source': 'Source',\n        'example': 'Example',\n        'template': 'Template',\n        'styles': 'Styles',\n        'component': 'Component',\n        'module': 'Module',\n        'overview': 'Overview',\n        'components': 'Components',\n        'modules': 'Modules',\n        'file': 'File',\n        'description': 'Description',\n        'selector': 'Selector',\n        'properties': 'Properties',\n        'methods': 'Methods',\n        'inputs': 'Inputs',\n        'outputs': 'Outputs'\n      };\n      return translations[key] || key;\n    });\n\n    // Register the 'orLength' helper\n    this.handlebarsInstance.registerHelper('orLength', (...args: any[]) => {\n      const options = args[args.length - 1];\n      const values = args.slice(0, -1);\n\n      for (const value of values) {\n        if (value && value.length && value.length > 0) {\n          return options.fn(this);\n        }\n      }\n      return options.inverse(this);\n    });\n\n    // Register the 'isTabEnabled' helper\n    this.handlebarsInstance.registerHelper('isTabEnabled', (navTabs: any[], tabId: string, options: any) => {\n      const tab = navTabs && navTabs.find((t: any) => t.id === tabId);\n      return tab ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'isInitialTab' helper\n    this.handlebarsInstance.registerHelper('isInitialTab', (navTabs: any[], tabId: string, options: any) => {\n      const isInitial = navTabs && navTabs.length > 0 && navTabs[0].id === tabId;\n      return isInitial ? options.fn(this) : options.inverse(this);\n    });\n  }\n\n  renderTemplate(templateContent: string, data: any): string {\n    try {\n      // Create a complete HTML document for preview\n      const template = this.handlebarsInstance.compile(templateContent);\n      const rendered = template({ data });\n\n      // Wrap in a basic HTML structure for preview\n      return `\n        \n        \n        \n          \n          Template Preview\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .preview-wrapper { border: 1px solid #ddd; padding: 20px; }\n            .preview-notice { background: #f0f8ff; padding: 10px; margin-bottom: 20px; border-left: 4px solid #007bff; }\n          \n        \n        \n          \n            Template Preview: This is a live preview of your template with mock data.\n          \n          \n            ${rendered}\n          \n        \n        \n      `;\n    } catch (error) {\n      return `\n        \n        \n        \n          \n          Template Preview - Error\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .error { color: red; background: #fff5f5; padding: 20px; border: 1px solid #red; }\n          \n        \n        \n          \n            Template Error\n            Error: ${error.message}\n            Please check your template syntax and try again.\n          \n        \n        \n      `;\n    }\n  }\n\n  getMockData(): any {\n    return {\n      documentationMainName: 'Sample Documentation',\n      depth: 0,\n      context: 'component',\n      components: [\n        {\n          name: 'SampleComponent',\n          selector: 'app-sample',\n          file: 'src/app/sample/sample.component.ts',\n          description: 'A sample component for demonstration',\n          properties: [\n            { name: 'title', type: 'string', description: 'The component title' },\n            { name: 'isVisible', type: 'boolean', description: 'Whether the component is visible' }\n          ],\n          methods: [\n            { name: 'ngOnInit', description: 'Lifecycle hook', signature: 'ngOnInit(): void' },\n            { name: 'onClick', description: 'Handle click events', signature: 'onClick(event: MouseEvent): void' }\n          ]\n        }\n      ],\n      navTabs: [\n        { id: 'info', label: 'Info', href: '#info' },\n        { id: 'source', label: 'Source', href: '#source' },\n        { id: 'example', label: 'Example', href: '#example' }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthService.html":{"url":"injectables/JwtAuthService.html","title":"injectable - JwtAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTokens\n                            \n                            \n                                    Private\n                                parseExpiresIn\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: NestJwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    NestJwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(payload: JwtPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseExpiresIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseExpiresIn(expiresIn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expiresIn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService as NestJwtService } from '@nestjs/jwt';\n\nexport interface JwtPayload {\n  sub: string;\n  email: string;\n  role: string;\n}\n\nexport interface Tokens {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: number;\n}\n\n@Injectable()\nexport class JwtAuthService {\n  constructor(\n    private readonly jwtService: NestJwtService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async generateTokens(payload: JwtPayload): Promise {\n    try {\n      const accessToken = await this.jwtService.signAsync(payload);\n      const refreshToken = await this.jwtService.signAsync(payload, {\n        expiresIn: this.configService.get(\n          'JWT_REFRESH_EXPIRES_IN',\n          '7d',\n        ),\n      });\n\n      return {\n        accessToken,\n        refreshToken,\n        expiresIn: this.parseExpiresIn(\n          this.configService.get('JWT_EXPIRES_IN', '15md'),\n        ),\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async verifyToken(token: string): Promise {\n    try {\n      return await this.jwtService.verifyAsync(token);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async refreshToken(refreshToken: string): Promise {\n    try {\n      const payload = await this.verifyToken(refreshToken);\n      return this.generateTokens(payload);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private parseExpiresIn(expiresIn: string): number {\n    const unit = expiresIn.slice(-1);\n    const value = parseInt(expiresIn.slice(0, -1));\n\n    switch (unit) {\n      case 's':\n        return value * 1000;\n      case 'm':\n        return value * 60 * 1000;\n      case 'h':\n        return value * 60 * 60 * 1000;\n      case 'd':\n        return value * 24 * 60 * 60 * 1000;\n      default:\n        return 15 * 60 * 1000;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService as NestJwtService } from '@nestjs/jwt';\n\nexport interface JwtPayload {\n  sub: string;\n  email: string;\n  role: string;\n}\n\nexport interface Tokens {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: number;\n}\n\n@Injectable()\nexport class JwtAuthService {\n  constructor(\n    private readonly jwtService: NestJwtService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async generateTokens(payload: JwtPayload): Promise {\n    try {\n      const accessToken = await this.jwtService.signAsync(payload);\n      const refreshToken = await this.jwtService.signAsync(payload, {\n        expiresIn: this.configService.get(\n          'JWT_REFRESH_EXPIRES_IN',\n          '7d',\n        ),\n      });\n\n      return {\n        accessToken,\n        refreshToken,\n        expiresIn: this.parseExpiresIn(\n          this.configService.get('JWT_EXPIRES_IN', '15md'),\n        ),\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async verifyToken(token: string): Promise {\n    try {\n      return await this.jwtService.verifyAsync(token);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async refreshToken(refreshToken: string): Promise {\n    try {\n      const payload = await this.verifyToken(refreshToken);\n      return this.generateTokens(payload);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private parseExpiresIn(expiresIn: string): number {\n    const unit = expiresIn.slice(-1);\n    const value = parseInt(expiresIn.slice(0, -1));\n\n    switch (unit) {\n      case 's':\n        return value * 1000;\n      case 'm':\n        return value * 60 * 1000;\n      case 'h':\n        return value * 60 * 60 * 1000;\n      case 'd':\n        return value * 24 * 60 * 60 * 1000;\n      default:\n        return 15 * 60 * 1000;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@example.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Password123'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @ApiProperty({ example: 'user@example.com' })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ example: 'Password123' })\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mailer/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sentOtpEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mailer/mail.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sentOtpEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sentOtpEmail(email: string, otp: string, userName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mailer/mail.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private readonly mailerService: MailerService,\n    private readonly configService: ConfigService,\n  ) {}\n  async sentOtpEmail(\n    email: string,\n    otp: string,\n    userName: string,\n  ): Promise {\n    try {\n      await this.mailerService.sendMail({\n        to: email,\n        subject: 'Verify Your Email Address',\n        template: 'templates/email-verification',\n        context: {\n          userName,\n          otp,\n          expiryMinutes: this.configService.get('OTP_EXPIRY_MINUTES', 10),\n        },\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MyMailerModule.html":{"url":"modules/MyMailerModule.html","title":"module - MyMailerModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    MyMailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MyMailerModule\n\n\n\ncluster_MyMailerModule_exports\n\n\n\ncluster_MyMailerModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMyMailerModule\n\nMyMailerModule\n\nMailService  -->\n\nMyMailerModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMyMailerModule -->\n\nMailService->MyMailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mailer/mailer.modules.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MailerModule } from '@nestjs-modules/mailer';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { EjsAdapter } from '@nestjs-modules/mailer/dist/adapters/ejs.adapter';\nimport { MailService } from './mail.service';\n\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => {\n        const templateDir = join(__dirname, '..', 'mailer');\n\n        return {\n          transport: {\n            host: configService.get('EMAIL_HOST'),\n            port: configService.get('EMAIL_PORT'),\n            secure: false,\n            auth: {\n              user: configService.get('EMAIL_USER'),\n              pass: configService.get('EMAIL_PASS'),\n            },\n          },\n          defaults: { from: `No Reply ` },\n          template: {\n            dir: templateDir,\n            adapter: new EjsAdapter(),\n            options: { strict: false },\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MyMailerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundError.html":{"url":"classes/NotFoundError.html","title":"class - NotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errors/custom.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                details\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resource: string)\n                    \n                \n                        \n                            \n                                Defined in src/errors/custom.errors.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class AppError extends Error {\n  constructor(\n    public message: string,\n    public statusCode: number,\n    public errorCode: string,\n    public details?: any,\n  ) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n// Specific error classes\nexport class DatabaseError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'DATABASE_ERROR', details);\n  }\n}\n\nexport class ValidationError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.BAD_REQUEST, 'VALIDATION_ERROR', details);\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message: string = 'Authentication failed') {\n    super(message, HttpStatus.UNAUTHORIZED, 'AUTHENTICATION_ERROR');\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message: string = 'Not authorized') {\n    super(message, HttpStatus.FORBIDDEN, 'AUTHORIZATION_ERROR');\n  }\n}\n\nexport class NotFoundError extends AppError {\n  constructor(resource: string = 'Resource') {\n    super(`${resource} not found`, HttpStatus.NOT_FOUND, 'NOT_FOUND_ERROR');\n  }\n}\n\nexport class EmailError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'EMAIL_ERROR', details);\n  }\n}\n\nexport class ConflictError extends AppError {\n  constructor(message: string) {\n    super(message, HttpStatus.CONFLICT, 'CONFLICT_ERROR');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Otp.html":{"url":"entities/Otp.html","title":"entity - Otp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Entities\n  Otp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/otp.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                expiresAt\n                            \n                            \n                                    \n                                    \n                                isUsed\n                            \n                            \n                                    \n                                    \n                                otp\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                            \n                                    \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Email address'})@Column({name: 'email'})@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/otp.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'OTP expiration time'})@Column({name: 'expires_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/otp.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isUsed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Wheher OTP has been used', default: false})@Column({default: false, name: 'is_used', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/otp.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '6 digit otp code'})@Column({name: 'otp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/otp.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.otps)@JoinColumn({name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/otp.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User ID'})@Column({name: 'user_id', type: 'uuid'})@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/otp.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { BaseEntity } from '../../common/entities/base.entity';\nimport { User } from '../../users/entities/user.entity';\nimport { Column, Entity, Index, JoinColumn, ManyToOne } from 'typeorm';\n\n@Entity('otps')\nexport class Otp extends BaseEntity {\n  @ApiProperty({ description: 'User ID' })\n  @Column({ name: 'user_id', type: 'uuid' })\n  @Index()\n  userId: string;\n\n  @ApiProperty({ description: 'Email address' })\n  @Column({ name: 'email' })\n  @Index()\n  email: string;\n\n  @ApiProperty({ description: '6 digit otp code' })\n  @Column({ name: 'otp' })\n  otp: string;\n\n  @ApiProperty({ description: 'OTP expiration time' })\n  @Column({ name: 'expires_at', type: 'timestamp' })\n  expiresAt: Date;\n\n  @ApiProperty({ description: 'Wheher OTP has been used', default: false })\n  @Column({ default: false, name: 'is_used', type: 'boolean' })\n  isUsed: boolean;\n\n  @ManyToOne(() => User, (user) => user.otps)\n  @JoinColumn({ name: 'user_id' })\n  user: User;\n\n  constructor(partial: Partial) {\n    super();\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtpRepository.html":{"url":"injectables/OtpRepository.html","title":"injectable - OtpRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  OtpRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/otp.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cleanupExpiredOtps\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                saveOtp\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(otpRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/otp.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        otpRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cleanupExpiredOtps\n                        \n                    \n                \n            \n            \n                \n                        \n                    cleanupExpiredOtps()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/otp.repository.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(email: string, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/otp.repository.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveOtp(userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/otp.repository.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/otp.repository.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Otp } from './entities/otp.entity';\nimport { Repository } from 'typeorm';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class OtpRepository {\n  constructor(\n    @InjectRepository(Otp) private readonly otpRepository: Repository,\n  ) {}\n\n  async saveOtp(userData: Partial): Promise {\n    const otpData = this.otpRepository.create({\n      userId: userData.userId,\n      email: userData.email,\n      otp: userData.otp,\n      expiresAt: userData.expiresAt,\n      isUsed: false,\n    });\n\n    return this.otpRepository.save(otpData);\n  }\n  async findOne(email: string, otp: string): Promise {\n    return this.otpRepository.findOne({\n      where: { email, otp, isUsed: false },\n      order: { createdAt: 'DESC' },\n    });\n  }\n\n  async update({ id, isUsed }): Promise {\n    return this.otpRepository.update(id, { isUsed });\n  }\n\n  async cleanupExpiredOtps(): Promise {\n    await this.otpRepository\n      .createQueryBuilder()\n      .delete()\n      .where('expiresAt\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtpService.html":{"url":"injectables/OtpService.html","title":"injectable - OtpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  OtpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/otp.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cleanupExpiredOtps\n                            \n                            \n                                    Async\n                                generateOtp\n                            \n                            \n                                    Async\n                                verifyOtp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(otpRepository: OtpRepository, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/otp.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        otpRepository\n                                                  \n                                                        \n                                                                        OtpRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cleanupExpiredOtps\n                        \n                    \n                \n            \n            \n                \n                        \n                    cleanupExpiredOtps()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/otp.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateOtp(userId: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/otp.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyOtp(email: string, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/otp.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { OtpRepository } from './otp.repository';\nimport { ConfigService } from '@nestjs/config';\nimport otpGenerator from 'otp-generator';\n\n@Injectable()\nexport class OtpService {\n  constructor(\n    private readonly otpRepository: OtpRepository,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async generateOtp(\n    userId: string,\n    email: string,\n  ): Promise {\n    const otp = otpGenerator.generate(6, {\n      digits: true,\n      lowerCaseAlphabets: false,\n      upperCaseAlphabets: false,\n      specialChars: false,\n    });\n\n    const expiryMinutes = this.configService.get(\n      'OTP_EXPIRY_MINUTE',\n      10,\n    );\n\n    const expiresAt = new Date();\n\n    expiresAt.setMinutes(expiresAt.getMinutes() + expiryMinutes);\n\n    const userData = {\n      userId,\n      email,\n      otp,\n      expiresAt,\n      isUsed: false,\n    };\n    try {\n      await this.otpRepository.saveOtp(userData);\n\n      return otp;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async verifyOtp(email: string, otp: string): Promise {\n    try {\n      const otpRecord = await this.otpRepository.findOne(email, otp);\n\n      if (!otpRecord) {\n        return false;\n      }\n\n      if (new Date() > otpRecord.expiresAt) {\n        return false;\n      }\n\n      await this.otpRepository.update({ id: otpRecord.id, isUsed: true });\n\n      return true;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async cleanupExpiredOtps(): Promise {\n    await this.otpRepository.cleanupExpiredOtps();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDto.html":{"url":"classes/PaginatedResponseDto.html","title":"class - PaginatedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pagination.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                hasNext\n                            \n                            \n                                    \n                                hasPrevious\n                            \n                            \n                                    \n                                limit\n                            \n                            \n                                    \n                                page\n                            \n                            \n                                    \n                                total\n                            \n                            \n                                    \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], total: number, paginationDto: PaginationDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dto/pagination.dto.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationDto\n                                                  \n                                                        \n                                                                        PaginationDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of item', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hasNext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Has next page?', example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hasPrevious\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Has previous page?', example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Number of items per page', example: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current page number', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Total number of items', example: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Total number of pages', example: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination.dto.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsOptional, IsPositive, Min } from 'class-validator';\n\nexport class PaginationDto {\n  @ApiPropertyOptional({\n    description: 'Page number(starting from 1)',\n    example: 1,\n    default: 1,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsPositive()\n  @Min(1)\n  page?: number = 1;\n\n  @ApiPropertyOptional({\n    description: 'Number of item per page',\n    example: 10,\n    default: 10,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsPositive()\n  @Min(1)\n  limit?: number = 10;\n\n  get skip(): number {\n    const page = this.page ?? 1;\n    const limit = this.limit ?? 10;\n    return (page - 1) * limit;\n  }\n}\n\nexport class PaginatedResponseDto {\n  @ApiProperty({\n    description: 'Array of item',\n    type: [Object],\n  })\n  data: T[];\n\n  @ApiProperty({\n    description: 'Current page number',\n    example: 1,\n  })\n  page: number;\n\n  @ApiProperty({\n    description: 'Number of items per page',\n    example: 10,\n  })\n  limit: number;\n\n  @ApiProperty({\n    description: 'Total number of items',\n    example: 100,\n  })\n  total: number;\n\n  @ApiProperty({\n    description: 'Total number of pages',\n    example: 10,\n  })\n  totalPages: number;\n\n  @ApiProperty({\n    description: 'Has next page?',\n    example: true,\n  })\n  hasNext: boolean;\n\n  @ApiProperty({\n    description: 'Has previous page?',\n    example: false,\n  })\n  hasPrevious: boolean;\n\n  constructor(data: T[], total: number, paginationDto: PaginationDto) {\n    this.data = data;\n    this.page = paginationDto.page ?? 1;\n    this.limit = paginationDto.limit ?? 10;\n    this.total = total;\n    this.totalPages = Math.ceil(total / (paginationDto.limit ?? 10));\n    this.hasNext = this.page  1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pagination.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Number of item per page', example: 10, default: 10})@IsOptional()@Type(undefined)@IsPositive()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Page number(starting from 1)', example: 1, default: 1})@IsOptional()@Type(undefined)@IsPositive()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dto/pagination.dto.ts:28\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsOptional, IsPositive, Min } from 'class-validator';\n\nexport class PaginationDto {\n  @ApiPropertyOptional({\n    description: 'Page number(starting from 1)',\n    example: 1,\n    default: 1,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsPositive()\n  @Min(1)\n  page?: number = 1;\n\n  @ApiPropertyOptional({\n    description: 'Number of item per page',\n    example: 10,\n    default: 10,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsPositive()\n  @Min(1)\n  limit?: number = 10;\n\n  get skip(): number {\n    const page = this.page ?? 1;\n    const limit = this.limit ?? 10;\n    return (page - 1) * limit;\n  }\n}\n\nexport class PaginatedResponseDto {\n  @ApiProperty({\n    description: 'Array of item',\n    type: [Object],\n  })\n  data: T[];\n\n  @ApiProperty({\n    description: 'Current page number',\n    example: 1,\n  })\n  page: number;\n\n  @ApiProperty({\n    description: 'Number of items per page',\n    example: 10,\n  })\n  limit: number;\n\n  @ApiProperty({\n    description: 'Total number of items',\n    example: 100,\n  })\n  total: number;\n\n  @ApiProperty({\n    description: 'Total number of pages',\n    example: 10,\n  })\n  totalPages: number;\n\n  @ApiProperty({\n    description: 'Has next page?',\n    example: true,\n  })\n  hasNext: boolean;\n\n  @ApiProperty({\n    description: 'Has previous page?',\n    example: false,\n  })\n  hasPrevious: boolean;\n\n  constructor(data: T[], total: number, paginationDto: PaginationDto) {\n    this.data = data;\n    this.page = paginationDto.page ?? 1;\n    this.limit = paginationDto.limit ?? 10;\n    this.total = total;\n    this.totalPages = Math.ceil(total / (paginationDto.limit ?? 10));\n    this.hasNext = this.page  1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessHandlers.html":{"url":"classes/ProcessHandlers.html","title":"class - ProcessHandlers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessHandlers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/process-handlers.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ProcessHandlers.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/process-handlers.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        setup\n                        \n                    \n                \n            \n            \n                \n                        \n                    setup(dataSource: DataSource)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/process-handlers.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataSource\n                                            \n                                                        DataSource\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { DataSource } from 'typeorm';\n\nexport class ProcessHandlers {\n  private static readonly logger = new Logger(ProcessHandlers.name);\n\n  static setup(dataSource: DataSource) {\n    process.on('uncaughtException', (error: Error) => {\n      this.logger.error(`Uncaught Exception: ${error.message}`, error.stack);\n    });\n\n    process.on('unhandledRejection', (reason: any, promise: Promise) => {\n      this.logger.error(\n        `Unhandled Rejection at: ${promise}, reason: ${reason}`,\n      );\n    });\n\n    const gracefulShutdown = async (signal: string) => {\n      this.logger.log(`Received ${signal}. Starting graceful shutdown...`);\n\n      try {\n        if (dataSource.isInitialized) {\n          await dataSource.destroy();\n          this.logger.log('Database connection closed.');\n        }\n\n        this.logger.log('Graceful shutdown completed.');\n        process.exit(0);\n      } catch (error) {\n        this.logger.error('Error during graceful shutdown:', error);\n        process.exit(1);\n      }\n    };\n\n    process.on('SIGINT', () => gracefulShutdown('SIGINT'));\n    process.on('SIGTERM', () => gracefulShutdown('SIGTERM'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResendOtpDto.html":{"url":"classes/ResendOtpDto.html","title":"class - ResendOtpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResendOtpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/resend-otp.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@example.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/resend-otp.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail } from 'class-validator';\n\nexport class ResendOtpDto {\n  @ApiProperty({ example: 'user@example.com' })\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignupDto.html":{"url":"classes/SignupDto.html","title":"class - SignupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signup.dts.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@example.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dts.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John'})@IsString()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dts.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe'})@IsString()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dts.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Password123!'})@IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dts.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+1234567890', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dts.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: UserRole, example: undefined, required: false})@IsOptional()@IsEnum(UserRole)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dts.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsEnum,\n  IsOptional,\n  IsString,\n  IsStrongPassword,\n  MinLength,\n} from 'class-validator';\nimport { UserRole } from '../../users/entities/user.entity';\n\nexport class SignupDto {\n  @ApiProperty({ example: 'user@example.com' })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ example: 'John' })\n  @IsString()\n  @MinLength(2)\n  firstName: string;\n\n  @ApiProperty({ example: 'Doe' })\n  @IsString()\n  @MinLength(2)\n  lastName: string;\n\n  @ApiProperty({ example: 'Password123!' })\n  @IsStrongPassword({\n    minLength: 8,\n    minLowercase: 1,\n    minUppercase: 1,\n    minNumbers: 1,\n    minSymbols: 1,\n  })\n  password: string;\n\n  @ApiProperty({ enum: UserRole, example: UserRole.USER, required: false })\n  @IsOptional()\n  @IsEnum(UserRole)\n  role?: UserRole;\n\n  @ApiProperty({ example: '+1234567890', required: false })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"template\" | \"partial\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"template\" | \"partial\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateEditorService.html":{"url":"injectables/TemplateEditorService.html","title":"injectable - TemplateEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/template-editor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                onChangeCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                getLanguageFromFileType\n                            \n                            \n                                initializeEditor\n                            \n                            \n                                    Private\n                                registerHandlebarsLanguage\n                            \n                            \n                                setEditorContent\n                            \n                            \n                                setOnChangeCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLanguageFromFileType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageFromFileType(fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeEditor\n                        \n                    \n                \n            \n            \n                \ninitializeEditor(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHandlebarsLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHandlebarsLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEditorContent\n                        \n                    \n                \n            \n            \n                \nsetEditorContent(content: string, fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOnChangeCallback\n                        \n                    \n                \n            \n            \n                \nsetOnChangeCallback(callback: (value: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/template-editor.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onChangeCallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in documentation/template-playground/template-editor.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const monaco: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemplateEditorService {\n  private editor: any;\n  private onChangeCallback: ((value: string) => void) | null = null;\n\n  initializeEditor(container: HTMLElement) {\n    // Initialize Monaco Editor\n    this.editor = monaco.editor.create(container, {\n      value: '',\n      language: 'html',\n      theme: 'vs-dark',\n      automaticLayout: true,\n      minimap: {\n        enabled: true\n      },\n      scrollBeyondLastLine: false,\n      fontSize: 14,\n      wordWrap: 'on',\n      lineNumbers: 'on',\n      roundedSelection: false,\n      scrollbar: {\n        horizontal: 'visible',\n        vertical: 'visible'\n      },\n      overviewRulerLanes: 2,\n      quickSuggestions: {\n        other: true,\n        comments: true,\n        strings: true\n      },\n      parameterHints: {\n        enabled: true\n      },\n      autoClosingBrackets: 'always',\n      autoClosingQuotes: 'always',\n      suggestOnTriggerCharacters: true,\n      acceptSuggestionOnEnter: 'on',\n      tabCompletion: 'on',\n      wordBasedSuggestions: false\n    });\n\n    // Set up change listener\n    this.editor.onDidChangeModelContent(() => {\n      if (this.onChangeCallback) {\n        this.onChangeCallback(this.editor.getValue());\n      }\n    });\n\n    // Register custom language definitions\n    this.registerHandlebarsLanguage();\n  }\n\n  setEditorContent(content: string, fileType: string) {\n    if (this.editor) {\n      const language = this.getLanguageFromFileType(fileType);\n      const model = monaco.editor.createModel(content, language);\n      this.editor.setModel(model);\n    }\n  }\n\n  setOnChangeCallback(callback: (value: string) => void) {\n    this.onChangeCallback = callback;\n  }\n\n  private getLanguageFromFileType(fileType: string): string {\n    switch (fileType) {\n      case 'hbs':\n        return 'handlebars';\n      case 'css':\n      case 'scss':\n        return 'css';\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      default:\n        return 'html';\n    }\n  }\n\n  private registerHandlebarsLanguage() {\n    // Register Handlebars language for Monaco Editor\n    if (monaco.languages.getLanguages().find((lang: any) => lang.id === 'handlebars')) {\n      return; // Already registered\n    }\n\n    monaco.languages.register({ id: 'handlebars' });\n\n    monaco.languages.setMonarchTokensProvider('handlebars', {\n      tokenizer: {\n        root: [\n          [/\\{\\{\\{/, { token: 'keyword', next: '@handlebars_unescaped' }],\n          [/\\{\\{/, { token: 'keyword', next: '@handlebars' }],\n          [//, 'comment', '@pop'],\n          [/[^-]+/, 'comment'],\n          [/./, 'comment']\n        ],\n\n        doctype: [\n          [/[^>]+/, 'metatag.content'],\n          [/>/, 'metatag', '@pop']\n        ],\n\n        tag: [\n          [/[ \\t\\r\\n]+/, 'white'],\n          [/(\\w+)(\\s*=\\s*)(\"([^\"]*)\")/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/(\\w+)(\\s*=\\s*)('([^']*)')/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/\\w+/, 'attribute.name'],\n          [/>/, 'delimiter', '@pop']\n        ]\n      }\n    });\n\n    monaco.languages.setLanguageConfiguration('handlebars', {\n      comments: {\n        blockComment: ['']\n      },\n      brackets: [\n        [''],\n        ['{{', '}}'],\n        ['{{{', '}}}']\n      ],\n      autoClosingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ],\n      surroundingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ]\n    });\n  }\n\n  destroy() {\n    if (this.editor) {\n      this.editor.dispose();\n      this.editor = null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplatePlaygroundModule.html":{"url":"modules/TemplatePlaygroundModule.html","title":"module - TemplatePlaygroundModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TemplatePlaygroundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            documentation/template-playground/template-playground.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HbsRenderService\n                        \n                        \n                            TemplateEditorService\n                        \n                        \n                            ZipExportService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TemplatePlaygroundComponent } from './template-playground.component';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\n@NgModule({\n  declarations: [\n    TemplatePlaygroundComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TemplateEditorService,\n    ZipExportService,\n    HbsRenderService\n  ],\n  bootstrap: [TemplatePlaygroundComponent]\n})\nexport class TemplatePlaygroundModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tokens.html":{"url":"interfaces/Tokens.html","title":"interface - Tokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService as NestJwtService } from '@nestjs/jwt';\n\nexport interface JwtPayload {\n  sub: string;\n  email: string;\n  role: string;\n}\n\nexport interface Tokens {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: number;\n}\n\n@Injectable()\nexport class JwtAuthService {\n  constructor(\n    private readonly jwtService: NestJwtService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async generateTokens(payload: JwtPayload): Promise {\n    try {\n      const accessToken = await this.jwtService.signAsync(payload);\n      const refreshToken = await this.jwtService.signAsync(payload, {\n        expiresIn: this.configService.get(\n          'JWT_REFRESH_EXPIRES_IN',\n          '7d',\n        ),\n      });\n\n      return {\n        accessToken,\n        refreshToken,\n        expiresIn: this.parseExpiresIn(\n          this.configService.get('JWT_EXPIRES_IN', '15md'),\n        ),\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async verifyToken(token: string): Promise {\n    try {\n      return await this.jwtService.verifyAsync(token);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async refreshToken(refreshToken: string): Promise {\n    try {\n      const payload = await this.verifyToken(refreshToken);\n      return this.generateTokens(payload);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private parseExpiresIn(expiresIn: string): number {\n    const unit = expiresIn.slice(-1);\n    const value = parseInt(expiresIn.slice(0, -1));\n\n    switch (unit) {\n      case 's':\n        return value * 1000;\n      case 'm':\n        return value * 60 * 1000;\n      case 'h':\n        return value * 60 * 60 * 1000;\n      case 'd':\n        return value * 24 * 60 * 60 * 1000;\n      default:\n        return 15 * 60 * 1000;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                emailVerifiedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isEmailVerified\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        emailVerifiedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User verified at which time', example: 'John'})@IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User first name', example: 'John'})@IsString()@MinLength(2)@IsOptional()@Matches(/^[a-zA-Z]+$/, {message: 'First name must contain letters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User is active or not', example: 'John'})@IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isEmailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User verified or not'})@IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@IsOptional()@Matches(/^[a-zA-Z]+$/, {message: 'Last name must contain letters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User phone number', example: '+1234567890'})@IsOptional()@IsPhoneNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: UserRole, description: 'User role', example: undefined})@IsOptional()@IsEnum(UserRole)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { UserRole } from '../entities/user.entity';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @ApiProperty({\n    description: 'User first name',\n    example: 'John',\n  })\n  @IsString()\n  @MinLength(2)\n  @IsOptional()\n  @Matches(/^[a-zA-Z]+$/, {\n    message: 'First name must contain letters',\n  })\n  firstName?: string;\n\n  @IsString()\n  @MinLength(2)\n  @IsOptional()\n  @Matches(/^[a-zA-Z]+$/, {\n    message: 'Last name must contain letters',\n  })\n  lastName?: string;\n\n  @ApiProperty({\n    enum: UserRole,\n    description: 'User role',\n    example: UserRole.USER,\n  })\n  @IsOptional()\n  @IsEnum(UserRole)\n  role?: UserRole;\n\n  @ApiProperty({\n    description: 'User phone number',\n    example: '+1234567890',\n  })\n  @IsOptional()\n  @IsPhoneNumber()\n  phoneNumber?: string;\n\n  @ApiProperty({\n    description: 'User verified or not',\n  })\n  @IsBoolean()\n  @IsOptional()\n  isEmailVerified?: boolean;\n\n  @ApiProperty({\n    description: 'User verified at which time',\n    example: 'John',\n  })\n  @IsBoolean()\n  @IsOptional()\n  emailVerifiedAt?: Date;\n\n  @ApiProperty({\n    description: 'User is active or not',\n    example: 'John',\n  })\n  @IsBoolean()\n  @IsOptional()\n  isActive?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                emailVerifiedAt\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                    \n                                isEmailVerified\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                otps\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User email address', example: 'user@example.com'})@Column({unique: true, name: 'email'})@Index()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emailVerifiedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, name: 'email_verified_al'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User first name', example: 'John'})@Column({name: 'first_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether the user is active', example: true, default: true})@Column({default: false, name: 'is_active'})@IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        isEmailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false, name: 'is_email_verified'})@IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User last name', example: 'Doe'})@Column({name: 'last_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        otps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Otp[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, otp => otp.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User password (hashed)', example: '$2b$12$hashedpassword', writeOnly: true})@Column({name: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User phone number', example: '+1234567890'})@Column({nullable: true, name: 'phone_number'})@IsPhoneNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: UserRole, description: 'User role', example: undefined})@Column({name: 'role', type: 'enum', enum: UserRole, default: undefined})@IsEnum(UserRole)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEmail,\n  IsEnum,\n  IsOptional,\n  IsPhoneNumber,\n} from 'class-validator';\nimport { Otp } from '../../auth/entities/otp.entity';\nimport { BaseEntity } from '../../common/entities/base.entity';\nimport { Column, Entity, Index, OneToMany } from 'typeorm';\n\nexport enum UserRole {\n  ADMIN = 'admin',\n  USER = 'user',\n}\n\n@Entity('users')\nexport class User extends BaseEntity {\n  @ApiProperty({\n    description: 'User email address',\n    example: 'user@example.com',\n  })\n  @Column({ unique: true, name: 'email' })\n  @Index()\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    description: 'User first name',\n    example: 'John',\n  })\n  @Column({ name: 'first_name' })\n  firstName: string;\n\n  @ApiProperty({\n    description: 'User last name',\n    example: 'Doe',\n  })\n  @Column({ name: 'last_name' })\n  lastName: string;\n\n  @ApiProperty({\n    description: 'User password (hashed)',\n    example: '$2b$12$hashedpassword',\n    writeOnly: true,\n  })\n  @Column({ name: 'password' })\n  password: string;\n\n  @ApiProperty({\n    enum: UserRole,\n    description: 'User role',\n    example: UserRole.USER,\n  })\n  @Column({\n    name: 'role',\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.USER,\n  })\n  @IsEnum(UserRole)\n  role: UserRole;\n\n  @ApiPropertyOptional({\n    description: 'Whether the user is active',\n    example: true,\n    default: true,\n  })\n  @Column({ default: false, name: 'is_active' })\n  @IsBoolean()\n  @IsOptional()\n  isActive: boolean;\n\n  @ApiProperty({\n    description: 'User phone number',\n    example: '+1234567890',\n  })\n  @Column({ nullable: true, name: 'phone_number' })\n  @IsPhoneNumber()\n  @IsOptional()\n  phoneNumber?: string;\n\n  @Column({ default: false, name: 'is_email_verified' })\n  @IsBoolean()\n  @IsOptional()\n  isEmailVerified: boolean;\n\n  @Column({ nullable: true, name: 'email_verified_al' })\n  emailVerifiedAt: Date;\n\n  @ApiProperty({\n    description: 'User full name',\n    example: 'John doe',\n  })\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n\n  @OneToMany(() => Otp, (otp) => otp.user)\n  otps: Otp[];\n  constructor(partial: Partial) {\n    super();\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.repository.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.repository.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserRepository {\n  constructor(\n    @InjectRepository(User) private readonly userRepository: Repository,\n  ) {}\n\n  async createUser(userData: Partial): Promise {\n    const user = this.userRepository.create(userData);\n    return this.userRepository.save(user);\n  }\n  async findByEmail(email: string): Promise {\n    return this.userRepository.findOne({ where: { email } });\n  }\n  async update(id: string, userData: Partial) {\n    return this.userRepository.update(id, userData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponseDto.html":{"url":"classes/UserResponseDto.html","title":"class - UserResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                fullName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: any)\n                    \n                \n                        \n                            \n                                Defined in src/users/dto/user-response.dto.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Creation timestamp', example: '2023-01-01T00:00:00.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-response.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User email address', example: 'user@example.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-response.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User first name', example: 'john'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-response.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User full name', example: 'John doe'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-response.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User ID', example: '123e4567-e89b-12d3-a456-426614174000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'whether the user is active or not', example: 'true'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-response.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User last name', example: 'doe'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-response.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User phone number', example: '+1234567890'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-response.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: UserRole, description: 'User role', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-response.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last update timestamp', example: '2023-01-01T00:00:00.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-response.dto.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { UserRole } from '../entities/user.entity';\n\nexport class UserResponseDto {\n  @ApiProperty({\n    description: 'User ID',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  id: string;\n\n  @ApiProperty({\n    description: 'User email address',\n    example: 'user@example.com',\n  })\n  email: string;\n\n  @ApiProperty({ description: 'User first name', example: 'john' })\n  firstName: string;\n\n  @ApiProperty({ description: 'User last name', example: 'doe' })\n  lastName: string;\n\n  @ApiProperty({\n    description: 'User full name',\n    example: 'John doe',\n  })\n  fullName: string;\n\n  @ApiProperty({\n    enum: UserRole,\n    description: 'User role',\n    example: UserRole.USER,\n  })\n  role: UserRole;\n\n  @ApiProperty({\n    description: 'User phone number',\n    example: '+1234567890',\n  })\n  phoneNumber?: string;\n\n  @ApiProperty({\n    description: 'whether the user is active or not',\n    example: 'true',\n  })\n  isActive: boolean;\n\n  @ApiProperty({\n    description: 'Creation timestamp',\n    example: '2023-01-01T00:00:00.000Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Last update timestamp',\n    example: '2023-01-01T00:00:00.000Z',\n  })\n  updatedAt: Date;\n\n  constructor(user: any) {\n    this.id = user.id;\n    this.email = user.email;\n    this.firstName = user.firstName;\n    this.lastName = user.lastName;\n    this.fullName = `${user.firstName} ${user.lastName}`;\n    this.role = user.role;\n    this.isActive = user.isActive;\n    this.phoneNumber = user.phoneNumber;\n    this.createdAt = user.createdAt;\n    this.updatedAt = user.updatedAt;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserRepository \n\nUserRepository \n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUserRepository  -->\n\nUsersModule->UserRepository \n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { UserRepository } from './users.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService, UserRepository],\n  exports: [UsersService, UserRepository],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(signupDto: SignupDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signupDto\n                                            \n                                                            SignupDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { UserRepository } from './users.repository';\nimport { User } from './entities/user.entity';\nimport { SignupDto } from 'src/auth/dto/signup.dts';\n\n@Injectable()\nexport class UsersService {\n  constructor(private readonly userRepository: UserRepository) {}\n  async create(signupDto: SignupDto) {\n    try {\n      const { password } = signupDto;\n      const salt = parseInt(process.env.SALT || '', 10) || 12;\n      const hashedPassword = await bcrypt.hash(password, salt);\n      const userData = { ...signupDto, password: hashedPassword };\n      return this.userRepository.createUser(userData);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  findAll() {\n    return `This action returns all users`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: string, updateUserDto: UpdateUserDto): Promise {\n    try {\n      return this.userRepository.update(id, updateUserDto);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n  findByEmail(email: string): Promise {\n    try {\n      return this.userRepository.findByEmail(email);\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errors/custom.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AppError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                details\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: any)\n                    \n                \n                        \n                            \n                                Defined in src/errors/custom.errors.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         AppError\n\n                            \n                        \n                    \n                        \n                                Defined in         AppError:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class AppError extends Error {\n  constructor(\n    public message: string,\n    public statusCode: number,\n    public errorCode: string,\n    public details?: any,\n  ) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n// Specific error classes\nexport class DatabaseError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'DATABASE_ERROR', details);\n  }\n}\n\nexport class ValidationError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.BAD_REQUEST, 'VALIDATION_ERROR', details);\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message: string = 'Authentication failed') {\n    super(message, HttpStatus.UNAUTHORIZED, 'AUTHENTICATION_ERROR');\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message: string = 'Not authorized') {\n    super(message, HttpStatus.FORBIDDEN, 'AUTHORIZATION_ERROR');\n  }\n}\n\nexport class NotFoundError extends AppError {\n  constructor(resource: string = 'Resource') {\n    super(`${resource} not found`, HttpStatus.NOT_FOUND, 'NOT_FOUND_ERROR');\n  }\n}\n\nexport class EmailError extends AppError {\n  constructor(message: string, details?: any) {\n    super(message, HttpStatus.INTERNAL_SERVER_ERROR, 'EMAIL_ERROR', details);\n  }\n}\n\nexport class ConflictError extends AppError {\n  constructor(message: string) {\n    super(message, HttpStatus.CONFLICT, 'CONFLICT_ERROR');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyEmailDto.html":{"url":"classes/VerifyEmailDto.html","title":"class - VerifyEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/verify-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                otp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@example.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/verify-email.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1233456', description: '6-digit Otp'})@IsString()@Length(6, 6, {message: 'OTP must be exactly 6 digits'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/verify-email.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, Length } from 'class-validator';\n\nexport class VerifyEmailDto {\n  @ApiProperty({ example: 'user@example.com' })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ example: '1233456', description: '6-digit Otp' })\n  @IsString()\n  @Length(6, 6, { message: 'OTP must be exactly 6 digits' })\n  otp: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipExportService.html":{"url":"injectables/ZipExportService.html","title":"injectable - ZipExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            documentation/template-playground/zip-export.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                downloadBlob\n                            \n                            \n                                exportTemplates\n                            \n                            \n                                    Private\n                                generateReadme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        downloadBlob\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadBlob(blob: Blob, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTemplates\n                        \n                    \n                \n            \n            \n                \nexportTemplates(files: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateReadme\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateReadme()\n                \n            \n\n\n                    \n                        \n                            Defined in documentation/template-playground/zip-export.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const JSZip: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZipExportService {\n\n  exportTemplates(files: any[]) {\n    const zip = new JSZip();\n\n    // Add all template files to the ZIP\n    files.forEach(file => {\n      zip.file(file.path, file.content);\n    });\n\n    // Add a README with instructions\n    const readme = this.generateReadme();\n    zip.file('README.md', readme);\n\n    // Generate and download the ZIP file\n    zip.generateAsync({ type: 'blob' })\n      .then((content: Blob) => {\n        this.downloadBlob(content, 'compodoc-templates.zip');\n      });\n  }\n\n  private generateReadme(): string {\n    return `# Compodoc Custom Templates\n\nThis ZIP file contains customized templates for Compodoc documentation generation.\n\n## Contents\n\n- **Templates** (\\`.hbs\\` files): Handlebars templates for generating documentation pages\n- **Styles** (\\`.css\\` files): Stylesheets for customizing the appearance\n- **Scripts** (\\`.js\\` files): JavaScript files for additional functionality\n\n## Usage\n\n1. Extract this ZIP file to a directory on your system\n2. Use the \\`--templates\\` flag when running Compodoc to specify the path to your custom templates:\n\n   \\`\\`\\`bash\n   compodoc -p tsconfig.json --templates ./path/to/custom/templates/\n   \\`\\`\\`\n\n## Template Structure\n\n- \\`page.hbs\\` - Main page template\n- \\`partials/\\` - Directory containing partial templates\n- \\`styles/\\` - Directory containing CSS files\n- \\`js/\\` - Directory containing JavaScript files\n\n## Customization Tips\n\n1. **Templates**: Use Handlebars syntax to customize the HTML structure\n2. **Styles**: Modify CSS to change colors, fonts, layout, etc.\n3. **Scripts**: Add custom JavaScript functionality\n\n## Backup\n\nAlways keep a backup of your original templates before making changes.\n\n## Documentation\n\nFor more information about customizing Compodoc templates, visit:\nhttps://compodoc.app/guides/template-customization.html\n\nGenerated by Compodoc Template Playground\n`;\n  }\n\n  private downloadBlob(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.style.display = 'none';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            injectable\n            HbsRenderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        documentation/template-playground/hbs-render.service.ts\n            \n            variable\n            Handlebars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            injectable\n            TemplateEditorService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-editor.service.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            component\n            TemplatePlaygroundComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            CompoDocConfig\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/template-playground.component.ts\n            \n            interface\n            Template\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            injectable\n            ZipExportService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        documentation/template-playground/zip-export.service.ts\n            \n            variable\n            JSZip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/auth/dto/auth-response.dto.ts\n            \n            class\n            AuthResponseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/dto/resend-otp.dto.ts\n            \n            class\n            ResendOtpDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/auth/dto/signup.dts.ts\n            \n            class\n            SignupDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/auth/dto/verify-email.dto.ts\n            \n            class\n            VerifyEmailDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/entities/otp.entity.ts\n            \n            entity\n            Otp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/jwt.service.ts\n            \n            injectable\n            JwtAuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/auth/jwt.service.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/auth/jwt.service.ts\n            \n            interface\n            Tokens\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/auth/otp.repository.ts\n            \n            injectable\n            OtpRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/auth/otp.service.ts\n            \n            injectable\n            OtpService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/common/dto/pagination.dto.ts\n            \n            class\n            PaginatedResponseDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/common/dto/pagination.dto.ts\n            \n            class\n            PaginationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/common/entities/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/config/configuration.ts\n            \n            variable\n            createDatabaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/typeorm.config.ts\n            \n            variable\n            dataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/typeorm.config.ts\n            \n            variable\n            dataSourceOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/config/typeorm.config.ts\n            \n            variable\n            nestConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/core/process-handlers.ts\n            \n            class\n            ProcessHandlers\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/errors/custom.errors.ts\n            \n            class\n            AppError\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/errors/custom.errors.ts\n            \n            class\n            AuthenticationError\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/errors/custom.errors.ts\n            \n            class\n            AuthorizationError\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/errors/custom.errors.ts\n            \n            class\n            ConflictError\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/errors/custom.errors.ts\n            \n            class\n            DatabaseError\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/errors/custom.errors.ts\n            \n            class\n            EmailError\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/errors/custom.errors.ts\n            \n            class\n            NotFoundError\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/errors/custom.errors.ts\n            \n            class\n            ValidationError\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/errors/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/exceptions/http-exception.filter.ts\n            \n            class\n            AppHttpException\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/exceptions/http-exception.filter.ts\n            \n            class\n            AuthException\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/exceptions/http-exception.filter.ts\n            \n            class\n            DatabaseException\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/exceptions/http-exception.filter.ts\n            \n            class\n            EmailException\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/filters/global-exception.filter.ts\n            \n            class\n            GlobalExceptionFilter\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/mailer/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/migrations/1758745851583-CreateUserTable.ts\n            \n            class\n            CreateUserTable1758745851583\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/migrations/1758794208948-AddEmailVerification.ts\n            \n            class\n            AddEmailVerification1758794208948\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/migrations/1758820167397-AddOtpForeignKey.ts\n            \n            class\n            AddOtpForeignKey1758745851584\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/swagger.ts\n            \n            variable\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/swagger.ts\n            \n            variable\n            setupValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/users/dto/user-response.dto.ts\n            \n            class\n            UserResponseDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/users/users.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/class-transformer : ^0.4.0\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            bcrypt : ^6.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            ejs : ^3.1.10\n        \n            nodemailer : ^7.0.6\n        \n            otp-generator : ^4.0.1\n        \n            pg : ^8.16.3\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.27\n        \n            typeorm-naming-strategies : ^4.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/entities/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MyMailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TemplatePlaygroundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ErrorsModule\n\n\n\ncluster_ErrorsModule_exports\n\n\n\ncluster_ErrorsModule_providers\n\n\n\ncluster_MyMailerModule\n\n\n\ncluster_MyMailerModule_exports\n\n\n\ncluster_MyMailerModule_providers\n\n\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtAuthService \n\nJwtAuthService \n\nJwtAuthService  -->\n\nAuthModule->JwtAuthService \n\n\n\n\n\nErrorsModule\n\nErrorsModule\n\nAuthModule -->\n\nErrorsModule->AuthModule\n\n\n\nAppModule -->\n\nErrorsModule->AppModule\n\n\n\n\n\nErrorHandlerService \n\nErrorHandlerService \n\nErrorHandlerService  -->\n\nErrorsModule->ErrorHandlerService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserRepository \n\nUserRepository \n\nUserRepository  -->\n\nUsersModule->UserRepository \n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nMyMailerModule\n\nMyMailerModule\n\nAuthModule -->\n\nMyMailerModule->AuthModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMyMailerModule->MailService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtAuthService\n\nJwtAuthService\n\nAuthModule -->\n\nJwtAuthService->AuthModule\n\n\n\n\n\nOtpRepository\n\nOtpRepository\n\nAuthModule -->\n\nOtpRepository->AuthModule\n\n\n\n\n\nOtpService\n\nOtpService\n\nAuthModule -->\n\nOtpService->AuthModule\n\n\n\n\n\nErrorHandlerService\n\nErrorHandlerService\n\nErrorsModule -->\n\nErrorHandlerService->ErrorsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMyMailerModule -->\n\nMailService->MyMailerModule\n\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    28 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createDatabaseConfig   (src/.../configuration.ts)\n                        \n                        \n                            dataSource   (src/.../typeorm.config.ts)\n                        \n                        \n                            dataSourceOptions   (src/.../typeorm.config.ts)\n                        \n                        \n                            Handlebars   (documentation/.../hbs-render.service.ts)\n                        \n                        \n                            JSZip   (documentation/.../zip-export.service.ts)\n                        \n                        \n                            monaco   (documentation/.../template-editor.service.ts)\n                        \n                        \n                            nestConfig   (src/.../typeorm.config.ts)\n                        \n                        \n                            setupSwagger   (src/.../swagger.ts)\n                        \n                        \n                            setupValidation   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDatabaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): TypeOrmModuleOptions => {\n  const isProduction = process.env.NODE_ENV === 'production';\n\n  return {\n    type: 'postgres',\n    host: process.env.DB_HOST || 'localhost',\n    port: parseInt(process.env.DB_PORT || '', 10) || 5432,\n    username: process.env.DB_USERNAME || 'postgres',\n    password: process.env.DB_PASSWORD || 'password',\n    database: process.env.DB_DATABASE || 'ecommerce',\n    entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n    synchronize: process.env.DB_SYNCHRONIZE === 'false' || !isProduction,\n    logging: process.env.DB_LOGGING === 'true' || !isProduction,\n    ssl: isProduction ? { rejectUnauthorized: false } : false,\n    namingStrategy: new SnakeNamingStrategy(),\n    extra: {\n      connnectionTimeoutMills: 10000,\n      idleTimeoutMillis: 30000,\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/config/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource(dataSourceOptions as any)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourceOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  host: nestConfig.host,\n  port: nestConfig.port,\n  username: nestConfig.username,\n  password: nestConfig.password,\n  database: nestConfig.database,\n  entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n  migrations: [__dirname + '/../migrations/*{.ts,.js}'],\n  synchronize: false, // Always false for migrations\n  logging: nestConfig.logging,\n  ssl: nestConfig.ssl,\n  namingStrategy: new SnakeNamingStrategy(),\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nestConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDatabaseConfig() as any\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/hbs-render.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Handlebars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/zip-export.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JSZip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    documentation/template-playground/template-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        monaco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication): void => {\n  const config = new DocumentBuilder()\n    .setTitle('Ecommerce Api with postgres')\n    .setDescription('Complete Rest API with swagger documentation')\n    .setVersion('1.0')\n    .addBearerAuth(\n      {\n        type: 'http',\n        scheme: 'bearer',\n        bearerFormat: 'JWT',\n        name: 'JWt',\n        description: 'Enter JWT token',\n      },\n      'JWT-auth',\n    )\n    .addServer('http://localhost:3000', 'Development Server')\n    .addServer('something', 'Production Server')\n    .build();\n\n  const document = SwaggerModule.createDocument(app, config);\n\n  SwaggerModule.setup('api', app, document, {\n    swaggerOptions: {\n      persistAuthorization: true,\n      tagsSorter: 'alpha',\n      operationsSorter: 'alpha',\n      docExpansion: 'none',\n      filter: true,\n    },\n    customCss: `\n  .topbar {\n  display:none;\n  }\n  .swagger-ui .info {margin: 20px 0;}\n  `,\n    customSiteTitle: 'Ecommerce Api Documentation',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupValidation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication): void => {\n  app.useGlobalPipes(\n    new ValidationPipe({\n      whitelist: true,\n      forbidNonWhitelisted: true,\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
